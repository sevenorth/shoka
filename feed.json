{
    "version": "https://jsonfeed.org/version/1",
    "title": "優萌初華",
    "subtitle": "有夢書架",
    "icon": "https://shoka.lostyu.me/images/favicon.ico",
    "description": "琉璃的医学 & 编程笔记",
    "home_page_url": "https://shoka.lostyu.me",
    "items": [
        {
            "id": "https://shoka.lostyu.me/computer-science/mse/itmd-511/chapter-19-22/",
            "url": "https://shoka.lostyu.me/computer-science/mse/itmd-511/chapter-19-22/",
            "title": "Chapter 19 & 22",
            "date_published": "2022-04-27T04:26:23.000Z",
            "content_html": "<p>Chapter 19 – Systems engineering<br />\nChapter 22 – Project management</p>\n<h1 id=\"quiz\"><a class=\"anchor\" href=\"#quiz\">#</a> Quiz</h1>\n<ol>\n<li class=\"quiz true\">\n<p>Systems that include software fall into two categories. Technical computer based systems, and Sociotechnical systems.</p>\n</li>\n<li class=\"quiz\">\n<p>Which of stage is not part of the lifetime of large, complex systems</p>\n<ul class=\"options\">\n<li class=\"correct\">Theoretical design</li>\n<li>Procurrment/Acquisition</li>\n<li>Development</li>\n<li>Operation</li>\n</ul>\n</li>\n<li class=\"quiz true\">\n<p>The involvement of a range of professional disciplines is essential because of the different types of components in complex systems</p>\n</li>\n<li class=\"quiz false\">\n<p>Large, complex systems usually have a short lifetime</p>\n</li>\n<li class=\"quiz\">\n<p>During systems <span class=\"gap\"></span> you take the independently developed subsystems and put them together to make up a complete system.</p>\n<ul class=\"options\">\n<li class=\"correct\">integration</li>\n<li>development</li>\n<li>engineering</li>\n<li>testing</li>\n</ul>\n</li>\n<li class=\"quiz true\">\n<p>Project Managers should regularly assess each of the identified project risks to decide whether or not that risk is becoming more or less probable.</p>\n</li>\n<li class=\"quiz true\">\n<p>People are motivated by interaction with other people, by the recognition of management and their peers, and by being given opportunities for personal development.</p>\n</li>\n<li class=\"quiz false\">\n<p>The best size for a software engineering group is 10 to 12 members, and they should never have more than 20 members.</p>\n</li>\n<li class=\"quiz false\">\n<p>It is not expensive to recruit and retain good people. If someone is good, they should be happy with their job and not require more.</p>\n</li>\n<li class=\"quiz true\">\n<p>“to maintain a coherent and well-functioning development team” is one of the common important goals for projects</p>\n</li>\n</ol>\n<h1 id=\"exercise\"><a class=\"anchor\" href=\"#exercise\">#</a> Exercise</h1>\n<ol>\n<li class=\"quiz essay\">\n<p>Give two examples of government functions that are supported by complex sociotechnical systems and explain why, in the foreseeable future, these functions cannot be completely automated.</p>\n<blockquote>\n<p>The systems which are very complex and not understandable as a whole are known as sociotechnical systems. These systems are divided into layers for better understanding. Most of the systems used in government organizations are sociotechnical systems.<br />\nExamples of socio-technical systems, and the reasons why they cannot be automated in the future are as follows:</p>\n<ol>\n<li>The weather system used by government organizations is a best example of sociotechnical systems. This system is dependent to satellite communication and practical knowledge of individual about weather. This system can’t be fully automated because sometimes application program can’t read proper conditions to input data and require expert knowledge about weather.</li>\n<li>The security system used to secure border of any country is also an example of sociotechnical systems. This system can’t be fully automated because; some border areas are in dispute conditions and government is not able to apply these systems over there due to some conditions.</li>\n</ol>\n</blockquote>\n</li>\n<li class=\"quiz essay\">\n<p>Explain briefly why the involvement of a range of professional disciplines is essential in systems engineering.</p>\n<blockquote>\n<p>An important difference between systems and software engineering is the involvement of a range of professionals throughout the lifetime of the system. These include engineers who may be involved in hardware and software design, system end-users, managers who are concerned with organizational issues, and experts in the system’s application domain.<br />\nThe involvement of a range of professional disciplines is essential because of the different types of components in complex systems. However, differences and misunderstandings between disciplines can lead to inappropriate design decisions. These poor decisions can delay the system’s development or make it less suitable for its intended purpose. Interdisciplinary working can be successful only if enough time is available for these issues to be discussed and resolved. This requires regular face-to-face discussions and a flexible approach from everyone involved in the systems engineering process.</p>\n</blockquote>\n</li>\n<li class=\"quiz essay\">\n<p>Complex sociotechnical systems lead to three important characteristics. What are they? Explain each in brief</p>\n<blockquote>\n<p>The complexity leads to three important characteristics of sociotechnical systems:</p>\n<ol>\n<li>They have emergent properties that are properties of the system as a whole, rather than associated with individual parts of the system. Emergent properties depend on both the system components and the relationships between them. Some of these relationships only come into existence when the system is integrated from its components, so the emergent properties can only be evaluated at that time. Security and dependability are examples of important emergent system properties.</li>\n<li>They are nondeterministic, so that when presented with a specific input, they may not always produce the same output. The system’s behavior depends on the human operators, and people do not always react in the same way. Furthermore, use of the system may create new relationships between the system components and hence change its emergent behavior.</li>\n<li>The system’s success criteria are subjective rather than objective. The extent to which the system supports organizational objectives does not just depend on the system itself. It also depends on the stability of these objectives, the relationships and conflicts between organizational objectives, and how people in the organization interpret these objectives. New management may reinterpret the organizational objectives that a system was designed to support so that a “successful” system may then be seen as no longer fit for its intended purpose.</li>\n</ol>\n</blockquote>\n</li>\n<li class=\"quiz essay\">\n<p>Why is system integration a particularly critical part of the systems development process? Suggest three sociotechnical issues that may cause difficulties in the system integration process.</p>\n<blockquote>\n<p>System integration is particularly critical because it is at the integration stage that incompatibilities between the different sub-systems or components may come to light. Generally, the first view that a customer has of a system is after integration.</p>\n<p>Sociotechnical difficulties that may arise are:</p>\n<ol>\n<li>Refusal of parts of the team to recognize problems. Some developers may refuse to recognize that their software is faulty and may try to pass the blame for integration problems to people in different organizations. Different organizations in the integration team are, essentially, trying to transfer the costs to other organizations.</li>\n<li>Cultural problems due to different organizational approaches to integration. Integration is perhaps the first time that teams have had to work closely together and their organizations may use different processes for system integration. Reconciling these processes can be difficult.</li>\n<li>Organizations may be at different stages in their project involvement. For some organizations, integration may be their last project activity and their objective is simply to complete and sign off the process as quickly as possible. For other organizations, there may be later work to be done so they may have a longer-term perspective and wish to spend more time on the integration process.</li>\n</ol>\n</blockquote>\n</li>\n<li class=\"quiz essay\">\n<p>Why is system evolution inherently costly?</p>\n<blockquote>\n<p>System evolution is inherently costly for several reasons:</p>\n<ol>\n<li>Proposed changes have to be analyzed very carefully from a business and a technical perspective. Changes have to contribute to the goals of the system and should not simply be technically motivated.</li>\n<li>Because subsystems are never completely independent, changes to one subsystem may have side-effects that adversely affect the performance or behavior of other subsystems. Consequent changes to these subsystems may therefore be needed.</li>\n<li>The reasons for original design decisions are often unrecorded. Those responsible for the system evolution have to work out why particular design decisions were made.</li>\n<li>As systems age, their structure becomes corrupted by change, so the costs of making further changes increases.</li>\n</ol>\n</blockquote>\n</li>\n<li class=\"quiz essay\">\n<p>Explain why the intangibility of software systems poses special problems for software project management.</p>\n<blockquote>\n<p>Software cannot be inspected like a shipbuilding or civil engineering project where it is possible to see which parts of the structure are unfinished. Software is invisible. This means that it cannot be seen or touched.</p>\n<p>Some important goals of software management are to deliver the software within the specified time and budget and to meet all the requirements of the customer. However, because software is intangible, it is difficult for software project managers to say exactly what the state of development is. They can't get a sense of progress simply by looking at the artifacts being built. Instead, they rely on the evidence provided by others to review the progress of the work.</p>\n</blockquote>\n</li>\n<li class=\"quiz essay\">\n<p>Explain how company size and software size are factors that affect software project management.</p>\n<blockquote>\n<p>Small companies can operate with informal management and team communications and do not need formal policies and management structures. They have less management overhead than larger organizations. In larger organizations, management hierarchies, formal reporting and budgeting, and approval processes must be followed.<br />\nSmall systems can be developed by a small team, which can get together in the same room to discuss progress and other management issues. Large systems usually need multiple development teams that may be geographically distributed and in different companies. The project manager has to coordinate the activities of these teams and arrange for them to communicate with each other.</p>\n</blockquote>\n</li>\n<li class=\"quiz essay\">\n<p>What is risk monitoring? How can risks be monitored? List a few examples of types of risks and their potential indicators.</p>\n<blockquote>\n<p>Risk monitoring is the process of checking that your assumptions about the product, process, and business risks have not changed. You should regularly assess each of the identified risks to decide whether or not that risk is becoming more or less probable. You should also think about whether or not the effects of the risk have changed. To do this, you have to look at other factors, such as the number of requirements change requests, which give you clues about the risk probability and its effects. These factors are obviously dependent on the types of risk. Some examples of factors that may be helpful in assessing these risk types are shown as bellow.<br />\nRisk type &amp; Potential indicators</p>\n<ul>\n<li>Estimation - Failure to meet agreed schedule; failure to clear reported defects.</li>\n<li>Organizational - Organizational gossip; lack of action by senior management.</li>\n<li>People - Poor staff morale; poor relationships among team members; high staff turnover.</li>\n<li>Requirements - Many requirements change requests; customer complaints.</li>\n<li>Technology - Late delivery of hardware or support software; many reported technology problems.</li>\n<li>Tools - Reluctance by team members to use tools; complaints about software tools; requests for faster computers/more memory, and so on.</li>\n</ul>\n</blockquote>\n</li>\n<li class=\"quiz essay\">\n<p>Explain why keeping all members of a group informed about progress and technical decisions in a project can improve group cohesiveness.</p>\n<blockquote>\n<p>The benefits of creating a cohesive group are:</p>\n<ol>\n<li>The group can establish its own quality standards Because these standards are established by consensus, they are more likely to be observed than external standards imposed on the group.</li>\n<li>Individuals learn from and support each other Group members learn by working together. Inhibitions caused by ignorance are minimized as mutual learning is encouraged.</li>\n<li>Knowledge is shared Continuity can be maintained if a group member leaves. Others in the group can take over critical tasks and ensure that the project is not unduly disrupted.</li>\n<li>Refactoring and continual improvement is encouraged Group members work collectively to deliver high-quality results and fix problems, irrespective of the individuals who originally created the design or program.</li>\n</ol>\n</blockquote>\n</li>\n<li class=\"quiz essay\">\n<p>Your manager asks you to deliver software to a schedule that you know can only be met by asking your project team to work unpaid overtime. All team members have young children. Discuss whether you should accept this demand from your manager or whether you should persuade your team to give their time to the organization rather than to their families. What factors might be significant in your decision?</p>\n<blockquote>\n<p>The factor we should consider is the time available for all team members in a project. As a working team, we should make a decision that is right and the same. It has to be everyone's decision, not just mine. Because I can't take all the responsibility for completing this project. If that happens, I will be the one taking the risk if I know it will turn out for the worst. If all the effort and ideas were mine, it wouldn't be called a collective project.</p>\n</blockquote>\n</li>\n</ol>\n",
            "tags": [
                "计算机科学",
                "Master of Software Engineering",
                "ITMD 511. Application Development Methodologies",
                "软件工程"
            ]
        },
        {
            "id": "https://shoka.lostyu.me/computer-science/mse/itmd-511/chapter-17-18/",
            "url": "https://shoka.lostyu.me/computer-science/mse/itmd-511/chapter-17-18/",
            "title": "Chapter 17 & 18",
            "date_published": "2022-04-15T07:15:15.000Z",
            "content_html": "<p>Chapter 17 – Distributed software engineering<br />\nChapter 18 - Service-oriented software engineering</p>\n<h1 id=\"quiz\"><a class=\"anchor\" href=\"#quiz\">#</a> Quiz</h1>\n<ol>\n<li class=\"quiz true\">\n<p>Service-oriented architecture is an approach to software engineering where reusable, standardized services are the basic building blocks for application systems.</p>\n<blockquote>\n<p>Service-Oriented Architecture (SOA) is a style of software design where services are provided to the other components by application components, through a communication protocol over a network. Its principles are independent of vendors and other technologies. In service oriented architecture, a number of services communicate with each other, in one of two ways: through passing data or through two or more services coordinating an activity. This is just one definition of Service-Oriented Architecture. An article on Wikipedia goes into much more detail.</p>\n</blockquote>\n</li>\n<li class=\"quiz false\">\n<p>Service-oriented systems have tightly coupled architectures where service bindings should not change during system execution</p>\n<blockquote>\n<p>Service-oriented architecture promotes <strong>loose</strong> coupling between service consumers and service providers and the idea of a few well-known dependencies between consumers and providers. A system's degree of coupling directly affects its modifiability.</p>\n</blockquote>\n</li>\n<li class=\"quiz true\">\n<p>In a RESTful architecture, everything is represented as a resource.</p>\n<blockquote>\n<p>REST architecture treats every content as a resource. These resources can be Text Files, Html Pages, Images, Videos or Dynamic Business Data. REST Server simply provides access to resources and REST client accesses and modifies the resources. Here each resource is identified by URIs/ Global IDs.</p>\n</blockquote>\n</li>\n<li class=\"quiz\">\n<p>Which is not a fundamental polymorphic operation in a RESTful architecture</p>\n<ul class=\"options\">\n<li>Create</li>\n<li>Read</li>\n<li>Update</li>\n<li class=\"correct\">Remove</li>\n</ul>\n<blockquote>\n<p>REST – a sort of Web-based CRUD (Create, Read, Update, Delete) architecture.</p>\n</blockquote>\n</li>\n<li class=\"quiz\">\n<p>A POST request is used to <span class=\"gap\"></span> a resource</p>\n<ul class=\"options\">\n<li class=\"correct\">Create</li>\n<li>Read</li>\n<li>Delete</li>\n<li>Modify</li>\n</ul>\n<blockquote>\n<p>POST is used to create a resource. It has associated data that defines the resource.<br />\nGET is used to read the value of a resource and return that to the requestor in the specified representation, such as XHTML, that can be rendered in a web browser.<br />\nPUT is used to update the value of a resource.<br />\nDELETE is used to delete the resource.</p>\n</blockquote>\n</li>\n<li class=\"quiz\">\n<p>An important difference between RESTful services and SOAP-based services is that RESTful services are not exclusively <span class=\"gap\"></span>.</p>\n<ul class=\"options\">\n<li class=\"correct\">XML-Based</li>\n<li>URL-Based</li>\n<li>Resource-Based</li>\n<li>Mobile-Based</li>\n</ul>\n<blockquote>\n<p>SOAP needs more bandwidth for its usage whereas REST doesn't need much bandwidth. Comparing SOAP vs REST API, SOAP only works with XML formats whereas REST work with plain text, XML, HTML and JSON. SOAP cannot make use of REST whereas REST can make use of SOAP.</p>\n</blockquote>\n</li>\n<li class=\"quiz true\">\n<p>A problem with RESTful services are there are no standards for RESTful interface description, so service users must rely on informal documentation to understand the interface.</p>\n<blockquote>\n<p>REST is an Architecture, Not a Standard<br />\nWhile HTTP is a standard, REST itself is not. Rather, it's an architectural style that provides constraints that guide API design. Many APIs do not conform to every element of REST, which has caused some to use the term RESTful to describe the most common types of APIs.</p>\n</blockquote>\n</li>\n<li class=\"quiz true\">\n<p>A benefit of distrubuted systems are that they can be scaled to cope with increasing demand</p>\n<blockquote>\n<p>Advantages of Distributed Computing</p>\n<ul>\n<li><strong>Reliability, high fault tolerance</strong>: A system crash on one server does not affect other servers.</li>\n<li><strong>Scalability</strong>: In distributed computing systems you can add more machines as needed.</li>\n<li><strong>Flexibility</strong>: It makes it easy to install, implement and debug new services.</li>\n<li><strong>Fast calculation speed</strong>: A distributed computer system can have the computing power of multiple computers, making it faster than other systems.</li>\n<li><strong>Openness</strong>: Since it is an open system, it can be accessed both locally and remotely.</li>\n<li><strong>High performance</strong>: Compared to centralized computer network clusters, it can provide higher performance and better cost performance.</li>\n</ul>\n</blockquote>\n</li>\n<li class=\"quiz\">\n<p>Client-server systems are distributed systems in which the system is structured into layers, with the presentation layer implemented on a <span class=\"gap\"></span> computer. Servers provide data management, application, and database services.</p>\n<ul class=\"options\">\n<li class=\"correct\">client</li>\n<li>server</li>\n<li>large</li>\n<li>shared</li>\n</ul>\n<blockquote>\n<p>Client–server systems are structured into layers, with the presentation layer implemented on a client computer. Servers provide data management, application and database services. Client-server systems may have several tiers, with different layers of the system distributed to different computers.</p>\n</blockquote>\n</li>\n<li class=\"quiz false\">\n<p>SaaS stands for “Software as a Science”</p>\n<blockquote>\n<p>Chong and Carraro at Microsoft3 define shared software as software-as-a-service (SaaS) deployed as a hosted service and accessed over the Internet. The key features of SaaS are where the programs reside and how they are accessed.</p>\n</blockquote>\n</li>\n<li class=\"quiz\">\n<p>This idea of <span class=\"gap\"></span> involves hosting the software remotely and providing access to it over the Internet.</p>\n<ul class=\"options\">\n<li class=\"correct\">Software as a Service</li>\n<li>Software as a product</li>\n<li>Software as a interface</li>\n<li>Data as a service</li>\n</ul>\n<blockquote>\n<p>Software as a service (SaaS) is a software distribution model in which a cloud provider hosts applications and makes them available to end users over the internet.</p>\n</blockquote>\n</li>\n</ol>\n<h1 id=\"exercise\"><a class=\"anchor\" href=\"#exercise\">#</a> Exercise</h1>\n<ol>\n<li class=\"quiz essay\">\n<p>What do you understand by “scalability”? Discuss the differences between scaling up and scaling out and explain when these different approaches to scalability may be used.</p>\n<blockquote>\n<p>Scalability is the ability of an application to deliver high quality of service as demands on the system increase. It is the ability of the system to cope with increasing numbers of users without reducing the overall quality of service that is delivered to any user.<br />\nScaling out and scaling up can be differentiated in terms of size and cost.<br />\nScaling up means replacing resources in the system with more powerful resources. For example, when database runs out of resources on the current hardware there is no need to make changes to the database instead, the memory in the server may be increased.<br />\nScaling out means adding new resources to the existing system. That means, adding additional servers and so also increasing the number of transactions that can be processed in parallel. For example an extra web server to work along with the existing server.<br />\nScaling out is often more cost effective than scaling up.<br />\nGenerally when considering scalability in the context of SaaS (Software as a Service), scaling out is considered rather than scaling up.</p>\n</blockquote>\n</li>\n<li class=\"quiz essay\">\n<p>Explain why distributed software systems are more complex than centralized software systems, where all of the system functionality is implemented on a single computer.</p>\n<blockquote>\n<p>Distributed software systems are more complex than centralized software systems that run on a single computer. This complexity of distributed software systems arises because,</p>\n<ol>\n<li>It is practically impossible to have a top-down model of control of these systems.</li>\n<li>The nodes in the system that deliver functionality are often independent systems with no single authority in charge of them.</li>\n<li>The network connecting these nodes is a separately managed system.</li>\n<li>It is a complex system in its own right and cannot be controlled by the owners of systems using the network.<br />\nThere is therefore an inherent unpredictability in the operation of distributed systems that has to be taken into account by the system designer.</li>\n</ol>\n</blockquote>\n</li>\n<li class=\"quiz essay\">\n<p>What are the different logical layers in an application with a distributed client–server architecture?</p>\n<blockquote>\n<p>An application with a distributed client-server architecture will be structured into four layers:</p>\n<ol>\n<li>A presentation layer that is concerned with presenting information to the user and managing all user interaction.</li>\n<li>A data-handling layer that manages the data that is passed to and from the client. This layer may implement checks on the data, generate web pages, and so on.</li>\n<li>An application processing layer that is concerned with implementing the logic of the application and so providing the required functionality to end-users.</li>\n<li>A database layer that stores the data and provides transaction management and query services.</li>\n</ol>\n</blockquote>\n</li>\n<li class=\"quiz essay\">\n<p>You have been asked to design a secure system that requires strong authentication and authorization. The system must be designed so that communications between parts of the system cannot be intercepted and read by an attacker. Suggest the most appropriate client-server architecture for this system and, giving the reasons for your answer, propose how functionality should be distributed between the client and the server systems.</p>\n<blockquote>\n<p>When a system is proposed which requires strong authentication and authorization, two-tier client server architecture with fat clients is effective. In this model some of the application processing is carried out on the client and the data management and database functions are implemented on the servers. Data management is carried out straightforward as there is no need to manage the interaction between the client and application processing system.</p>\n<p>Consider an example of bank ATM system, the ATM is the client computer and the server is a mainframe which runs the customer account database. The communication between ATM and server (database) is not direct rather a middleware like teleprocessing monitor is used which organizes communication with remote clients and serializes client transactions for processing by the database. This ensures that transactions are independent and do not interfere with one other and hence attacker cannot intercept the transactions. The system can recover from faults without corrupting the system data because of serial transactions.</p>\n</blockquote>\n</li>\n<li class=\"quiz essay\">\n<p>Your company wishes to move from using desktop applications to accessing the same functionality remotely as services. Identify three risks that might arise and suggest how these risks may be reduced.</p>\n<blockquote>\n<ol>\n<li>Security: The most significant feature which a local application does not have to account for is security; after all, if you’re logged into the computer and able to open the app, you’re probably supposed to be there. However, networked services have no such protection; anyone in the network (which could likely be the global web) may interface with the service. This means that security becomes a significant issue; by having every application user’s information stored and computed within this networked service, it creates a significant potential for a malicious entity to intercept, view, or alter this data; with potentially ruinous effects on the individuals under attack. Therefore, remote services must have significant and extensive security in place, to protect the confidentiality and integrity of its processes. The only way to solve security is to take it seriously. Most likely, all aspects of validation, verification, and communication between client and server will have to be redesigned in order to take advantage of modern network security frameworks; luckily, many of these frameworks are becoming increasingly well-designed and easy to implement, making security approachable as a requirement, despite never being truly solvable.</li>\n<li>Accessibility: If the application has any large calculations which it performs, then these features must be implemented with great caution when put into a networked service. After all, if a client (or number of clients) connects to the service and ask it to run its most computationally intensive functionality, the service must be able to juggle its responsibilities such that no single client monopolizes the service; and that new users will be able to join and still have their user experiences unharmed. To solve this, the application must be converted to utilize a task manager with hierarchies of tasks. This way, core communications can be given priority across all sessions and all users, while the expensive operations can be relegated to be given proportional distribution of the available remaining calculation space. Another option might be to make for ‘fat’ clients; where these heavy calculations are given to the client rather than the server; but this solution might not be available depending on the specifications of the project, and comes with its own issues.</li>\n<li>Concurrency: Many of the core functionalities of the application may be designed to be the exclusive user of a resource at any given time. For instance, opening a file which then stays open until the application is exited, which then overrides the saved file with the one in memory. This functionality, which is fine for the local app, would be ruinous for a networked software with shared resources, as one application may override the changes of another simply by having been opened first and closed last. This may be less significant of a risk if the application utilized network-friendly data storage methods, such as SQL. To address this issue, care must be taken to ensure that there are no concurrency issues for all file/data-based operations. Moreover, data access cannot simply be rewritten to networked equivalents; in some cases the core logic of any given I/O operation may have to be revised.</li>\n</ol>\n</blockquote>\n</li>\n<li class=\"quiz essay\">\n<p>Why is it important to define exceptions in service engineering?</p>\n<blockquote>\n<p>Defining exceptions and how these exceptions can be communicated to service users is particularly important. Service engineers do not know how their services will be used. It is usually unwise to make assumptions that service users will have completely understood the service specification. Input messages may be incorrect, so you should define exceptions that report incorrect inputs to the service client. It is generally good practice in reusable component development to leave all exception handling to the user of the component. Service developers should not impose their views on how exceptions should be handled.</p>\n</blockquote>\n</li>\n<li class=\"quiz essay\">\n<p>Define and give an example of a RESTful service.</p>\n<blockquote>\n<p>REST is an architectural style based on transferring representations of resources from a server to a client. It is the style that underlies the web as a whole and has been used as a much simpler method than SOAP/WSDL for implementing web service interfaces.(Sommerville, 2015)<br />\nIn a RESTful architecture, everything is represented as a resource. Resources have a unique identifier, which is their URL. Resources are a bit like objects, with four fundamental polymorphic operations associated with them:</p>\n<ol>\n<li>Create—bring the resource into existence.</li>\n<li>Read—return a representation of the resource.</li>\n<li>Update—change the value of the resource.</li>\n<li>Delete—make the resource inaccessible.</li>\n</ol>\n<p>The Web is an example of a system that has a RESTful architecture. Web pages are resources, and the unique identifier of a web page is its URL.<br />\nThe web protocols http and https are based on four actions, namely, POST, GET, PUT, and DELETE. These map onto the basic resource operations:</p>\n<ol>\n<li>POST is used to create a resource. It has associated data that defines the resource.</li>\n<li>GET is used to read the value of a resource and return that to the requestor in the specified representation, such as XHTML, that can be rendered in a web browser.</li>\n<li>PUT is used to update the value of a resource.</li>\n<li>DELETE is used to delete the resource.</li>\n</ol>\n</blockquote>\n</li>\n<li class=\"quiz essay\">\n<p>Suggest how the SimpleInterestCalculator service could be implemented as a RESTful service.</p>\n<blockquote>\n<p>REST (REpresentational State Transfer) is an architectural style based on transferring representations of resources from a server to a client. RESTful services are all based around the sacred idea that &quot;everything is represented as resources and can be accessed by an address (URI)&quot;. This means we can think about &quot;creating a calculation&quot; without having to persist the result of that calculation at it's own URL. Your API could look like this:</p>\n<pre><code>Request:\nPOST /calculations\nContent-Type: text/plain\n\n1 + 1\n\nResponse:\n200 OK\nContent-Type: text/plain\n\n2\n</code></pre>\n<p>This has the benefit that you're not passing &quot;content&quot; through the URL, which will break when you try to submit a long calculation through a client or proxy with limited length for URLs. You could also make support different representations for requests and responses.</p>\n</blockquote>\n</li>\n<li class=\"quiz essay\">\n<p>Giving reasons for your answer, suggest two important types of application where you would not recommend the use of service-oriented architecture.</p>\n<blockquote>\n<p>The two important types of application where the use of a service-oriented architecture is not recommended are:</p>\n<ol>\n<li>Embedded applications in devices where a network connection cannot be guaranteed. These are unlikely to make use of services as there is no guarantee that these services will be available when required.</li>\n<li>Real-time applications with stringent deadlines, especially those with lots of user interaction e.g. computer games. In these applications, the performance overhead in coding and decoding XML messages is likely to be unacceptable.</li>\n</ol>\n</blockquote>\n</li>\n</ol>\n",
            "tags": [
                "计算机科学",
                "Master of Software Engineering",
                "ITMD 511. Application Development Methodologies",
                "软件工程"
            ]
        },
        {
            "id": "https://shoka.lostyu.me/computer-science/mse/itmd-511/chapter-15-16/",
            "url": "https://shoka.lostyu.me/computer-science/mse/itmd-511/chapter-15-16/",
            "title": "Chapter 15 & 16",
            "date_published": "2022-04-11T10:37:28.000Z",
            "content_html": "<p>Chapter 15 - Software reuse<br />\nChapter 16 - Component Based SWE</p>\n<h1 id=\"quiz\"><a class=\"anchor\" href=\"#quiz\">#</a> Quiz</h1>\n<ol>\n<li class=\"quiz false\">\n<p>Component-based software engineering is not a reuse-based approach. It is mean to develop systems that are implemented once and solely used for that application.</p>\n</li>\n<li class=\"quiz true\">\n<p>To make independent, distributed components work together, you need middleware support that handles component communications.</p>\n</li>\n<li class=\"quiz true\">\n<p>One of the only ways to meet the demands of secure, dependable, and quickly deployed software is to use component based SWE.</p>\n</li>\n<li class=\"quiz true\">\n<p>At the highest level, there are two types of CBSE processes:</p>\n<ol>\n<li>Development for reuse</li>\n<li>Development with resue</li>\n</ol>\n</li>\n<li class=\"quiz\">\n<p>Which of these are not a method for component composition</p>\n<ul class=\"options\">\n<li>Sequential composition</li>\n<li>Hierarchical composition</li>\n<li>Additive composition</li>\n<li class=\"correct\">Parameter composition</li>\n</ul>\n</li>\n<li class=\"quiz false\">\n<p>Reuse-based software engineering is an approach to development that tries to minimize the reuse of existing software.</p>\n</li>\n<li class=\"quiz essay\">\n<p>Match the following benefit of Software Reuse with its explanation.</p>\n<ol>\n<li>Accelerated development</li>\n</ol>\n<blockquote>\n<p>Bringing a system to market as early as possible is often more important than overall development costs. Reusing software can speed up system production because both development and validation time may be reduced.</p>\n</blockquote>\n<ol start=\"2\">\n<li>Effective use of specialists</li>\n</ol>\n<blockquote>\n<p>Instead of doing the same work over and over again, application specialists can develop reusable software that encapsulates their knowledge.</p>\n</blockquote>\n<ol start=\"3\">\n<li>Increased dependability</li>\n</ol>\n<blockquote>\n<p>Reused software, which has been tried and tested in working systems, should be more dependable than new software. Its design and implementation faults should have been found and fixed.</p>\n</blockquote>\n<ol start=\"4\">\n<li>Lower development costs</li>\n</ol>\n<blockquote>\n<p>Development costs are proportional to the size of the software being developed. Reusing software means that fewer lines of code have to be written.</p>\n</blockquote>\n<ol start=\"5\">\n<li>Reduced process risk</li>\n</ol>\n<blockquote>\n<p>The cost of existing software is already known, while the costs of development are always a matter of judgment. This is an important factor for project management because it reduces the margin of error in project cost estimation. This is especially true when large software components such as subsystems are reused.</p>\n</blockquote>\n<ol start=\"6\">\n<li>Standards compliance</li>\n</ol>\n<blockquote>\n<p>Some standards, such as user interface standards, can be implemented as a set of reusable components. For example, if menus in a user interface are implemented using reusable components, all applications present the same menu formats to users. The use of standard user interfaces improves dependability because users make fewer mistakes when presented with a familiar interface.</p>\n</blockquote>\n</li>\n<li class=\"quiz true\">\n<p>Web application security frameworks may help implement user authentication (login) and access control to ensure that users can only access permitted functionality in the system.</p>\n</li>\n<li class=\"quiz false\">\n<p>The advantages of software reuse are lower costs, and faster software development. A disadvantage is higher risks.</p>\n</li>\n<li class=\"quiz true\">\n<p>Potential problems with application system reuse include lack of control over functionality, performance, and system evolution</p>\n</li>\n</ol>\n<h1 id=\"exercise\"><a class=\"anchor\" href=\"#exercise\">#</a> Exercise</h1>\n<ol>\n<li class=\"quiz essay\">\n<p>What major technical and nontechnical factors hinder software reuse? Do you personally reuse much software and, if not, why not?</p>\n<blockquote>\n<p>Technical issues tend to focus on how reusable the software is? That means the potential of software for adaptation. Non-technical issues include how a project is managed and funded.<br />\nThe non-technical problems in reusing components include increased maintenance costs, finding understanding, and adapting reusable components. If the source code of a reused software system is not available, then maintenance costs may be higher.<br />\nTechnical issue is not the one for reusability to reach its full potential, non technical factors are also to be considered. These factors are related to the motivational and organizational issues. Managers may be unwilling to compromise their requirements to allow reusable components to be used. Also there may be lack of tool support.<br />\nSoftware reuse must be considered when development cost and time reduced. But there is also a significant cost associated with whether or not a component is suitable for reuse in a particular situation. In that situation software reuse must not be considered.</p>\n</blockquote>\n</li>\n<li class=\"quiz essay\">\n<p>List the benefits of software reuse and explain why the expected lifetime of the software should be considered when planning reuse.</p>\n<blockquote>\n<p>Accelerated development: Bringing a system to market as early as possible is often more important than overall development costs. Reusing software can speed up system production because both development and validation time may be reduced.<br />\nEffective use of specialists: Instead of doing the same work over and over again, application specialists can develop reusable software that encapsulates their knowledge.<br />\nIncreased dependability: Reused software, which has been tried and tested in working systems, should be more dependable than new software. Its design and implementation faults should have been found and fixed.<br />\nLower development costs: Development costs are proportional to the size of the software being developed. Reusing software means that fewer lines of code have to be written.<br />\nReduced process risk: The cost of existing software is already known, whereas the costs of development are always a matter of judgment. This is an important factor for project management because it reduces the margin of error in project cost estimation. This is particularly true when relatively large software components such as subsystems are reused.<br />\nStandards compliance: Some standards, such as user interface standards, can be implemented as a set of reusable components. For example, if menus in a user interface are implemented using reusable components, all applications present the same menu formats to users. The use of standard user interfaces improves dependability because users make fewer mistakes when presented with a familiar interface.</p>\n</blockquote>\n</li>\n<li class=\"quiz essay\">\n<p>Most desktop software, such as word processing software, can be configured in a number of different ways. Examine software that you regularly use and list the configuration options for that software. Suggest difficulties that users might have in configuring the software. Micro- soft Office (or one of its open-source alternatives) is a good example to use for this exercise.</p>\n<blockquote>\n<p>List of configuration facilities in Microsoft Word:</p>\n<ol>\n<li>Preferences screen</li>\n<li>Customization screen</li>\n<li>Organizer screen</li>\n<li>Definition of templates</li>\n<li>Definition of styles</li>\n<li>Definition of macros</li>\n<li>Inclusion of add-ins (e.g. Endnote)<br />\nIn MS-Word 2007 there are difficulties to set a password to the document. It is not like previous versions where a menu bar is included. MS-Word 2007 has settings with all options (paragraphs, page layouts etc) embedded in the relative tool but difficult to find. For example, word option is included in circular office button on upper left corner. The Options dialog box used to be accessible by choosing Options from the Tools menu in previous versions. It is impossible to see or print the settings of all system preferences on a single screen.</li>\n</ol>\n</blockquote>\n</li>\n<li class=\"quiz essay\">\n<p>What are the significant benefits offered by the application system reuse approach when compared with the custom software development approach?</p>\n<blockquote>\n<ol>\n<li>As with other types of reuse, more rapid deployment of a reliable system may be possible.</li>\n<li>It is possible to see what functionality is provided by the applications, and so it is easier to judge whether or not they are likely to be suitable. Other companies may already use the applications, so experience of the systems is available.</li>\n<li>Some development risks are avoided by using existing software. However, this approach has its own risks, as I discuss below.</li>\n<li>Businesses can focus on their core activity without having to devote a lot of resources to IT systems development.</li>\n<li>As operating platforms evolve, technology updates may be simplified as these are the responsibility of the application system vendor rather than the customer.</li>\n</ol>\n</blockquote>\n</li>\n<li class=\"quiz essay\">\n<p>Explain why adaptors are usually needed when systems are constructed by integrating application systems. Suggest three practical problems that might arise in writing adaptor software to link two application systems.</p>\n<blockquote>\n<ol>\n<li>Lack of control over functionality and performance<br />\nAlthough the published interface of a product may appear to offer the required facilities, the system may not be properly implemented or may perform poorly. The product may have hidden operations that interfere with its use in a specific situation. Fixing these problems may be a priority for the system integrator but may not be of real concern for the product vendor. Users may simply have to find workarounds to problems if they wish to reuse the application system.</li>\n<li>Problems with system interoperability<br />\nIt is sometimes difficult to get individual application systems to work together because each system embeds its own assumptions about how it will be used. Garlan et al. (Garlan, Allen, and Ockerbloom 1995), reporting on their experience integrating four application systems, found that three of these products were event-based but that each used a different model of events. Each system assumed that it had exclusive access to the event queue. As a consequence, integration was very difficult. The project required five times as much effort as originally predicted. The schedule was extended to two years rather than the predicted six months.<br />\nIn a retrospective analysis of their work 10 years later, Garlan et al. (Garlan, Allen, and Ockerbloom 2009) concluded that the integration problems that they discovered had not been solved. Torchiano and Morisio (Torchiano and Morisio 2004) found that lack of compliance with standards in many application systems meant that integration was more difficult than anticipated.</li>\n<li>No control over system evolution<br />\nVendors of application systems make their own decisions on system changes, in response to market pressures. For PC products in particular, new versions are often produced frequently and may not be compatible with all previous versions. New versions may have additional unwanted functionality, and previous versions may become unavailable and unsupported.</li>\n<li>Support from system vendors<br />\nThe level of support available from system vendors varies widely. Vendor support is particularly important when problems arise as developers do not have access to the source code and detailed documentation of the system. While vendors may commit to providing support, changing market and economic circumstances may make it difficult for them to deliver this commitment. For example, a system vendor may decide to discontinue a product because of limited demand, or they may be taken over by another company that does not wish to support the products that have been acquired.</li>\n</ol>\n</blockquote>\n</li>\n<li class=\"quiz essay\">\n<p>What are the design principles underlying the CBSE that support the construction of under- standable and maintainable software?</p>\n<blockquote>\n<p>Apart from the benefits of reuse, CBSE is based on sound software engineering design principles:</p>\n<ul>\n<li>Components are independent so do not interfere with each other;</li>\n<li>Component implementations are hidden;</li>\n<li>Communication is through well-defined interfaces;</li>\n<li>One components can be replaced by another if its interface is maintained;</li>\n<li>Component infrastructures offer a range of standard services.</li>\n</ul>\n</blockquote>\n</li>\n<li class=\"quiz essay\">\n<p>The principle of component independence means that it ought to be possible to replace one component with another that is implemented in a completely different way. Using an example, explain how such component replacement could have undesired consequences and may lead to system failure.</p>\n<blockquote>\n<p>In Ariane 5 launcher system, the developers reused the component from a previous version of the launcher (the Inertial Navigation System) Ariane 4 which was successful without any exceptions. The component was not modified for Ariane 5, it also consists of additional functionality that was not required for Ariane 5. First test flight of the Ariane 5 rocket ended in disaster when the launcher went out of control 37 seconds after take off. The software failed due to unhandled exception that caused the run-time system to shutdown. The functionality that failed in this component was not required in Ariane 5.</p>\n</blockquote>\n</li>\n<li class=\"quiz essay\">\n<p>In a reusable component, what are the critical characteristics that are emphasized when the component is viewed as a service?</p>\n<blockquote>\n<p>Viewing a component as a service provider emphasizes two critical characteristics of a reusable component:</p>\n<ol>\n<li>The component is an independent executable entity that is defined by its inter- faces. You don’t need any knowledge of its source code to use it. It can either be referenced as an external service or included directly in a program.</li>\n<li>The services offered by a component are made available through an interface, and all interactions are through that interface. The component interface is expressed in terms of parameterized operations, and its internal state is never exposed.</li>\n</ol>\n</blockquote>\n</li>\n<li class=\"quiz essay\">\n<p>Why is it important that components should be based on a standard component model?</p>\n<blockquote>\n<p>Component based software engineering is the process of defining, implementing and integrating independent components into a system. The standards define how component interface should be specified and how components communicate. If components conform to standards, then their operation is independent of their programming language. The components written in different languages can be integrated into the same system.</p>\n</blockquote>\n</li>\n<li class=\"quiz essay\">\n<p>What are the essential differences between CBSE with reuse and software processes for original software development?</p>\n<blockquote>\n<p>The essential differences between CBSE with reuse and software processes for original software development are as follows:</p>\n<ol>\n<li>The user requirements are initially developed in outline rather than in detail, and stakeholders are encouraged to be as flexible as possible in defining their requirements. Requirements that are too specific limit the number of components that could meet these requirements. However, unlike incremental development, you need a complete description of the requirements so that you can identify as many components as possible for reuse.</li>\n<li>Requirements are refined and modified early in the process depending on the components available. If the user requirements cannot be satisfied from available components, you should discuss the related requirements that can be supported by the reusable components. Users may be willing to change their minds if this means cheaper or quicker system delivery.</li>\n<li>There is a further component search and design refinement activity after the system architecture has been designed. Apparently, usable components may turn out to be unsuitable or may not work properly with other chosen components. You may have to find alternatives to these components. Further requirements changes may therefore be necessary, depending on the functionality of these components.</li>\n<li>Development is a composition process where the discovered components are integrated. This involves integrating the components with the component model infrastructure and, often, developing adaptors that reconcile the interfaces of incompatible components. Of course, additional functionality may also be required over and above that provided by reused components.</li>\n</ol>\n</blockquote>\n</li>\n</ol>\n",
            "tags": [
                "计算机科学",
                "Master of Software Engineering",
                "ITMD 511. Application Development Methodologies",
                "软件工程"
            ]
        },
        {
            "id": "https://shoka.lostyu.me/trading-view/price-action/harmonic-pattern/bamm-samm/",
            "url": "https://shoka.lostyu.me/trading-view/price-action/harmonic-pattern/bamm-samm/",
            "title": "BAMM & SAMM",
            "date_published": "2022-04-10T04:06:29.000Z",
            "content_html": "<h1 id=\"bamm\"><a class=\"anchor\" href=\"#bamm\">#</a> BAMM</h1>\n<p><img data-src=\"https://s2.loli.net/2022/05/07/RPLExt4c5rQ9S1C.png\" alt=\"\" /></p>\n<p>BAMM 是一种交易 C—D 波的方式，原本只运用在蝙蝠形态，所以名字叫 Bat Action Magnet Move，实际中也可以用于其他形态。</p>\n<p>经典执行方案是等待价格完成 C，打破 B 的价格后，再从 B 交易到 D 点；止损设在 C 点以下，目标设在 D</p>\n<p>用于 B 点 0.5 的蝙蝠，盈亏比一般不高，但在 0.382 蝙蝠盈亏比很好</p>\n<p><img data-src=\"https://s2.loli.net/2022/05/07/tLKxnevUPwN6lQF.png\" alt=\"\" /></p>\n<p>因此，0.5 的不做，0.382 的推荐辅以趋势线，突破 B 点后等回踩趋势线或者 B 点入场；XA 0.886 止盈；止损在 C 点以下一点。</p>\n<p><img data-src=\"https://s2.loli.net/2022/05/07/m8rIQlg7pKzDbJT.png\" alt=\"\" title=\"回踩趋势线支撑入场\" /><br />\n<img data-src=\"https://s2.loli.net/2022/05/07/qGyWgL1bJoAkVdR.png\" alt=\"\" title=\"回踩B点入场\" /></p>\n<h1 id=\"samm\"><a class=\"anchor\" href=\"#samm\">#</a> SAMM</h1>\n<p><img data-src=\"https://s2.loli.net/2022/05/07/b4RhOgwvk8LSpXi.png\" alt=\"\" /></p>\n<p>是把上述用在鲨鱼形态。当 BC 假突破 A 点构成的支撑后，入场交易 CD 波。<br />\n优点是盈亏比非常高，缺点是成功率不高。</p>\n<p>操作方式：</p>\n<ol>\n<li>先等待鲨鱼的 XABC 点完成，C 点最好是在 BC 延伸的 1.13 或 1.618。</li>\n<li>当 C 点反弹高于 A 点，C 点才正式被确认。</li>\n<li>此时我们可以\n<ol>\n<li>直接进场</li>\n<li>等待回踩 A 点的价位再进场</li>\n<li>止损设在 C 点加减一个 ATR，目标在鲨鱼的 D 点（XC 0.886）</li>\n</ol>\n</li>\n</ol>\n<p><img data-src=\"https://s2.loli.net/2022/05/07/1fYDz7pk3lIX28m.png\" alt=\"\" /></p>\n<p><img data-src=\"https://s2.loli.net/2022/05/07/AYrpskUbiKxJ9E8.png\" alt=\"\" /></p>\n<h1 id=\"形态总结\"><a class=\"anchor\" href=\"#形态总结\">#</a> 形态总结</h1>\n<table>\n<thead>\n<tr>\n<th>B 点位置</th>\n<th rowspan=\"2\">形态</th>\n<th>C 点位置</th>\n<th colspan=\"3\">D 点反转区</th>\n<th colspan=\"2\">止损</th>\n<th colspan=\"2\">止盈</th>\n</tr>\n<tr>\n<th>XA</th>\n<th>AB</th>\n<th>1 线或点</th>\n<th>2 就近区间</th>\n<th>3 就近调整</th>\n<th>推荐</th>\n<th>可选</th>\n<th>①</th>\n<th>②</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0.382</td>\n<td>变异蝙蝠</td>\n<td rowspan=\"3\">0.382 - 0.886</td>\n<td>XA 1.13</td>\n<td>BC 2.0 - 3.168</td>\n<td>AB = CD 一般 1.618</td>\n<td rowspan=\"2\">XA 1.27</td>\n<td rowspan=\"2\">XA 1.13, AD 1.13</td>\n<td rowspan=\"3\">AD 0.382</td>\n<td rowspan=\"3\">AD 0.618</td>\n</tr>\n<tr>\n<td>0.382 - 0.5</td>\n<td>蝙蝠</td>\n<td>XA 0.886</td>\n<td>BC 1.618 - 2.618</td>\n<td>AB = CD 一般 1.27</td>\n</tr>\n<tr>\n<td rowspan=\"3\">0.382 - 0.618</td>\n<td>螃蟹</td>\n<td>XA 1.618 和 1.902</td>\n<td>BC 2.618 - 3.618</td>\n<td>AB = CD 1.618</td>\n<td colspan=\"2\">XA 1.618 入场则 XA 1.902</td>\n</tr>\n<tr>\n<td>鲨鱼</td>\n<td rowspan=\"2\">1.13 - 1.618</td>\n<td>XC 0.886，1.0，1.13</td>\n<td colspan=\"2\">BC 1.618 - 2.24</td>\n<td colspan=\"2\">XC 入场的下一级别</td>\n<td>CD 0.5</td>\n<td>CD 0.886</td>\n</tr>\n<tr>\n<td>5-0</td>\n<td>鲨鱼完成找 E 点</td>\n<td>BC =&gt; DE</td>\n<td>CD 0.5 或 0.618</td>\n<td>CD 0.618</td>\n<td>CD 0.786</td>\n<td>DE 0.618</td>\n<td>D 点</td>\n</tr>\n<tr>\n<td>0.618</td>\n<td>加特利</td>\n<td rowspan=\"3\">0.382 - 0.886</td>\n<td>AB =&gt; CD</td>\n<td>XA 0.786 或 0.886</td>\n<td>BC 1.13 - 1.618</td>\n<td>AD 1.27</td>\n<td>AD 1.13</td>\n<td rowspan=\"3\">AD 0.382</td>\n<td rowspan=\"3\">AD 0.618</td>\n</tr>\n<tr>\n<td>0.786</td>\n<td>蝴蝶</td>\n<td>XA 1.272 和 1.414</td>\n<td>BC 1.618 - 2.618</td>\n<td>AB = CD 1.27</td>\n<td>XA 1.414</td>\n<td>XA 1.618</td>\n</tr>\n<tr>\n<td>0.886</td>\n<td>深蟹</td>\n<td>XA 1.618 和 1.902</td>\n<td>BC 2.618 - 3.618</td>\n<td>AB = CD 1.618</td>\n<td colspan=\"2\">XA 1.618 入场则 XA 1.902</td>\n</tr>\n</tbody>\n</table>\n<p><img data-src=\"https://s2.loli.net/2022/05/08/8QaXSwfrlcBMTve.jpg\" alt=\"\" /></p>\n<p><img data-src=\"https://s2.loli.net/2022/05/08/rJkRDbvMmNFTHty.jpg\" alt=\"\" /></p>\n",
            "tags": [
                "交易策略",
                "价格行为",
                "谐波形态"
            ]
        },
        {
            "id": "https://shoka.lostyu.me/trading-view/price-action/harmonic-pattern/5-0/",
            "url": "https://shoka.lostyu.me/trading-view/price-action/harmonic-pattern/5-0/",
            "title": "5-0 形态",
            "date_published": "2022-04-07T09:11:29.000Z",
            "content_html": "<h1 id=\"概念\"><a class=\"anchor\" href=\"#概念\">#</a> 概念</h1>\n<p><img data-src=\"https://s2.loli.net/2022/05/07/X8bVurOo14jDW97.png\" alt=\"\" /></p>\n<p>5-0 模式是一种独特的结构，它拥有精确的斐波那契数列比对来验证结构。<br />\n虽然 5-0 被认为是一种回缩模式，因为 50% 的回缩是潜在反转区 (PRZ) 中最关键的数字，但不同价格支柱的测量值与蝙蝠或加特利略有不同。<br />\n5-0 属于 5 点和谐价格结构家族。<br />\n但是，其他模式所需的 B 点对齐并不适用于 5-0 模式。相反，5-0 要求最小的迅速和谐脉冲波至少为 1.618，但不超过 2.24 在 C 点区分设置。<br />\n此外，5-0 需要一个倒数 AB=CD 测量来定义模式的完成度。</p>\n<p>这种模式的基本前提是，在一个相反的趋势完成后，确定不同的反应。<br />\n有效的 5-0 模式通常代表重大趋势逆转的第一次回调。<br />\n在许多情况下，结构的 AB 分支是一个延伸趋势的失败的最终波。<br />\n在艾略特波浪术语中，AB 分支可能是校正 “abc” 的失败波 3 或整个完成趋势的失败波 5。<br />\n虽然这些是明显的相似性，但从和谐交易的角度来看，重要的是通过其相关的斐波纳契测量来检查结构，以满足模式需求。<br />\n5-0 是一个非常精确的模式，它只包含两个数字：BC 支柱的 50% 回缩和 AB=CD 的倒数。<br />\n需要注意的是，用于确定潜在反转区 (PRZ）的测量方法与所有其他和谐模式有两种不同的方式：最后一段的结构完成点和 AB=CD 模式的计算。</p>\n<p>虽然该模式在结构中包含了 5 个点 (X, A, B, C, D)，但是初始价格分支 (0) 可以从任何延伸价格移动的开始处开始。然而，初始点 (X) 必须具有相对于 a 和 B 点的特定对齐。<br />\n结构的 X、A、B 的形成通常是某种类型的极值和谐脉冲运动。<br />\n定义 B 点的 XA 投影最好不超过 2.24。<br />\n任何大于 2.24 的延伸都会抵消结构，因为较小的脉冲移动是首选。<br />\n再一次，这是失败的波 3 或波 5 在艾略特波术语 - 建立结构的其余部分。</p>\n<ul>\n<li>在 X、A、B 点寻找具有 1.13-1.618 延伸的初始脉冲反转</li>\n<li>AB 投影必须在 C 点有最小 1.618 的延伸，但不超过 2.24</li>\n<li>D 点由 50% BC 回撤和 AB=CD 模式完成定义</li>\n</ul>\n<p>BC 支支柱是结构的最长价格长度，它必须至少是 AB 长度的 1.618 的延伸，但它必须不超过 2.24。<br />\n这个 1.618-2.24 的小范围是这个结构的定义元素。<br />\n如果没有达到 1.618 AB 的最小延伸，结构就不是有效的 5-0 模式。<br />\n在 BC 段从该区域反转后，从 B 点到 C 点测量 50% 的回缩。<br />\n此外，倒数 AB=CD 从 C 点 (AB 支柱的等效长度) 投影到潜在反转区（PRZ）上。</p>\n<p>虽然 5-0 模式不是典型的 M 型或 W 型价格结构，但和谐交易方法中的相同原则也适用于这些情况。<br />\n倒数 AB=CD 有助于定义一般面积，而 50% 的回撤精确地确定了和谐区的精确范围。</p>\n<p>下面的插图和示例将清楚地解释这些概念。</p>\n<h2 id=\"看涨的5-0模式\"><a class=\"anchor\" href=\"#看涨的5-0模式\">#</a> 看涨的 5-0 模式</h2>\n<p>看涨 5-0 模式，如图所示，从 0 点开始，代表了从 X 点开始的向下延伸，初始点 (X) 作为之前大幅下跌的低点。<br />\n在快速反弹到 A 点后，结构突然继续下降，只是在 X 点找到稍高于之前低点的支撑。<br />\n这是失败的波 3 或波 5—— 在艾略特波术语中 —— 建立了结构的其余部分。</p>\n<p><img data-src=\"https://s2.loli.net/2022/05/07/dCFKWZUS9sr3eJp.png\" alt=\"\" /></p>\n<p>从和谐交易的角度来看，重要的的读数范围内要求这个 X 延伸至少 1.13，但不大于 1.618。<br />\n在这个脉冲失效波建立后，BC 分支至少反弹到 AB 长度的 1.618，但它不超过 2.24。</p>\n<p>同样，这个 1.618-2.24 的小范围是这个结构的定义元素。<br />\n如果没有达到 1.618 的的读数范围内，结构就不是有效的 5-0 模式。<br />\n在 BC 线从该区域反转后，从 B 点到 C 点的牛市 50% 回档位被测量。</p>\n<p>此外，倒数 AB=CD 从 C 点 (AB 支柱的等效长度) 投影到潜在反转区（PRZ）上。<br />\n识别这种结构需要一些时间，但最明显的特征是失败的下行波，然后是精确的 1.618-2.24 的延伸。<br />\n在这一点上，重要的是计算 50% 回撤水平的倒数 AB=CD 和研究价格在价格（PRZ）的作用。</p>\n<h2 id=\"看跌的5-0模式\"><a class=\"anchor\" href=\"#看跌的5-0模式\">#</a> 看跌的 5-0 模式</h2>\n<p>如图所示，在 0 点开始，代表一段低的机会的初始点 X。<br />\nX 初始点的模式设置失败突破区域，那里的机会 B 从一个点到峰值，名义上再次拿出之前高 X，这是失败的一波 3 或一波 5 艾略特波浪条件建立了其余的结构。</p>\n<p><img data-src=\"https://s2.loli.net/2022/05/07/ZYo5G6Drn37jaRd.png\" alt=\"\" /></p>\n<p>请记住，此 XA 延伸名必须至少为 1.13 但不大于 1.618。<br />\n在脉冲失败波建立之后，BC 段下降到 AB 长度的至少 1.618 的延伸，但不超过 2.24。同样，这个 1.618-2.24 的狭窄范围是结构的一个决定性因素。如果未达到 1.618 的的读数范围内，则该结构不是有效的 5-0。在 BC 段从该区域反转后，从 B 点到 C 点测量看跌的 50% 回档位。</p>\n<blockquote>\n<p>5-0 形态也称为鲨鱼之后的形态，因为大多数的鲨鱼完成之后可能形成 5-0 形态<br />\n也可以理解成鲨鱼达到目标 1 后的反弹，这个反弹可能小也可能大</p>\n</blockquote>\n<h1 id=\"规则\"><a class=\"anchor\" href=\"#规则\">#</a> 规则</h1>\n<h2 id=\"形态要素\"><a class=\"anchor\" href=\"#形态要素\">#</a> 形态要素</h2>\n<p>反射 ABCD （Reciprocal ABCD）</p>\n<p class=\"gallery\"><img data-src=\"https://s2.loli.net/2022/05/07/ghvmp8iRzV4xcr5.png\" alt=\"\" title=\"红线为普通 AB = CD\" /><br />\n<img data-src=\"https://s2.loli.net/2022/05/07/Agycdio3LNkjhWK.png\" alt=\"\" title=\"蓝线为反射 ABCD，即 BC = DE\" /></p>\n<h2 id=\"形态确认\"><a class=\"anchor\" href=\"#形态确认\">#</a> 形态确认</h2>\n<p>操作步骤：</p>\n<ol>\n<li>先画出鲨鱼形态，等形态完成后</li>\n<li>【趋势线】工具，从 B 到 C 画一条趋势线，并复制到 D 点</li>\n<li>【斐波那契回撤】工具，从 C 到 D，寻找 E 点反转区\n<ul>\n<li>可以是 CD 0.5，也可以是 CD 0.618</li>\n<li>如果反射 ABCD 低于 CD 0.5，则反转区定在 CD 0.5</li>\n<li>如果反射 ABCD 超越 CD 0.5，则反转区定在 CD 0.618</li>\n</ul>\n</li>\n</ol>\n<p><img data-src=\"https://s2.loli.net/2022/05/07/fXWLcrwU2SiFe1K.png\" alt=\"\" /></p>\n<h2 id=\"止盈止损\"><a class=\"anchor\" href=\"#止盈止损\">#</a> 止盈止损</h2>\n<ol>\n<li>\n<p>止损：</p>\n<ul>\n<li>如果进场在 CD 0.5，则止损在 CD 0.618 + 少许空间</li>\n<li>如果进场在 CD 0.618，则止损在 CD 0.786 + 少许空间</li>\n</ul>\n</li>\n<li>\n<p>止盈：</p>\n<ul>\n<li>目标 1：DE 0.618</li>\n<li>目标 2：D 点<br />\n<img data-src=\"https://s2.loli.net/2022/05/07/xgIkHJDPATy3wpG.png\" alt=\"\" /></li>\n</ul>\n</li>\n</ol>\n",
            "tags": [
                "交易策略",
                "价格行为",
                "谐波形态"
            ]
        },
        {
            "id": "https://shoka.lostyu.me/trading-view/price-action/harmonic-pattern/shark/",
            "url": "https://shoka.lostyu.me/trading-view/price-action/harmonic-pattern/shark/",
            "title": "Shark 鲨鱼形态",
            "date_published": "2022-04-07T08:11:29.000Z",
            "content_html": "<h1 id=\"概念\"><a class=\"anchor\" href=\"#概念\">#</a> 概念</h1>\n<p><img data-src=\"https://s2.loli.net/2022/05/07/3qBQa1hClibTtMU.png\" alt=\"image.png\" /></p>\n<p>鲨鱼模式是一种新的谐波模式，本质上，模式是在 5-0 形成之前的主要结构。<br />\n该结构在典型的 M 和 W 框架之外。<br />\n它具有一种称为 “极端和谐脉冲波” 的独特形式，可以重新测试定义的支撑 / 阻力，同时收敛于 0.886 回调线–1.13 扩展区域。<br />\n在所有情况下，完成点都必须包含强大的 0.886 支持 / 回撤作为最低要求。<br />\n此外，独特的极限谐波脉冲波采用最小 1.618 扩展。<br />\n这与 0.886 结合的回撤线定义了一个独特的结构，该结构具有两个深刻的和谐度量来定义最低水平。</p>\n<p>在许多情况下，价格行动将重新测试该模式的初始起点，并定义极好的机会，以利用在有限的时间内移动速度过快的市场。<br />\n这些结构通常具有过度延伸的价格行为，该价格行为利用了极端谐波脉冲波的 “自然” 状态，该状态通常按反应性交易行为进行分类。</p>\n<p>这种模式通常定义了极好的机会，但是这些逆转通常非常剧烈，并且需要特定的管理策略来利用这种现象。<br />\n在许多情况下，价格走势将重新测试先前的支撑 / 阻力位，通常会导致有限的逆势波动。<br />\n这种结构的处理方式应不同于标准的 M 和 W 模式。</p>\n<p>实际上，对价格行动的总体期望应该是短暂的，并试图抓住最明显的机会。<br />\n鲨鱼模式会产生许多准确而积极的反应，只要应用更加积极的管理，这些反应就可以成功进行交易。</p>\n<h2 id=\"看涨鲨鱼模式\"><a class=\"anchor\" href=\"#看涨鲨鱼模式\">#</a> 看涨鲨鱼模式</h2>\n<p><img data-src=\"https://s2.loli.net/2022/05/07/eLfcdm6F3rJkouw.png\" alt=\"\" /></p>\n<h2 id=\"看跌鲨鱼模式\"><a class=\"anchor\" href=\"#看跌鲨鱼模式\">#</a> 看跌鲨鱼模式</h2>\n<p><img data-src=\"https://s2.loli.net/2022/05/07/VcCm5bhzHUdePx2.png\" alt=\"\" /></p>\n<h1 id=\"规则\"><a class=\"anchor\" href=\"#规则\">#</a> 规则</h1>\n<h2 id=\"形态要素\"><a class=\"anchor\" href=\"#形态要素\">#</a> 形态要素</h2>\n<ul>\n<li>跟其他 M／W 形态比较，这个形态区别在 C 点超越 A 点，反转区也有不止一个区域</li>\n<li>非常重要的是 BC 延伸必须打到最少 1.618，没有达到这个延伸标准的形态不是合格的形态</li>\n<li>反转区可能是 XC 0.886，XC 1.0 或 XC 1.13，由 2 条斐波那契线组成</li>\n</ul>\n<h2 id=\"形态确认\"><a class=\"anchor\" href=\"#形态确认\">#</a> 形态确认</h2>\n<p>操作步骤：</p>\n<ol>\n<li>【斐波那契回撤】工具，从 X 到 A，寻找 B 点\n<ul>\n<li>B 点一般在 XA 0.382 - 0.618 之间</li>\n</ul>\n</li>\n<li>【斐波那契回撤】工具，从 A 到 B，寻找 C 点\n<ul>\n<li>C 点必须在 AB 1.13 - 1.618 之间</li>\n<li>如果在 1.13 附近反转，则是经典的假突破</li>\n</ul>\n</li>\n<li>D 点反转区（PRZ）只需找 BC 延伸和 XC 回调的重叠区。<br />\n反转区由这两条斐波那契组成：\n<ol>\n<li>XC 0.88 - 1.13 (XC 0.886，XC 1.0，XC 1.13)\n<ul>\n<li>【斐波那契回撤】工具，从 X 到 C，分别在 XC 0.886，XC 1.0，XC 1.13 画水平线</li>\n</ul>\n</li>\n<li>BC 1.618 - 2.24\n<ul>\n<li>BC 1.618 如果已经超越上述 XC 0.886，则舍弃 XC 0.886</li>\n<li>剩余的水平线分别与最接近的 BC 斐波那契线构成反转区</li>\n</ul>\n</li>\n</ol>\n</li>\n</ol>\n<blockquote>\n<p>很多时候 BC 延伸可能超过 2.24，到达 2.618 或 3.14。<br />\nBC 延伸不太重要，比较关键的是跟 XC 0.886 - XC 1.13 是否有重叠，形成反转区。</p>\n</blockquote>\n<p class=\"gallery\"><img data-src=\"https://s2.loli.net/2022/05/07/zyKIYf9MloiOUSw.png\" alt=\"\" title=\"【斐波那契回撤】工具，从X到A，B点一般在 XA 0.382 - 0.618之间\" /><br />\n<img data-src=\"https://s2.loli.net/2022/05/07/XJMqxe3sDE7uGP2.png\" alt=\"\" title=\"【斐波那契回撤】工具，从A到B，C点必须在 BA 1.13 - 1.618之间\" /><br />\n<img data-src=\"https://s2.loli.net/2022/05/07/lCdUXaTu8bKWJfF.png\" alt=\"\" title=\"寻找D点，第一步，【斐波那契回撤】工具，从X到C，分别在XC 0.886，XC 1.0，XC 1.13 画水平线\" /><br />\n<img data-src=\"https://s2.loli.net/2022/05/07/tGBw5ZMzCg1oJRn.png\" alt=\"\" title=\"寻找D点，第二步，【斐波那契回撤】工具，从B到C，分别在XC，水平线分别与最接近的BC斐波那契线构成反转区；因 BC 1.618 已超越 XC 0.886，故舍弃 XC 0.886\" /></p>\n<h2 id=\"止盈止损\"><a class=\"anchor\" href=\"#止盈止损\">#</a> 止盈止损</h2>\n<ol>\n<li>\n<p>止损：</p>\n<ul>\n<li>【斐波那契回撤】工具，从 X 拉到 C</li>\n<li>如果 0.886 XC 进场，则止损放在 1.0 XC + 少许空间</li>\n<li>如果 1.0 XC 进场，则止损放在 1.13 XC + 少许空间</li>\n<li>如果 1.13 XC 进场，则止损放在 1.27 XC + 少许空间</li>\n</ul>\n</li>\n<li>\n<p>止盈：</p>\n<ul>\n<li>【斐波那契回撤】工具，从 C 拉到 D</li>\n<li>目标 1：0.5 CD</li>\n<li>目标 2：0.886 CD</li>\n<li>到达目标 1 后可以平仓一半，剩余仓位移动止损到成本价<br />\n<img data-src=\"https://s2.loli.net/2022/05/07/CbkZ9QxK37PVa6v.png\" alt=\"\" /></li>\n</ul>\n</li>\n</ol>\n<blockquote>\n<p>鲨鱼可能会是最常见的和谐形态<br />\n因为有多个潜在反转区，要仔细观察市场对每个反转区的反应，再考虑是否进场<br />\n BC 延伸很多时候会超越 2.24（3.14 也有可能），但只要在 XC 0.886 - XC 1.13 之间都还可以接受</p>\n</blockquote>\n",
            "tags": [
                "交易策略",
                "价格行为",
                "谐波形态"
            ]
        },
        {
            "id": "https://shoka.lostyu.me/computer-science/mse/itmd-511/chapter-14/",
            "url": "https://shoka.lostyu.me/computer-science/mse/itmd-511/chapter-14/",
            "title": "Chapter 14",
            "date_published": "2022-04-04T10:49:19.000Z",
            "content_html": "<p>Chapter 14 - Resilience Engineering</p>\n<h1 id=\"quiz\"><a class=\"anchor\" href=\"#quiz\">#</a> Quiz</h1>\n<ol>\n<li class=\"quiz true\">\n<p>Resilience engineering does not focus on avoiding failure but rather on accepting the reality that failures will occur</p>\n</li>\n<li class=\"quiz multi\">\n<p>Which of the following are resilience activities involved in the detection of and recovery from system problems</p>\n<ul class=\"options\">\n<li class=\"correct\">Recognition</li>\n<li class=\"correct\">Resistance</li>\n<li class=\"correct\">Recovery</li>\n<li class=\"correct\">Reinstatement</li>\n</ul>\n</li>\n<li class=\"quiz true\">\n<p>Cybersecurity is concerned with all of an organization’s IT assets from networks through to application systems.</p>\n</li>\n<li class=\"quiz false\">\n<p>Fundamentally, resilience engineering is a technical rather than a sociotechnical activity.</p>\n</li>\n<li class=\"quiz true\">\n<p>In designing a resilient system, you have to assume that system failures or penetration by an attacker will occur, and you have to include redundant and diverse features to cope with these adverse events.</p>\n</li>\n<li class=\"quiz\">\n<p><span class=\"gap\"></span> involves simulating possible system failures and cyberattacks to test whether the resilience plans that have been drawn up work as expected.</p>\n<ul class=\"options\">\n<li class=\"correct\">Resilience Testing</li>\n<li>Threat recognition</li>\n<li>Operational and management processes</li>\n<li>Asset classification</li>\n</ul>\n</li>\n<li class=\"quiz\">\n<p>Resilience planning should be based on the assumption that <span class=\"gap\"></span> systems will be subject to cyberattacks by malicious insiders and outsiders and that some of these attacks will be successful.</p>\n<ul class=\"options\">\n<li class=\"correct\">networked</li>\n<li>defensive</li>\n<li>offline</li>\n<li>Resilience planning should not be based on the assumptions</li>\n</ul>\n</li>\n<li class=\"quiz true\">\n<p>Critical services are defined as services that are essential if a system is to ensure its primary purpose</p>\n</li>\n<li class=\"quiz false\">\n<p>Human error is rarely the cause of accidents in safety critical systems</p>\n</li>\n<li class=\"quiz false\">\n<p>You should not design operational processes to be flexible and adaptable because operators and system managers may sometimes have to break rules and “work around” the defined process</p>\n</li>\n</ol>\n<h1 id=\"exercise\"><a class=\"anchor\" href=\"#exercise\">#</a> Exercise</h1>\n<ol>\n<li class=\"quiz essay\">\n<p>Explain how the complementary strategies of resistance, recognition, recovery, and reinstate- ment may be used to provide system resilience.</p>\n<blockquote>\n<p>The judgement by which any system maintains continuity of systems critical resources during any disruptive event like cyberattack or failure of equipment is known as system resilience. The system resilience has for strategies which are as given below:</p>\n<ol>\n<li>Recognition: In this strategy, the operators of the system recognize possible problem which can cause system failure. Mostly, this reorganization is done before the failure is occurred.</li>\n<li>Resistance: This strategy is used when the possibility of any cyber attack is occurred. By using this strategy, the probability of system failure can be reduced. The critical parts of the system are being focused by this strategy.</li>\n<li>Recovery: When failure of system is occurred, then, recovery strategy is used to restore the critical services of the system on quick bases. By doing so, the faith of users for any system can be maintained.</li>\n<li>Reinstatement: When the services of the failed system are being restored and system is performing all its activities in normal condition, then, reinstatement strategy is used as final activity.</li>\n</ol>\n</blockquote>\n</li>\n<li class=\"quiz essay\">\n<p>What are the types of threats that have to be considered in resilience planning? Provide examples of the controls that organizations should put in place to counter those threats.</p>\n<blockquote>\n<ol>\n<li>Threats to the confidentiality of assets. Data is not damaged but it is made available to people who should not have access to it.</li>\n<li>Threats to the integrity of assets. These are threats where systems or data are damaged in some way by a cyberattack.</li>\n<li>Threats to the availability of assets. These are threats that aim to deny use of assets by authorized users.<br />\nExamples of controls</li>\n<li>Authentication, where users of a system have to show that they are authorized to access the system.</li>\n<li>Encryption, where data is algorithmically scrambled so that an unauthorized reader cannot access the information.</li>\n<li>Firewalls, where incoming network packets are examined then accepted or rejected according to a set of organizational rules. Firewalls can be used to ensure that only traffic from trusted sources is passed from the external Internet into the local organizational network.</li>\n</ol>\n</blockquote>\n</li>\n<li class=\"quiz essay\">\n<p>A hospital proposes to introduce a policy that any member of clinical staff (doctors or nurses) who takes or authorizes actions that leads to a patient being injured will be subject to criminal charges. Explain why this is a bad idea, which is unlikely to improve patient safety, and why it is likely to adversely affect the resilience of the organization.</p>\n<blockquote>\n<p>The judgement by which any system maintains continuity of systems critical resources during any disruptive event like cyber attack or failure of equipment is known as system resilience. The organization which is adaptable and flexible to use system resilience for protection against any type of attack is known as resilient organization. As hospital is a critical system, but there is also some probability of human errors.<br />\nApplying criminal charges to nurses and doctors for taking action for any patient is bad idea. If criminal charges are applied, then, any doctor or nurses will not action for any patient. Doctors and nurses are to save the lives of patients. They don’t take any wrong action intentionally. For improvement in safety of patient, following points can be considered:</p>\n<ol>\n<li>A warning for any conflict alert can be displayed on doctor’s screen.</li>\n<li>The records of patients can be formalized for effective management of patient data.</li>\n<li>A team can be appointed who will collectively monitor and checks the works of doctors and nurses.</li>\n</ol>\n<p>If criminal charges are applied to nurses and doctors for taking action for any patient, the resilience of hospital can’t be maintained. The points to show its affects are as given below:</p>\n<ol>\n<li>The adaptability and flexibility of hospital system can’t be maintained.</li>\n<li>Any individual will not take the responsibility to take care of any patient.</li>\n</ol>\n</blockquote>\n</li>\n<li class=\"quiz essay\">\n<p>What is survivable systems analysis and what are the key activities in each of the four stages involved in it as shown in Figure 14.8?</p>\n<blockquote>\n<ol>\n<li>System understanding: For an existing or proposed system, review the goals of the system (sometimes called the mission objectives), the system requirements and the system architecture.</li>\n<li>Critical service identification: The services that must always be maintained and the components that are required to maintain these services are identified.</li>\n<li>Attack simulation: Scenarios or use cases for possible attacks are identified along with the system components that would be affected by these attacks.</li>\n<li>Survivability analysis: Components that are both essential and compromisable by an attack are identified and survivability strategies based on resistance, recognition and recovery are identified.</li>\n</ol>\n</blockquote>\n</li>\n<li class=\"quiz essay\">\n<p>Explain why process inflexibility can inhibit the ability of a sociotechnical system to resist and recover from adverse events such as cyberattacks and software failure. If you have experience  of process inflexibility, illustrate your answer with examples from your experience.</p>\n<blockquote>\n<p>The systems which are very complex and not understandable as a whole are known as sociotechnical systems. These systems are divided into layers for better understanding.<br />\nPlanning of cyber-resilience includes decisions for flexibility or inflexibility of response at the time of any cyber attack. The ability of any sociotechnical system for recovering and resisting any software failure or cyber attack can be inhabited by process inflexibility. The points to show the reasons are as given below:</p>\n<ol>\n<li>It is well known that confliction in security and a resilience requirement is very often. So, when these requirements conflict, process inflexibility can easily be inhabited.</li>\n<li>The security and resilience are included in any policy to provide limited access to users. Process inflexibility does the same thing by restricting the system users to follow security policy of sociotechnical system.</li>\n<li>Process inflexibility will allow limited users to make changes, thus, it can be inhabited in sociotechnical system.</li>\n<li>Most of the sociotechnical systems are used in government organizations, so, for maintaining user access, process inflexibility can easily be inhabited.</li>\n</ol>\n</blockquote>\n</li>\n<li class=\"quiz essay\">\n<p>Suggest how the approach to resilience engineering that is proposed in Figure 14.9 could be used in conjunction with an agile development process for the software in the system. What problems might arise in using agile development for systems where resilience is important?</p>\n<blockquote>\n<p>A more general resilience engineering method, as shown in Figure 14.9, takes the lack of detailed requirements into account as well as explicitly designing recovery and reinstatement into the system. For the majority of components in a system, you will not have access to their source code and will not be able to make changes to them. Your strategy for resilience has to be designed with this limitation in mind.<br />\nThere are five interrelated streams of work in this approach to resilience engineering:</p>\n<ol>\n<li>You identify business resilience requirements. These requirements set out how the business as a whole must maintain the services that it delivers to customers and, from this, resilience requirements for individual systems are developed. Providing resilience is expensive, and it is important not to overengineer systems with unnecessary resilience support.</li>\n<li>You plan how to reinstate a system or a set of systems to their normal operating state after an adverse event. This plan has to be integrated with the business’s a technical or human error. It should also be part of a wider disaster recovery strategy. You have to take account of the possibility of physical events such as fire and flooding and study how to maintain critical information in separate locations. You may decide to use cloud backups for this plan.</li>\n<li>You identify system failures and cyberattacks that can compromise a system, and you design recognition and resilience strategies to cope with these adverse events.</li>\n<li>You plan how to recover critical services quickly after they have been damaged or taken offline by a failure or cyberattack. This step usually involves providing redundant copies of the critical assets that provide these services and switching to these copies when required.</li>\n<li>Critically, you should test all aspects of your resilience planning. This testing involves identifying failure and attack scenarios and playing these scenarios out against your system.</li>\n</ol>\n</blockquote>\n</li>\n<li class=\"quiz essay\">\n<p>A senior manager in a company is concerned about insider attacks from disaffected staff on the company’s IT assets. As part of a resilience improvement program, she proposes that a logging system and data analysis software be introduced to capture and analyze all employee actions but that employees should not be told about this system. Discuss the ethics of both introducing a logging system and doing so without telling system users.</p>\n<blockquote>\n<p>Ethical issues</p>\n<p>Introducing the logging system for keeping track of user activities inside the organization is a good idea. By doing so, any insider attack from staff members can be easily identified.</p>\n<p>The points to show the ethics of doing so are as given below:</p>\n<ol>\n<li>The logging system will keep track of all the users who are login to the system. By doing so, if any unusual activity is occurred, the system can be easily identified.</li>\n<li>If any employee tries to make access of unauthorized data, the data analysis software will easily identify the system and can send an alert to administrator.</li>\n<li>The security of system can be improved by doing so.</li>\n</ol>\n<p>Introduction of software for data analysis and using logging system is a good idea but not telling the users about is highly unethical. Inside any organization, different users will have different access rights, so, the user must be aware about it.</p>\n<p>The ethical issues associated with it are as given below:</p>\n<ol>\n<li>The system users will always think that, the organization does not trust them, so, integrity of overall organization will be affected.</li>\n<li>Users will not work freely, so, there will be decrement in effectiveness of the system.</li>\n<li>The quality delivered by users to their respective customers will also affect.</li>\n<li>The users are not able to perform any personal activity inside the organization and they will think bounded.</li>\n</ol>\n<p>So, it can be said that, introduction of software for data analysis and using logging system is a good idea but not telling the users about is highly unethical.</p>\n</blockquote>\n</li>\n<li class=\"quiz essay\">\n<p>In Section 13.4.2, (1) an unauthorized user places malicious orders to move prices and (2) an intrusion corrupts the database of transactions that have taken place. For each of these cyber- attacks, identify resistance, recognition, and recovery strategies that might be used.</p>\n<blockquote>\n<p>Recognition: The system or its operators should recognise early indications of system failure.<br />\nResistance: If the symptoms of a problem or cyberattack are detected early, then resistance strategies may be used to reduce the probability that the system will fail.<br />\nRecovery: If a failure occurs, the recovery activity ensures that critical system services are restored quickly so that system users are not badly affected by failure.<br />\nReinstatement: In this final activity, all of the system services are restored and normal system operation can continue.</p>\n</blockquote>\n</li>\n</ol>\n",
            "tags": [
                "计算机科学",
                "Master of Software Engineering",
                "ITMD 511. Application Development Methodologies",
                "软件工程"
            ]
        },
        {
            "id": "https://shoka.lostyu.me/computer-science/mse/itmd-522/lecture-11/",
            "url": "https://shoka.lostyu.me/computer-science/mse/itmd-522/lecture-11/",
            "title": "Lecture 11. Python for Unsupervised Learning",
            "date_published": "2022-04-02T06:22:20.000Z",
            "content_html": "<h1 id=\"clustering\"><a class=\"anchor\" href=\"#clustering\">#</a> Clustering</h1>\n<h2 id=\"introductions\"><a class=\"anchor\" href=\"#introductions\">#</a> Introductions</h2>\n<p>Clustering is an unsupervised learning method which can be used to discover the underlying pattern in the data structure.<br />\n 聚类是一种无监督的学习方法，可以用来发现数据结构中的潜在模式。</p>\n<p>For example, it can be used to group unlabelled data<br />\n 例如，它可以用于对未标记的数据进行分组</p>\n<h2 id=\"k-means-clustering\"><a class=\"anchor\" href=\"#k-means-clustering\">#</a> K-Means Clustering</h2>\n<p>Requirements: numerical and normalized features<br />\n 要求：数值化和归一化特征</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> scipy <span class=\"token keyword\">as</span> sp</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">from</span> IPython<span class=\"token punctuation\">.</span>display <span class=\"token keyword\">import</span> display<span class=\"token punctuation\">,</span> HTML</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>df<span class=\"token operator\">=</span>pd<span class=\"token punctuation\">.</span>read_csv<span class=\"token punctuation\">(</span><span class=\"token string\">'data_students.csv'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>cols<span class=\"token operator\">=</span>df<span class=\"token punctuation\">.</span>columns</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># print out and display dataframe as tables in HTML</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>display<span class=\"token punctuation\">(</span>HTML<span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>to_html<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\"># replace missing values in numerical variables by using mean value</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\"># 用均值代替数值变量中的缺失值 </span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>df<span class=\"token punctuation\">[</span><span class=\"token string\">\"Age\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>fillna<span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">[</span><span class=\"token string\">\"Age\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>mean<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> inplace<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>df<span class=\"token punctuation\">[</span><span class=\"token string\">\"Hours on Assignments\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>fillna<span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">[</span><span class=\"token string\">\"Hours on Assignments\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>mean<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> inplace<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>df<span class=\"token punctuation\">[</span><span class=\"token string\">\"Hours on Games\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>fillna<span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">[</span><span class=\"token string\">\"Hours on Games\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>mean<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> inplace<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>df<span class=\"token punctuation\">[</span><span class=\"token string\">\"Exam\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>fillna<span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">[</span><span class=\"token string\">\"Exam\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>mean<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> inplace<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>df<span class=\"token punctuation\">[</span><span class=\"token string\">\"Grade\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>fillna<span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">[</span><span class=\"token string\">\"Grade\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>mean<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> inplace<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token comment\"># check again whether there are missing values</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token comment\"># 再次检查是否有缺失值</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ColumnName, DataType, MissingValues'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> cols<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> <span class=\"token string\">','</span><span class=\"token punctuation\">,</span> df<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>dtype<span class=\"token punctuation\">,</span><span class=\"token string\">','</span><span class=\"token punctuation\">,</span>df<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>isnull<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre> </pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token comment\"># remove column ID</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>df<span class=\"token operator\">=</span>df<span class=\"token punctuation\">.</span>drop<span class=\"token punctuation\">(</span><span class=\"token string\">'ID'</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token comment\"># print out and display dataframe as tables in HTML</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>display<span class=\"token punctuation\">(</span>HTML<span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>to_html<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token comment\"># Data preprocessing</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Column Datatypes:\\n'</span><span class=\"token punctuation\">,</span>df<span class=\"token punctuation\">.</span>dtypes<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token comment\"># convert all nominal variables to binary variables</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token comment\"># 将所有名义变量转换为二进制变量</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>df_raw<span class=\"token operator\">=</span>df<span class=\"token punctuation\">.</span>copy<span class=\"token punctuation\">(</span>deep<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"36\"></td><td><pre>df_knn<span class=\"token operator\">=</span>df<span class=\"token punctuation\">.</span>copy<span class=\"token punctuation\">(</span>deep<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token comment\"># create new binary columns</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token comment\"># 新建二进制列</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>df_dummies<span class=\"token operator\">=</span>pd<span class=\"token punctuation\">.</span>get_dummies<span class=\"token punctuation\">(</span>df_knn<span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token string\">'Degree'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'Nationality'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token comment\"># add them to dataframe</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>df_knn<span class=\"token operator\">=</span>df_knn<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>df_dummies<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token comment\"># drop original columns</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>df_knn<span class=\"token operator\">=</span>df_knn<span class=\"token punctuation\">.</span>drop<span class=\"token punctuation\">(</span><span class=\"token string\">'Degree'</span><span class=\"token punctuation\">,</span>axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>df_knn<span class=\"token operator\">=</span>df_knn<span class=\"token punctuation\">.</span>drop<span class=\"token punctuation\">(</span><span class=\"token string\">'Nationality'</span><span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>display<span class=\"token punctuation\">(</span><span class=\"token string\">'Data Example:'</span><span class=\"token punctuation\">,</span>HTML<span class=\"token punctuation\">(</span>df_knn<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>to_html<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token comment\"># Normalized all numerical features</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre><span class=\"token comment\"># 归一化所有数值特征</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre><span class=\"token comment\"># find numeric columns 查找数字列</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>numerics <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'int16'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'int32'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'int64'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'float16'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'float32'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'float64'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>cols_numeric <span class=\"token operator\">=</span> df_knn<span class=\"token punctuation\">.</span>select_dtypes<span class=\"token punctuation\">(</span>include<span class=\"token operator\">=</span>numerics<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>columns<span class=\"token punctuation\">.</span>tolist<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Selected numerical columns:\\n'</span><span class=\"token punctuation\">,</span>cols_numeric<span class=\"token punctuation\">)</span>    </pre></td></tr><tr><td data-num=\"54\"></td><td><pre></pre></td></tr><tr><td data-num=\"55\"></td><td><pre><span class=\"token comment\"># min-max normalization to scale [0, 1]</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre><span class=\"token keyword\">for</span> col <span class=\"token keyword\">in</span> cols_numeric<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    df_knn<span class=\"token punctuation\">[</span>col<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>df_knn<span class=\"token punctuation\">[</span>col<span class=\"token punctuation\">]</span><span class=\"token operator\">-</span>df_knn<span class=\"token punctuation\">[</span>col<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">min</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token punctuation\">(</span>df_knn<span class=\"token punctuation\">[</span>col<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span>df_knn<span class=\"token punctuation\">[</span>col<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">min</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre></pre></td></tr><tr><td data-num=\"59\"></td><td><pre></pre></td></tr><tr><td data-num=\"60\"></td><td><pre><span class=\"token comment\"># We ignore the label column</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre><span class=\"token comment\"># 忽略标签列</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>df_kmeans<span class=\"token operator\">=</span>df_knn<span class=\"token punctuation\">.</span>drop<span class=\"token punctuation\">(</span><span class=\"token string\">'GradeLetter'</span><span class=\"token punctuation\">,</span>axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>display<span class=\"token punctuation\">(</span>HTML<span class=\"token punctuation\">(</span>df_kmeans<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>to_html<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre></pre></td></tr><tr><td data-num=\"65\"></td><td><pre><span class=\"token comment\"># KMeans clustering </span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre><span class=\"token keyword\">import</span> matplotlib<span class=\"token punctuation\">.</span>pyplot <span class=\"token keyword\">as</span> plt</pre></td></tr><tr><td data-num=\"67\"></td><td><pre><span class=\"token keyword\">from</span> matplotlib<span class=\"token punctuation\">.</span>colors <span class=\"token keyword\">import</span> ListedColormap</pre></td></tr><tr><td data-num=\"68\"></td><td><pre><span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>cluster <span class=\"token keyword\">import</span> KMeans</pre></td></tr><tr><td data-num=\"69\"></td><td><pre></pre></td></tr><tr><td data-num=\"70\"></td><td><pre><span class=\"token comment\"># API, https://scikit-learn.org/stable/modules/generated/sklearn.cluster.KMeans.html</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>kmeans<span class=\"token operator\">=</span>KMeans<span class=\"token punctuation\">(</span>n_clusters<span class=\"token operator\">=</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> random_state<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>max_iter<span class=\"token operator\">=</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>kmeans<span class=\"token punctuation\">.</span>fit<span class=\"token punctuation\">(</span>df_kmeans<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>y_pred<span class=\"token operator\">=</span>kmeans<span class=\"token punctuation\">.</span>predict<span class=\"token punctuation\">(</span>df_kmeans<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>plt<span class=\"token punctuation\">.</span>scatter<span class=\"token punctuation\">(</span>df_kmeans<span class=\"token punctuation\">[</span><span class=\"token string\">'Exam'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>df_kmeans<span class=\"token punctuation\">[</span><span class=\"token string\">'Grade'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>c<span class=\"token operator\">=</span>y_pred<span class=\"token punctuation\">,</span>cmap<span class=\"token operator\">=</span><span class=\"token string\">'viridis'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre></pre></td></tr><tr><td data-num=\"78\"></td><td><pre><span class=\"token comment\"># get the cluster labels and add it back to the original data</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre><span class=\"token comment\"># 获取聚类标签并将其添加回原始数据</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>opt<span class=\"token operator\">=</span>kmeans<span class=\"token punctuation\">.</span>labels_</pre></td></tr><tr><td data-num=\"81\"></td><td><pre>df_knn<span class=\"token punctuation\">[</span><span class=\"token string\">'Cluster'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>opt</pre></td></tr><tr><td data-num=\"82\"></td><td><pre>display<span class=\"token punctuation\">(</span><span class=\"token string\">'Data:'</span><span class=\"token punctuation\">,</span>HTML<span class=\"token punctuation\">(</span>df_knn<span class=\"token punctuation\">.</span>tail<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>to_html<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre></pre></td></tr><tr><td data-num=\"84\"></td><td><pre></pre></td></tr><tr><td data-num=\"85\"></td><td><pre><span class=\"token comment\"># try different K value and find the best K for KMeans</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre><span class=\"token comment\"># 尝试不同的 K 值，找到最适合 KMeans 的 K 值</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre><span class=\"token comment\"># Assumption: SSE is smaller, it is better</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre><span class=\"token comment\"># 假设：SSE 越小越好</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>Sum_of_squared_distances <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>K <span class=\"token operator\">=</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">15</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre><span class=\"token keyword\">for</span> k <span class=\"token keyword\">in</span> K<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>    km <span class=\"token operator\">=</span> KMeans<span class=\"token punctuation\">(</span>n_clusters<span class=\"token operator\">=</span>k<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>    km <span class=\"token operator\">=</span> km<span class=\"token punctuation\">.</span>fit<span class=\"token punctuation\">(</span>df_kmeans<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>    Sum_of_squared_distances<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>km<span class=\"token punctuation\">.</span>inertia_<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"97\"></td><td><pre><span class=\"token comment\"># Plot K and SSE, observe which one is better</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre><span class=\"token comment\"># K 图和 SSE 图，观察哪个更好</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre><span class=\"token comment\"># In the plot, the elbow on the arm is optimal k</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre><span class=\"token comment\"># 图中折点是最佳 K</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>plt<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span>K<span class=\"token punctuation\">,</span> Sum_of_squared_distances<span class=\"token punctuation\">,</span> <span class=\"token string\">'bx-'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>plt<span class=\"token punctuation\">.</span>xlabel<span class=\"token punctuation\">(</span><span class=\"token string\">'k'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>plt<span class=\"token punctuation\">.</span>ylabel<span class=\"token punctuation\">(</span><span class=\"token string\">'Sum_of_squared_distances'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>plt<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">(</span><span class=\"token string\">'Elbow Method For Optimal k'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>plt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"dbscan-density-based-clustering\"><a class=\"anchor\" href=\"#dbscan-density-based-clustering\">#</a> DBSCAN - Density-based Clustering</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>cluster <span class=\"token keyword\">import</span> DBSCAN</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># API: https://scikit-learn.org/stable/modules/generated/sklearn.cluster.DBSCAN.html</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>df_dbscan<span class=\"token operator\">=</span>df_knn<span class=\"token punctuation\">.</span>drop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'GradeLetter'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'Cluster'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>display<span class=\"token punctuation\">(</span><span class=\"token string\">'Data:'</span><span class=\"token punctuation\">,</span>HTML<span class=\"token punctuation\">(</span>df_dbscan<span class=\"token punctuation\">.</span>tail<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>to_html<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># Numpy array of all the cluster labels assigned to each data point </span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># 分配给每个数据点的所有聚类标签的 Numpy 数组</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>db_default <span class=\"token operator\">=</span> DBSCAN<span class=\"token punctuation\">(</span>eps <span class=\"token operator\">=</span> <span class=\"token number\">0.2</span><span class=\"token punctuation\">,</span> min_samples <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>fit<span class=\"token punctuation\">(</span>df_dbscan<span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>labels <span class=\"token operator\">=</span> db_default<span class=\"token punctuation\">.</span>labels_ </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>df_dbscan<span class=\"token punctuation\">[</span><span class=\"token string\">'Cluster'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>labels</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>display<span class=\"token punctuation\">(</span><span class=\"token string\">'Data after clustering:'</span><span class=\"token punctuation\">,</span>HTML<span class=\"token punctuation\">(</span>df_dbscan<span class=\"token punctuation\">.</span>tail<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>to_html<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\"># Visualize the clusters 可视化集群</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\"># Building the label to colour mapping </span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\"># 构建标签到颜色的映射</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\"># Need to figure out how many clusters were produced, then assign different number of the colors</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token comment\"># 需要计算出产生了多少簇，然后分配不同数量的颜色</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>colours <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span> </pre></td></tr><tr><td data-num=\"21\"></td><td><pre>colours<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'r'</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>colours<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'g'</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>colours<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'b'</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>colours<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'k'</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token comment\"># Building the colour vector for each data point </span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token comment\"># 为每个数据点构建颜色向量</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>cvec <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>colours<span class=\"token punctuation\">[</span>label<span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> label <span class=\"token keyword\">in</span> labels<span class=\"token punctuation\">]</span> </pre></td></tr><tr><td data-num=\"29\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token comment\"># For the construction of the legend of the plot </span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>r <span class=\"token operator\">=</span> plt<span class=\"token punctuation\">.</span>scatter<span class=\"token punctuation\">(</span>df_dbscan<span class=\"token punctuation\">[</span><span class=\"token string\">'Age'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> df_dbscan<span class=\"token punctuation\">[</span><span class=\"token string\">'Exam'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> color <span class=\"token operator\">=</span><span class=\"token string\">'r'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"32\"></td><td><pre>g <span class=\"token operator\">=</span> plt<span class=\"token punctuation\">.</span>scatter<span class=\"token punctuation\">(</span>df_dbscan<span class=\"token punctuation\">[</span><span class=\"token string\">'Age'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> df_dbscan<span class=\"token punctuation\">[</span><span class=\"token string\">'Exam'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> color <span class=\"token operator\">=</span><span class=\"token string\">'g'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"33\"></td><td><pre>b <span class=\"token operator\">=</span> plt<span class=\"token punctuation\">.</span>scatter<span class=\"token punctuation\">(</span>df_dbscan<span class=\"token punctuation\">[</span><span class=\"token string\">'Age'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> df_dbscan<span class=\"token punctuation\">[</span><span class=\"token string\">'Exam'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> color <span class=\"token operator\">=</span><span class=\"token string\">'b'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"34\"></td><td><pre>k <span class=\"token operator\">=</span> plt<span class=\"token punctuation\">.</span>scatter<span class=\"token punctuation\">(</span>df_dbscan<span class=\"token punctuation\">[</span><span class=\"token string\">'Age'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> df_dbscan<span class=\"token punctuation\">[</span><span class=\"token string\">'Exam'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> color <span class=\"token operator\">=</span><span class=\"token string\">'k'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"35\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token comment\"># Plotting P1 on the X-Axis and P2 on the Y-Axis  </span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token comment\"># 在 X 轴上绘制 P1，在 Y 轴上绘制 P2</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token comment\"># according to the colour vector defined </span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token comment\"># 根据定义的颜色向量</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>plt<span class=\"token punctuation\">.</span>figure<span class=\"token punctuation\">(</span>figsize <span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"41\"></td><td><pre>plt<span class=\"token punctuation\">.</span>scatter<span class=\"token punctuation\">(</span>df_dbscan<span class=\"token punctuation\">[</span><span class=\"token string\">'Age'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> df_dbscan<span class=\"token punctuation\">[</span><span class=\"token string\">'Exam'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> c <span class=\"token operator\">=</span> cvec<span class=\"token punctuation\">)</span>   </pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token comment\"># Building the legend </span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>plt<span class=\"token punctuation\">.</span>legend<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">,</span> g<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'Label 0'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Label 1'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Label 2'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Label -1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>   </pre></td></tr><tr><td data-num=\"44\"></td><td><pre>plt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"hierarchical-clustering\"><a class=\"anchor\" href=\"#hierarchical-clustering\">#</a> Hierarchical Clustering</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>cluster <span class=\"token keyword\">import</span> AgglomerativeClustering</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> scipy<span class=\"token punctuation\">.</span>cluster<span class=\"token punctuation\">.</span>hierarchy <span class=\"token keyword\">as</span> shc </pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># API, https://scikit-learn.org/stable/modules/generated/sklearn.cluster.AgglomerativeClustering.html</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>df_hc<span class=\"token operator\">=</span>df_knn<span class=\"token punctuation\">.</span>drop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'GradeLetter'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'Cluster'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>display<span class=\"token punctuation\">(</span><span class=\"token string\">'Data:'</span><span class=\"token punctuation\">,</span>HTML<span class=\"token punctuation\">(</span>df_hc<span class=\"token punctuation\">.</span>tail<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>to_html<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># Plot Dendrogram</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>plt<span class=\"token punctuation\">.</span>figure<span class=\"token punctuation\">(</span>figsize <span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>plt<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">(</span><span class=\"token string\">'Visualising the data'</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>Dendrogram <span class=\"token operator\">=</span> shc<span class=\"token punctuation\">.</span>dendrogram<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>shc<span class=\"token punctuation\">.</span>linkage<span class=\"token punctuation\">(</span>df_hc<span class=\"token punctuation\">,</span> method <span class=\"token operator\">=</span><span class=\"token string\">'single'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\"># Clustering based on the Dendrogram</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\"># 基于树状图的聚类分析</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\"># choose best K based on elbow method introduced above</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\"># 基于上面介绍的弯肘法选择最佳 K</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>cluster <span class=\"token operator\">=</span> AgglomerativeClustering<span class=\"token punctuation\">(</span>n_clusters<span class=\"token operator\">=</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> affinity<span class=\"token operator\">=</span><span class=\"token string\">'euclidean'</span><span class=\"token punctuation\">,</span> linkage<span class=\"token operator\">=</span><span class=\"token string\">'single'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>cls<span class=\"token operator\">=</span>cluster<span class=\"token punctuation\">.</span>fit_predict<span class=\"token punctuation\">(</span>df_hc<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>cluster<span class=\"token punctuation\">.</span>labels_<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token comment\"># Visualizing the clustering </span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>plt<span class=\"token punctuation\">.</span>figure<span class=\"token punctuation\">(</span>figsize <span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"24\"></td><td><pre>plt<span class=\"token punctuation\">.</span>scatter<span class=\"token punctuation\">(</span>df_dbscan<span class=\"token punctuation\">[</span><span class=\"token string\">'Age'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> df_dbscan<span class=\"token punctuation\">[</span><span class=\"token string\">'Exam'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"25\"></td><td><pre>           c <span class=\"token operator\">=</span> cls<span class=\"token punctuation\">,</span> cmap <span class=\"token operator\">=</span><span class=\"token string\">'rainbow'</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"26\"></td><td><pre>plt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"association-rules\"><a class=\"anchor\" href=\"#association-rules\">#</a> Association Rules</h1>\n<p>install the  <code>mlxtend</code>  library first<br />\nstart anconda prompt, To install this package with conda run one of the following:</p>\n<pre><code>conda install -c conda-forge mlxtend \nconda install -c conda-forge/label/gcc7 mlxtend \nconda install -c conda-forge/label/cf201901 mlxtend \n</code></pre>\n<p>fix install issues in windows<br />\ncopy the following dll files<br />\n <code>libcrypto-1_1-x64.*</code> <br />\n <code>libssl-1_1-x64.*</code> <br />\nfrom &quot;your Anaconda3 folder\\Library\\bin&quot; to &quot;your Anaconda3 folder\\DLLs&quot;</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># load data </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> scipy <span class=\"token keyword\">as</span> sp</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">from</span> IPython<span class=\"token punctuation\">.</span>display <span class=\"token keyword\">import</span> display<span class=\"token punctuation\">,</span> HTML</pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>df<span class=\"token operator\">=</span>pd<span class=\"token punctuation\">.</span>read_csv<span class=\"token punctuation\">(</span><span class=\"token string\">'data_students.csv'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>cols<span class=\"token operator\">=</span>df<span class=\"token punctuation\">.</span>columns</pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># print out and display dataframe as tables in HTML</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>display<span class=\"token punctuation\">(</span>HTML<span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>to_html<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\"># replace missing values in numerical variables by using mean value </span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\"># 用均值代替数值变量中的缺失值</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>df<span class=\"token punctuation\">[</span><span class=\"token string\">\"Age\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>fillna<span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">[</span><span class=\"token string\">\"Age\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>mean<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> inplace<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>df<span class=\"token punctuation\">[</span><span class=\"token string\">\"Hours on Assignments\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>fillna<span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">[</span><span class=\"token string\">\"Hours on Assignments\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>mean<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> inplace<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>df<span class=\"token punctuation\">[</span><span class=\"token string\">\"Hours on Games\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>fillna<span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">[</span><span class=\"token string\">\"Hours on Games\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>mean<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> inplace<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>df<span class=\"token punctuation\">[</span><span class=\"token string\">\"Exam\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>fillna<span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">[</span><span class=\"token string\">\"Exam\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>mean<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> inplace<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>df<span class=\"token punctuation\">[</span><span class=\"token string\">\"Grade\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>fillna<span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">[</span><span class=\"token string\">\"Grade\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>mean<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> inplace<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token comment\"># check again whether there are missing values</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ColumnName, DataType, MissingValues'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> cols<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> <span class=\"token string\">','</span><span class=\"token punctuation\">,</span> df<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>dtype<span class=\"token punctuation\">,</span><span class=\"token string\">','</span><span class=\"token punctuation\">,</span>df<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>isnull<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre> </pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token comment\"># remove column ID</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>df<span class=\"token operator\">=</span>df<span class=\"token punctuation\">.</span>drop<span class=\"token punctuation\">(</span><span class=\"token string\">'ID'</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token comment\"># print out and display dataframe as tables in HTML</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>display<span class=\"token punctuation\">(</span>HTML<span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>to_html<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token comment\"># Data preprocessing </span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Column Datatypes:\\n'</span><span class=\"token punctuation\">,</span>df<span class=\"token punctuation\">.</span>dtypes<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token comment\"># convert all numerical variable to nominal variables</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>df_nb<span class=\"token operator\">=</span>df<span class=\"token punctuation\">.</span>copy<span class=\"token punctuation\">(</span>deep<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>df_nb<span class=\"token punctuation\">[</span><span class=\"token string\">'Gender'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> df_nb<span class=\"token punctuation\">[</span><span class=\"token string\">'Gender'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>astype<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>df_nb<span class=\"token punctuation\">[</span><span class=\"token string\">'Age'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>cut<span class=\"token punctuation\">(</span>df_nb<span class=\"token punctuation\">[</span><span class=\"token string\">'Age'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>df_nb<span class=\"token punctuation\">[</span><span class=\"token string\">'Hours on Readings'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>cut<span class=\"token punctuation\">(</span>df_nb<span class=\"token punctuation\">[</span><span class=\"token string\">'Hours on Readings'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>df_nb<span class=\"token punctuation\">[</span><span class=\"token string\">'Hours on Assignments'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>cut<span class=\"token punctuation\">(</span>df_nb<span class=\"token punctuation\">[</span><span class=\"token string\">'Hours on Assignments'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>df_nb<span class=\"token punctuation\">[</span><span class=\"token string\">'Hours on Games'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>cut<span class=\"token punctuation\">(</span>df_nb<span class=\"token punctuation\">[</span><span class=\"token string\">'Hours on Games'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>df_nb<span class=\"token punctuation\">[</span><span class=\"token string\">'Hours on Internet'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>cut<span class=\"token punctuation\">(</span>df_nb<span class=\"token punctuation\">[</span><span class=\"token string\">'Hours on Internet'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>df_nb<span class=\"token punctuation\">[</span><span class=\"token string\">'Exam'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>cut<span class=\"token punctuation\">(</span>df_nb<span class=\"token punctuation\">[</span><span class=\"token string\">'Exam'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>df_nb<span class=\"token punctuation\">[</span><span class=\"token string\">'Grade'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>cut<span class=\"token punctuation\">(</span>df_nb<span class=\"token punctuation\">[</span><span class=\"token string\">'Grade'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>display<span class=\"token punctuation\">(</span><span class=\"token string\">'Data Example'</span><span class=\"token punctuation\">,</span>HTML<span class=\"token punctuation\">(</span>df_nb<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>to_html<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre><span class=\"token comment\"># Association Rule Mining </span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre></pre></td></tr><tr><td data-num=\"49\"></td><td><pre><span class=\"token keyword\">from</span> mlxtend<span class=\"token punctuation\">.</span>frequent_patterns <span class=\"token keyword\">import</span> apriori</pre></td></tr><tr><td data-num=\"50\"></td><td><pre><span class=\"token keyword\">from</span> mlxtend<span class=\"token punctuation\">.</span>frequent_patterns <span class=\"token keyword\">import</span> association_rules</pre></td></tr><tr><td data-num=\"51\"></td><td><pre><span class=\"token keyword\">from</span> mlxtend<span class=\"token punctuation\">.</span>preprocessing <span class=\"token keyword\">import</span> TransactionEncoder</pre></td></tr><tr><td data-num=\"52\"></td><td><pre><span class=\"token keyword\">import</span> matplotlib<span class=\"token punctuation\">.</span>pyplot <span class=\"token keyword\">as</span> plt  </pre></td></tr><tr><td data-num=\"53\"></td><td><pre></pre></td></tr><tr><td data-num=\"54\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>df_nb<span class=\"token punctuation\">.</span>dtypes<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre><span class=\"token comment\"># convert all columns to strings</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre><span class=\"token comment\"># 将所有列转换为字符串</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>df_nb <span class=\"token operator\">=</span> df_nb<span class=\"token punctuation\">.</span>astype<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>df_nb<span class=\"token punctuation\">[</span><span class=\"token string\">'Gender'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'Gender='</span> <span class=\"token operator\">+</span> df_nb<span class=\"token punctuation\">[</span><span class=\"token string\">'Gender'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>astype<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>df_nb<span class=\"token punctuation\">[</span><span class=\"token string\">'Age'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'Age='</span> <span class=\"token operator\">+</span> df_nb<span class=\"token punctuation\">[</span><span class=\"token string\">'Age'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>astype<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>df_nb<span class=\"token punctuation\">[</span><span class=\"token string\">'Hours on Readings'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'Readings='</span> <span class=\"token operator\">+</span> df_nb<span class=\"token punctuation\">[</span><span class=\"token string\">'Hours on Readings'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>astype<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>df_nb<span class=\"token punctuation\">[</span><span class=\"token string\">'Hours on Assignments'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'Assignments='</span> <span class=\"token operator\">+</span> df_nb<span class=\"token punctuation\">[</span><span class=\"token string\">'Hours on Assignments'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>astype<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>df_nb<span class=\"token punctuation\">[</span><span class=\"token string\">'Hours on Games'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'Games='</span> <span class=\"token operator\">+</span> df_nb<span class=\"token punctuation\">[</span><span class=\"token string\">'Hours on Games'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>astype<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>df_nb<span class=\"token punctuation\">[</span><span class=\"token string\">'Hours on Internet'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'Internet='</span> <span class=\"token operator\">+</span> df_nb<span class=\"token punctuation\">[</span><span class=\"token string\">'Hours on Internet'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>astype<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>df_nb<span class=\"token punctuation\">[</span><span class=\"token string\">'Exam'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'Exam='</span> <span class=\"token operator\">+</span> df_nb<span class=\"token punctuation\">[</span><span class=\"token string\">'Exam'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>astype<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>df_nb<span class=\"token punctuation\">[</span><span class=\"token string\">'Grade'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'Grade='</span> <span class=\"token operator\">+</span> df_nb<span class=\"token punctuation\">[</span><span class=\"token string\">'Grade'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>astype<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>df_nb<span class=\"token punctuation\">.</span>dtypes<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre></pre></td></tr><tr><td data-num=\"68\"></td><td><pre></pre></td></tr><tr><td data-num=\"69\"></td><td><pre><span class=\"token comment\"># convert data frame to lists</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre><span class=\"token comment\"># 将数据帧转换为列表</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>df_arr <span class=\"token operator\">=</span> df_nb<span class=\"token punctuation\">.</span>stack<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>groupby<span class=\"token punctuation\">(</span>level<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">apply</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>tolist<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre></pre></td></tr><tr><td data-num=\"73\"></td><td><pre><span class=\"token comment\"># Encode lists to transactions</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre><span class=\"token comment\"># 将列表编码为事务</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>te <span class=\"token operator\">=</span> TransactionEncoder<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>df_transactions <span class=\"token operator\">=</span> te<span class=\"token punctuation\">.</span>fit_transform<span class=\"token punctuation\">(</span>df_arr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre><span class=\"token comment\"># covnert the values to booleans: TRUE and FALSE</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>df_rules <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>DataFrame<span class=\"token punctuation\">(</span>df_transactions<span class=\"token punctuation\">,</span>columns<span class=\"token operator\">=</span>te<span class=\"token punctuation\">.</span>columns_<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>display<span class=\"token punctuation\">(</span><span class=\"token string\">'Data Example'</span><span class=\"token punctuation\">,</span>HTML<span class=\"token punctuation\">(</span>df_rules<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>to_html<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre></pre></td></tr><tr><td data-num=\"81\"></td><td><pre><span class=\"token comment\"># API, http://rasbt.github.io/mlxtend/user_guide/frequent_patterns/apriori/</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>frequent_itemsets <span class=\"token operator\">=</span> apriori<span class=\"token punctuation\">(</span>df_rules<span class=\"token punctuation\">,</span> min_support<span class=\"token operator\">=</span><span class=\"token number\">0.45</span><span class=\"token punctuation\">,</span> use_colnames<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre><span class=\"token comment\"># API, http://rasbt.github.io/mlxtend/user_guide/frequent_patterns/association_rules/</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>rules <span class=\"token operator\">=</span> association_rules<span class=\"token punctuation\">(</span>frequent_itemsets<span class=\"token punctuation\">,</span> metric<span class=\"token operator\">=</span><span class=\"token string\">\"confidence\"</span><span class=\"token punctuation\">,</span> min_threshold<span class=\"token operator\">=</span><span class=\"token number\">0.7</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>display<span class=\"token punctuation\">(</span><span class=\"token string\">'Rules'</span><span class=\"token punctuation\">,</span>HTML<span class=\"token punctuation\">(</span>rules<span class=\"token punctuation\">.</span>to_html<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"outlier-detection\"><a class=\"anchor\" href=\"#outlier-detection\">#</a> Outlier Detection</h1>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> matplotlib<span class=\"token punctuation\">.</span>pyplot <span class=\"token keyword\">as</span> plt</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> seaborn <span class=\"token keyword\">as</span> sns</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>neighbors <span class=\"token keyword\">import</span> LocalOutlierFactor</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># API, https://scikit-learn.org/stable/modules/generated/sklearn.neighbors.LocalOutlierFactor.html#sklearn.neighbors.LocalOutlierFactor</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># Data preprocessing </span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># Prepare a numerical feature matrix, better to be normalized</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\"># 准备一个数值特征矩阵，最好归一化</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Column Datatypes:\\n'</span><span class=\"token punctuation\">,</span>df<span class=\"token punctuation\">.</span>dtypes<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\"># convert all nominal variables to binary variables</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>df_raw<span class=\"token operator\">=</span>df<span class=\"token punctuation\">.</span>copy<span class=\"token punctuation\">(</span>deep<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"15\"></td><td><pre>df_knn<span class=\"token operator\">=</span>df<span class=\"token punctuation\">.</span>copy<span class=\"token punctuation\">(</span>deep<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\"># create new binary columns</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>df_dummies<span class=\"token operator\">=</span>pd<span class=\"token punctuation\">.</span>get_dummies<span class=\"token punctuation\">(</span>df_knn<span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token string\">'Degree'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'Nationality'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\"># add them to dataframe</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>df_knn<span class=\"token operator\">=</span>df_knn<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>df_dummies<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token comment\"># drop original columns</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>df_knn<span class=\"token operator\">=</span>df_knn<span class=\"token punctuation\">.</span>drop<span class=\"token punctuation\">(</span><span class=\"token string\">'Degree'</span><span class=\"token punctuation\">,</span>axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>df_knn<span class=\"token operator\">=</span>df_knn<span class=\"token punctuation\">.</span>drop<span class=\"token punctuation\">(</span><span class=\"token string\">'Nationality'</span><span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>display<span class=\"token punctuation\">(</span><span class=\"token string\">'Data Example:'</span><span class=\"token punctuation\">,</span>HTML<span class=\"token punctuation\">(</span>df_knn<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>to_html<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token comment\"># Normalized all numerical features</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token comment\"># 归一化所有数值特征</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token comment\"># find numeric columns</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>numerics <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'int16'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'int32'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'int64'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'float16'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'float32'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'float64'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>cols_numeric <span class=\"token operator\">=</span> df_knn<span class=\"token punctuation\">.</span>select_dtypes<span class=\"token punctuation\">(</span>include<span class=\"token operator\">=</span>numerics<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>columns<span class=\"token punctuation\">.</span>tolist<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Selected numerical columns:\\n'</span><span class=\"token punctuation\">,</span>cols_numeric<span class=\"token punctuation\">)</span>    </pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token comment\"># min-max normalization to scale [0, 1]</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token keyword\">for</span> col <span class=\"token keyword\">in</span> cols_numeric<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    df_knn<span class=\"token punctuation\">[</span>col<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>df_knn<span class=\"token punctuation\">[</span>col<span class=\"token punctuation\">]</span><span class=\"token operator\">-</span>df_knn<span class=\"token punctuation\">[</span>col<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">min</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token punctuation\">(</span>df_knn<span class=\"token punctuation\">[</span>col<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span>df_knn<span class=\"token punctuation\">[</span>col<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">min</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>df_knn<span class=\"token operator\">=</span>df_knn<span class=\"token punctuation\">.</span>drop<span class=\"token punctuation\">(</span><span class=\"token string\">\"GradeLetter\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>display<span class=\"token punctuation\">(</span>HTML<span class=\"token punctuation\">(</span>df_knn<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>to_html<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token comment\"># API, https://scikit-learn.org/stable/modules/generated/sklearn.neighbors.LocalOutlierFactor.html#sklearn.neighbors.LocalOutlierFactor</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token comment\"># plot data points</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>plt<span class=\"token punctuation\">.</span>scatter<span class=\"token punctuation\">(</span>df_knn<span class=\"token punctuation\">[</span><span class=\"token string\">\"Age\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> df_knn<span class=\"token punctuation\">[</span><span class=\"token string\">\"Exam\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> color <span class=\"token operator\">=</span> <span class=\"token string\">\"b\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>plt<span class=\"token punctuation\">.</span>grid<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>plt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre><span class=\"token comment\"># model specification</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>model1 <span class=\"token operator\">=</span> LocalOutlierFactor<span class=\"token punctuation\">(</span>n_neighbors <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> metric <span class=\"token operator\">=</span> <span class=\"token string\">\"euclidean\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre><span class=\"token comment\"># model fitting 模型拟合</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>y_pred <span class=\"token operator\">=</span> model1<span class=\"token punctuation\">.</span>fit_predict<span class=\"token punctuation\">(</span>df_knn<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre><span class=\"token comment\"># filter outlier index 过滤离群指数</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>outlier_index <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>where<span class=\"token punctuation\">(</span>y_pred <span class=\"token operator\">==</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># negative values are outliers </span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"outlier indices: \"</span><span class=\"token punctuation\">,</span> outlier_index<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre><span class=\"token comment\"># filter outlier values</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>outlier_values <span class=\"token operator\">=</span> df_knn<span class=\"token punctuation\">.</span>iloc<span class=\"token punctuation\">[</span>outlier_index<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre><span class=\"token comment\"># plot data</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>plt<span class=\"token punctuation\">.</span>scatter<span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">[</span><span class=\"token string\">\"Age\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> df<span class=\"token punctuation\">[</span><span class=\"token string\">\"Exam\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> color <span class=\"token operator\">=</span> <span class=\"token string\">\"b\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre><span class=\"token comment\"># plot outlier values</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>plt<span class=\"token punctuation\">.</span>scatter<span class=\"token punctuation\">(</span>outlier_values<span class=\"token punctuation\">[</span><span class=\"token string\">\"Age\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> outlier_values<span class=\"token punctuation\">[</span><span class=\"token string\">\"Exam\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> color <span class=\"token operator\">=</span> <span class=\"token string\">\"r\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>plt<span class=\"token punctuation\">.</span>grid<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>plt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"assignment\"><a class=\"anchor\" href=\"#assignment\">#</a> Assignment</h1>\n<h2 id=\"clustering-2\"><a class=\"anchor\" href=\"#clustering-2\">#</a> Clustering</h2>\n<ul>\n<li>Ignore the column related to loan term<br />\n 忽略与贷款期限相关的列</li>\n<li>Perform Kmeans, DBSCAN and hierarchical clustering<br />\n 执行 Kmeans, DBSCAN 和层次聚类</li>\n<li>Determine the best K in Kmeans and use the same K in hierarchical clustering<br />\n 确定 Kmeans 中的最佳 K，并在层次聚类中使用相同的 K</li>\n<li>Evaluate the training process of these models by comparing SSE<br />\n 通过比较 SSE 评估这些模型的训练过程</li>\n<li>Evaluate the outputs by fusing them into your previous classification task<br />\n 通过将输出融合到之前的分类任务中来评估输出</li>\n</ul>\n<h2 id=\"association-rules-2\"><a class=\"anchor\" href=\"#association-rules-2\">#</a> Association Rules</h2>\n<ul>\n<li>Produce the rules by trying different confidence and support values<br />\n 通过尝试不同的置信度和支持值来生成规则</li>\n<li>Pick up top interesting/useful rules, and explain them, e.g., why they are valuable or interesting<br />\n 找出最有趣 / 有用的规则，并解释它们，例如，为什么它们有价值或有趣</li>\n</ul>\n<h2 id=\"outlier-detections\"><a class=\"anchor\" href=\"#outlier-detections\">#</a> Outlier Detections</h2>\n<ul>\n<li>Identify outliers by using LOF<br />\n 利用 LOF 识别离群值</li>\n<li>Re-run Kmeans clustering to see whether SSE can be reduced<br />\n 重新运行 Kmeans 聚类，看看 SSE 是否可以降低</li>\n</ul>\n",
            "tags": [
                "计算机科学",
                "Master of Software Engineering",
                "ITMD 522. Data Mining and Machine Learning",
                "数据挖掘",
                "机器学习"
            ]
        },
        {
            "id": "https://shoka.lostyu.me/trading-view/price-action/harmonic-pattern/crab/",
            "url": "https://shoka.lostyu.me/trading-view/price-action/harmonic-pattern/crab/",
            "title": "Crab 螃蟹形态",
            "date_published": "2022-03-31T08:28:30.000Z",
            "content_html": "<h1 id=\"概念\"><a class=\"anchor\" href=\"#概念\">#</a> 概念</h1>\n<p><img data-src=\"https://s2.loli.net/2022/05/05/EBFiT2pmlUbXCar.png\" alt=\"\" /></p>\n<p>螃蟹形态是一种明显的 5 点延伸结构，专门使用 XA 臂的 1.618 延伸。<br />\n这是该形态最重要的一点，是潜在反转区 (PRZ) 中的决定性价位。<br />\nBC 的极端 (2.618、3.14、3.618) 延伸是 1.618XA 延伸的补充。<br />\n另外，螃蟹形态主要利用变种 AB=CD 来补充 PRZ。<br />\n虽然最低 AB=CD 完成对于有效结构是必需的，但是变种 1.27 或 1.618 是 PRZ 中最常见的。<br />\n实际上，1.618 AB=CD 形态是该结构中使用最常见的变种。</p>\n<p>需要注意的是，螃蟹形态内的变种 AB=CD 形态是 PRZ 中 最不重要的数字。<br />\nXA 臂的 1.618 延伸和极端 BC 延伸的结合，通常会为形态的完成制造一个明确的区间。<br />\n实际上，与其他所有形态相比，AB=CD 计算或许在螃蟹形态中是最不重要的。<br />\n虽然 AB=CD 结构在螃蟹形态中不那么重要，但是该形态仍然应该具有明显的对称性。</p>\n<h2 id=\"看涨螃蟹形态\"><a class=\"anchor\" href=\"#看涨螃蟹形态\">#</a> 看涨螃蟹形态</h2>\n<p>看涨螃蟹形态具有明显的结构，最后一条臂特别长。<br />\n随着该形态接近其完成点，价格行为常常变得非常极端。<br />\n另外，最好等待 1.618XA 延伸被测试，但是 BC 延伸应该要重点考虑，而且是 PRZ 内最低价位。<br />\n此外，变种 1.27 或 1.618 AB=CD 应该补充这一区域。</p>\n<p><img data-src=\"https://s2.loli.net/2022/05/05/Sd4rYf9lVw6myBN.png\" alt=\"\" /></p>\n<h2 id=\"看跌螃蟹形态\"><a class=\"anchor\" href=\"#看跌螃蟹形态\">#</a> 看跌螃蟹形态</h2>\n<p>看跌螃蟹形态是一种精确的结构，它的 PRZ 包含三个数字：1.618XA 回调、变种 AB=CD 和极端 BC 延伸。</p>\n<p><img data-src=\"https://s2.loli.net/2022/05/05/ghN2AOpGmVQTCjS.png\" alt=\"\" /></p>\n<p>XA 和 BC 延伸的会聚定义了潜在反转区的顶部区间。<br />\n1.27 和 1.618 变种 AB=CD 形态通常补充形态完成点处的其他数字。<br />\n正如前面提到过的，对于螃蟹形态来说，AB=CD 形态在 PRZ 中不像其他形态那么重要。<br />\n最低限度，XA 必须在反转前被测试，然后才能认为形态完成，才能认为它是一个有效的架构。<br />\n在初次测试 PRZ 时，虽然价格行为可能略微超越 1.618XA 臂，但是有效螃蟹形态中的完成点会标记出精确的反转点。</p>\n<h2 id=\"看涨深海蟹形\"><a class=\"anchor\" href=\"#看涨深海蟹形\">#</a> 看涨深海蟹形</h2>\n<p>看涨深海蟹形是一种不同的结构，由 XA 臂的 0.886 价格 B 点回调来定义。<br />\n1.618 价格 XA 臂应该是 PRZ 中的最低点，是形态完成的决定性限制。<br />\n该形态通常包含某种类型的变种看涨 AB=CD，需要 1.27 或 1.618 延伸。</p>\n<p><img data-src=\"https://s2.loli.net/2022/05/05/hUfPa9RgrDLxN1w.png\" alt=\"\" /></p>\n<h2 id=\"看跌深海蟹形\"><a class=\"anchor\" href=\"#看跌深海蟹形\">#</a> 看跌深海蟹形</h2>\n<p>深海看跌蟹形专门使用一个 1.618XA 延伸来作为 PRZ 中 的决定性价位。<br />\nB 点处 0.886 回调使得该结构具有了 “深海” 特征。<br />\n从本质上讲，这个形态包含多重延伸，与变种 AB=CD 结构相结合，辨识出相当可观的潜在反转点。<br />\n该形态常常形成于趋势已经在带有极端 BC 延伸的形态中确立之后。</p>\n<p><img data-src=\"https://s2.loli.net/2022/05/05/CPQzB6pbuRW7idD.png\" alt=\"\" /></p>\n<div class=\"note info\">\n<p>虽然螃蟹形态的结构化变种可能看起来定义了相同的形态，但是斐波那契比率队列清楚地把每种类型区分为独一无二的形态。<br />\n螃蟹形态通常确定的是极端的超买和超卖行情，因为 1.618XA 臂是该形态最重要的斐波那契比率尺寸，它代表着潜在反转区 (PRZ) 中最重要的数字。<br />\n与和谐交易法中的其他形态不同，AB=CD 在完成点处不是那么关键。<br />\n虽然为每个变种区分 AB=CD 非常重要，但是变种 1.618 AB=CD 形态是大多数螃蟹形态中的首选结构。<br />\n然而， 1.27AB=CD 形态通常出现于原始版本中，而深海蟹形包含一个等距 AB=CD 也并非不常见。<br />\n极端 BC 延伸 ——— 通常是 2.618、3.14 或 3.618 延伸 ——— 突出这种结构的特征。<br />\n虽然深海蟹形允许 BC 有较宽泛的变化，但是这一延伸应该与 1.618XA 紧密地会聚。</p>\n</div>\n<h1 id=\"规则\"><a class=\"anchor\" href=\"#规则\">#</a> 规则</h1>\n<h2 id=\"形态要素\"><a class=\"anchor\" href=\"#形态要素\">#</a> 形态要素</h2>\n<ol>\n<li>B 点是 XA 0.618 回调或小于 XA 0.618 回调\n<ul>\n<li>XA 臂精确的 0.618 B 点回调或更短的回调 (0.382 和 0.50 是该结构中常见的 B 点)。</li>\n</ul>\n</li>\n<li>极端 BC 延伸，通常是 2.618、3.14 或 3.618\n<ul>\n<li>有时该结构中会形成 2.24 BC 延伸</li>\n</ul>\n</li>\n<li>最低 AB=CD 完成。变种 1.27 AB=CD 或 1.618 AB=CD 形态是最常见的。</li>\n<li>1.618 XA 延伸作为该结构的决定性限制</li>\n<li>C 点回调可能在 0.382 和 0.886 之间变化。</li>\n</ol>\n<blockquote>\n<p>这是一种极端形态必须强调这种形态易变的特征。<br />\n从这些 PRZ 开始的反转可能是迅速的，包含极端的价格行为。<br />\n螃蟹形态是一种独特的形态，拥有独特的性质，能够辨识出非凡的和谐机会。<br />\n这种形态的区别在定义每个变种时很关键。</p>\n</blockquote>\n<p>从一个和谐的角度来看，有效的螃蟹结构辨识的是极端的超卖或超买行情。<br />\n在初次测试潜在反转区时，这些形态通常提供某种类型的反应。<br />\n价格行为常常响应极端的斐波那契延伸组合，在螃蟹形态内指的是 1.618XA 臂和 2.618 或更长 的 BC 臂的组合。<br />\n螃蟹形态拥有难以置信的准确度，是和谐交易工具库中一种稳定有效的形态，能够辨识出市场中的关键反转点。</p>\n<h2 id=\"形态确认\"><a class=\"anchor\" href=\"#形态确认\">#</a> 形态确认</h2>\n<p>操作步骤：</p>\n<ol>\n<li>寻找可用的 X 点，X 点一般是明显的 V 或 U 形的高点或低点</li>\n<li>【斐波那契回撤】工具，从 X 到 A，寻找 B 点\n<ul>\n<li>如果 B 点回撤到达 XA 0.382 - 0.618 （螃蟹） 或 0.886（深蟹），则合格</li>\n</ul>\n</li>\n<li>【斐波那契回撤】工具，从 A 到 B，寻找 C 点\n<ul>\n<li>如果 C 点回撤在 AB 0.382 - 0.886 之间，则合格</li>\n</ul>\n</li>\n<li>D 点由 3 条线组成：\n<ol>\n<li>XA 1.618 - 1.902\n<ul>\n<li>【斐波那契回撤】工具，从 X 拉到 A，得到 XA 回调</li>\n<li>在 1.618 XA 和 1.902 XA 画两条水平线</li>\n<li>常见的螃蟹都会在 XA 1.618 小幅度反转，然后二次测试反转区；然后甚至可能会到达 XA 1.902 完成一个大反转</li>\n</ul>\n</li>\n<li>BC 2.618 - 3.618\n<ul>\n<li>【斐波那契回撤】工具，从 B 拉到 C，得到 BC 延伸</li>\n<li>在 BC 2.618 - 3.618 的区间中，找到最接近上述两条水平线的斐波那契参数，画两个区间</li>\n<li>BC 延伸不是关键，即使达到 BC 4.23 的螃蟹都一样有效，不必太在意是否超越书里写的 3.618 极限。</li>\n</ul>\n</li>\n<li>1.618 AB = CD\n<ul>\n<li>【斐波那契趋势扩展】工具，从 A 到 B 再到 C</li>\n<li>找到至少 1.618 的位置，对上述区间块就近找参数进行微调</li>\n</ul>\n</li>\n</ol>\n</li>\n</ol>\n<blockquote>\n<p>螃蟹一般发生在趋势的结尾，而且反应起来的速度非常快，所以判断后进场要快，否则错失机会。</p>\n</blockquote>\n<p class=\"gallery\"><img data-src=\"https://s2.loli.net/2022/05/05/lTUaJ6iQ2HVX4nd.png\" alt=\"\" title=\"【斐波那契回撤】工具，从X到A，B点回撤到达 XA 0.382 - 0.618 之间\" /><br />\n<img data-src=\"https://s2.loli.net/2022/05/05/vrgxhMiC4UkSKdj.png\" alt=\"\" title=\"【斐波那契回撤】工具，从A到B，C点回撤到达 AB 0.382 - 0.886 之间\" /><br />\n<img data-src=\"https://s2.loli.net/2022/05/05/zPgoA9UpDXrh3ws.png\" alt=\"\" title=\"寻找D点，第一步，在 1.618 XA 和 1.902 XA 画两条水平线\" /><br />\n<img data-src=\"https://s2.loli.net/2022/05/06/CSBaWE7hdlzYpkM.png\" alt=\"\" title=\"寻找D点，第二步，在 BC 2.618 - 3.618 的区间中，超过3.618也可以，找到最接近上述两条水平线的斐波那契参数，画两个区间\" /><br />\n<img data-src=\"https://s2.loli.net/2022/05/06/NlgpXCKa1VEqxiT.png\" alt=\"\" title=\"寻找D点，第三步，【斐波那契趋势扩展】工具，调整上述两个区间框，分别以底边接近最近的斐波那契参数线\" /></p>\n<h2 id=\"入场时机\"><a class=\"anchor\" href=\"#入场时机\">#</a> 入场时机</h2>\n<p>如果熊的趋势很强，注意观察盈亏比是否值得现价入场。如果盈亏比不好，则等待回踩 PRZ，如果错过就不再入场。<br />\n<img data-src=\"https://s2.loli.net/2022/05/06/xK9WyCNqRbLSJYH.png\" alt=\"\" /></p>\n<h2 id=\"止盈止损\"><a class=\"anchor\" href=\"#止盈止损\">#</a> 止盈止损</h2>\n<ol>\n<li>\n<p>【斐波那契回撤】工具，从 X 拉到 A</p>\n</li>\n<li>\n<p>止损位置：1.618 XA 入场，则止损位放在 1.902 XA 以上一点点<br />\n<img data-src=\"https://s2.loli.net/2022/05/06/fqgwCLZAsnlrmJ3.png\" alt=\"\" /></p>\n</li>\n<li>\n<p>【斐波那契回撤】工具，从 A 拉到 D</p>\n</li>\n<li>\n<p>止盈位置：一号止盈位为 0.382 AD，二号止盈位为 0.618 AD<br />\n 到达一号位后可以平仓一半，剩余仓位移动止损到成本价<br />\n<img data-src=\"https://s2.loli.net/2022/05/06/94w5BUdV6igha1m.png\" alt=\"\" /></p>\n</li>\n</ol>\n",
            "tags": [
                "交易策略",
                "价格行为",
                "谐波形态"
            ]
        },
        {
            "id": "https://shoka.lostyu.me/trading-view/price-action/harmonic-pattern/butterfly/",
            "url": "https://shoka.lostyu.me/trading-view/price-action/harmonic-pattern/butterfly/",
            "title": "Butterfly 蝴蝶形态",
            "date_published": "2022-03-31T04:13:18.000Z",
            "content_html": "<h1 id=\"概念\"><a class=\"anchor\" href=\"#概念\">#</a> 概念</h1>\n<p><img data-src=\"https://s2.loli.net/2022/05/04/ibjHPc3omvYfdwl.png\" alt=\"\" /></p>\n<p>蝴蝶形态，是一个可以产生反转信号的重要形态。<br />\n价格在经历了蝴蝶形态发生反转后，往往会产生强劲的运动。<br />\n它是一个非常强大的和谐交易形态。<br />\n蝴蝶形态的基本结构，由 Bryce Gilmore 发现。但是，我在对于该形态的结构定义中，引入了一些重要元素，以而定义了理想蝴蝶形态的结构。<br />\n对于蝴蝶形态来说，其中最重要的一个极成条件，即是其中 AB=CD 形态经常会采用其拉长延展的形态。</p>\n<h2 id=\"看涨蝴蝶形态\"><a class=\"anchor\" href=\"#看涨蝴蝶形态\">#</a> 看涨蝴蝶形态</h2>\n<p>从一个精确的 0.786 B 点回调开始，这个看涨蝴蝶形态包含一个最低要求的 AB=CD 形态，1.27XA 延伸和看涨蝴蝶形态 1.618 BC 延伸是定义潜在反转区 (PRZ) 的强势性要求。</p>\n<p><img data-src=\"https://s2.loli.net/2022/05/04/fVAZeLbwOMSv5E1.png\" alt=\"\" /></p>\n<h2 id=\"看跌蝴蝶形态\"><a class=\"anchor\" href=\"#看跌蝴蝶形态\">#</a> 看跌蝴蝶形态</h2>\n<p>理想看跌蝴蝶结构是由 XA 臂的精确的 0.786B 点回调定义的。<br />\n该架构需要一个 AB=CD 形态，应该与 1.27 XA 延伸和 1.618 BC 延伸会聚在一起，这是定义 PRZ 的最低条件。</p>\n<p><img data-src=\"https://s2.loli.net/2022/05/04/hXCeLRg49MpstGU.png\" alt=\"\" /></p>\n<h2 id=\"完美看涨蝴蝶形态\"><a class=\"anchor\" href=\"#完美看涨蝴蝶形态\">#</a> 完美看涨蝴蝶形态</h2>\n<p>完美看涨蝴蝶形态是一种明显的 5 点延伸结构，需要具体的斐波那契数字队列，包括 PRZ 中的最低限制 1.27XA 延伸。<br />\n该形态也必须包含一个带精确 1.618 BC 延伸的 1.27 AB=CD 形态。</p>\n<p><img data-src=\"https://s2.loli.net/2022/05/04/z4N96lLYCXDT2ic.png\" alt=\"\" /></p>\n<h2 id=\"完美看跌蝴蝶形态\"><a class=\"anchor\" href=\"#完美看跌蝴蝶形态\">#</a> 完美看跌蝴蝶形态</h2>\n<p>完美看跌蝴蝶形态是一种明显的 5 点延伸结构，利用 1.27 XA 延伸作为 PRZ 中的最高限制。<br />\n该形态应该具有一个带 1.618 BC 延伸的变种 1.27 AB=CD 形态补充 PRZ。</p>\n<p><img data-src=\"https://s2.loli.net/2022/05/04/SDRxbMhcAZo4dPF.png\" alt=\"\" /></p>\n<div class=\"note info\">\n<p>蝴蝶形态是一种特殊的 5 点延伸结构，具有独特的斐波那契比率队列来确认该形态有效。<br />\n该形态的首要决定性元素是 XA 臂的精确的 0.786 B 点回调。<br />\n蝴蝶形态只使用一个 1.27 XA 延伸作为 PRZ 中最重要的数字。<br />\n此外，等距 AB=CD 形态是该形态完成的最低要求。<br />\n但是，对于该结构来说，变种 1.27 AB=CD 形态更为常见。<br />\nBC 延伸是这种形态的又一个决定性元素，它必须至少是一个 1.618 延伸。<br />\n然而，蝴蝶形态中 BC 延伸不像在螃蟹形态中那么极端。</p>\n</div>\n<h1 id=\"规则\"><a class=\"anchor\" href=\"#规则\">#</a> 规则</h1>\n<h2 id=\"形态要素\"><a class=\"anchor\" href=\"#形态要素\">#</a> 形态要素</h2>\n<ol>\n<li>B 点回调必须精准到达 XA 的 0.786 的位置。</li>\n<li>C 点回调可能在 AB 0.382 和 0.886 之间变化，不 0.618 是首选。</li>\n<li>BC 延伸可能在 1.618 和 2.618 之间变化，具体取决于 C 点回调。</li>\n<li>反转区间必须完成 AB=CD 形态，变种 1.27 AB=CD 最为常见，一般都会达到。</li>\n<li>D 点和之前的形态一样，由 3 条斐波那契线重叠组成</li>\n</ol>\n<blockquote>\n<p>D 点的参数在 2019 年有被优化，之前 D 点只接受 AX 1.27，现在则能接受 1.27 - 1.414<br />\nBC 延伸找 D 点也从之前的 1.618 -2.24 变成 1.618 - 2.618</p>\n</blockquote>\n<p>蝴蝶形态类似于加特利形态，因为它需要一个特殊的斐波那契比率队列 ——— 特别是一个精确的 B 点 ——— 来确认这种结构有效。<br />\n虽然如此严格的定义减少了可能的交易机会的数量，但是这种精确性减少了无效的情形。<br />\n那些无效的情形可能看起来相似，但却不能产生一致准确的架构。</p>\n<p>D 点会超过 X 点，一般是发生在一些趋势的尾声。</p>\n<h2 id=\"形态确认\"><a class=\"anchor\" href=\"#形态确认\">#</a> 形态确认</h2>\n<p>操作步骤：</p>\n<ol>\n<li>寻找可用的 X 点，X 点一般是明显的 V 或 U 形的高点或低点</li>\n<li>【斐波那契回撤】工具，从 X 到 A，寻找 B 点\n<ul>\n<li>如果 B 点回撤到达 XA 0.786 左右，则合格</li>\n</ul>\n</li>\n<li>【斐波那契回撤】工具，从 A 到 B，寻找 C 点\n<ul>\n<li>如果 C 点回撤在 AB 0.382 - 0.886 之间，则合格</li>\n</ul>\n</li>\n<li>D 点由 3 条线组成：\n<ol>\n<li>XA 1.272 - 1.414\n<ul>\n<li>【斐波那契回撤】工具，从 X 拉到 A，得到 XA 回调</li>\n<li>在 1.272 XA 和 1.414 XA 画两条水平线</li>\n<li>如果 1.272 XA 到了没反应，则有可能去到 1.414 XA</li>\n</ul>\n</li>\n<li>BC 1.618 - 2.618\n<ul>\n<li>【斐波那契回撤】工具，从 B 拉到 C，得到 BC 延伸</li>\n<li>在 BC 1.618 - 2.618 的区间中，找到最接近上述两条水平线的斐波那契参数，画两个区间</li>\n</ul>\n</li>\n<li>1.27 AB = CD\n<ul>\n<li>【斐波那契趋势扩展】工具，从 A 到 B 再到 C</li>\n<li>找到至少 1.27 的位置，对上述区间块进行微调（有重叠则不调整；看 1.272 XA 如果靠近 1.414 AB=CD ，则将框拉向 1.414，否则拉向 1.27，就近调整；如果 1.414 XA 接近 1.618，则也需调整）</li>\n</ul>\n</li>\n</ol>\n</li>\n</ol>\n<p class=\"gallery\"><img data-src=\"https://s2.loli.net/2022/05/04/F5ZktT6zRGOC7Hj.png\" alt=\"\" title=\"【斐波那契回撤】工具，从X到A，B点回撤在 XA 0.786\" /><br />\n<img data-src=\"https://s2.loli.net/2022/05/04/OMu7glnSUmvC1R2.png\" alt=\"\" title=\"【斐波那契回撤】工具，从A到B，C点回撤在0.382 - 0.886 之间\" /><br />\n<img data-src=\"https://s2.loli.net/2022/05/04/ISqWbofEtOaHY9X.png\" alt=\"\" title=\"寻找D点，第一步，在 1.272 XA 和 1.414 XA 画两条水平线\" /><br />\n<img data-src=\"https://s2.loli.net/2022/05/04/4dWvO7jsPQ63lDw.png\" alt=\"\" title=\"寻找D点，第二步，在 BC 1.618 - 2.618 的区间中，找到最接近上述两条水平线的斐波那契参数，画两个区间\" /><br />\n<img data-src=\"https://s2.loli.net/2022/05/04/eTmbAERXMPIGlDg.png\" alt=\"\" title=\"寻找D点，第三步，【斐波那契趋势扩展】工具，从A到B再到C，找到1.27的位置，这里1.27在上述1.272的区间块内，不需要微调\" /></p>\n<blockquote>\n<p>最关键的是 B 点要准确到达 0.786<br />\nXA 延伸必须在 1.272 - 1.414 之间<br />\n BC 延伸和 ABCD 所在位其实没有那么讲究</p>\n</blockquote>\n<h2 id=\"入场时机\"><a class=\"anchor\" href=\"#入场时机\">#</a> 入场时机</h2>\n<p>大致同前<br />\n可以以首次和二次测试反转区，有反应后进场</p>\n<h2 id=\"止盈止损\"><a class=\"anchor\" href=\"#止盈止损\">#</a> 止盈止损</h2>\n<ol>\n<li>\n<p>【斐波那契回撤】工具，从 X 拉到 A</p>\n</li>\n<li>\n<p>止损位置：一号止损位为 1.414 XA，二号止损位为 1.618 XA。<br />\n当 1.272 XA 入场时，则止损在 1.414 XA，在 1.414 XA 入场，则止损在 1.618 XA<br />\n<img data-src=\"https://s2.loli.net/2022/05/04/7zdgXsJcD9oLMbS.png\" alt=\"\" /></p>\n</li>\n<li>\n<p>【斐波那契回撤】工具，从 A 拉到 D</p>\n</li>\n<li>\n<p>止盈位置：一号止盈位为 0.382 AD，二号止盈位为 0.618 AD<br />\n 到达一号位后可以平仓一半，剩余仓位移动止损到成本价<br />\n<img data-src=\"https://s2.loli.net/2022/05/04/zaZ4tmcDw1RQLfP.png\" alt=\"\" /></p>\n</li>\n</ol>\n",
            "tags": [
                "交易策略",
                "价格行为",
                "谐波形态"
            ]
        },
        {
            "id": "https://shoka.lostyu.me/trading-view/price-action/harmonic-pattern/bat/",
            "url": "https://shoka.lostyu.me/trading-view/price-action/harmonic-pattern/bat/",
            "title": "Bat 蝙蝠形态",
            "date_published": "2022-03-30T09:12:16.000Z",
            "content_html": "<h1 id=\"概念\"><a class=\"anchor\" href=\"#概念\">#</a> 概念</h1>\n<p><img data-src=\"https://s2.loli.net/2022/05/02/cVYl4iFkZhdoA9G.png\" alt=\"\" /></p>\n<ul>\n<li>\n<p>在整个和谐交易工具库中，蝙蝠形态或许是最精确的形态。<br />\n该形态包含许多明确的元素，定义了极好的潜在反转区 (PRZ)。<br />\n该形态通常代表着对支撑或阻力的再次深幅测试，这种测试常常非常迅速。<br />\n从蝙蝠形态 PRZ 开始的迅速反转很常见。<br />\n实际上，从蝙蝠形态开始的有效反转常常包含非常极端的价格行为。</p>\n</li>\n<li>\n<p>该形态包含强大的 0.886 XA 回调，是 PRZ 中的决定性元素。<br />\nB 点回调必须小于 0.618，最好是 XA 臂的 0.50 或 0.382。</p>\n</li>\n<li>\n<p>最理想的 B 点比率是 XA 臂的 50%。<br />\nB 点是区分蝙蝠形态和伽利形态的主要方法之一。<br />\n如果一个形态正在形成，B 点刚好在 XA 臂的 0.50 处，那么它很可能是一个蝙蝠形态。</p>\n</li>\n<li>\n<p>蝙蝠形态使用的 BC 延伸至少是 1.618。<br />\nBC 延伸可以长达 2.618。<br />\n然而，蝙蝠形态中最理想的 BC 延伸是 1.618 或 2.0。<br />\n需要注意的是，BC 延伸一定不能是 1.27，因为，如果 BC 延伸小于 1.618，那么该结构将失败。<br />\n另外，1.27 BC 延伸通常见于伽利结构。</p>\n</li>\n<li>\n<p>蝙蝠形态中的 AB=CD 也是该结构有别于其他结构的要素。<br />\n该形态通常是延长的，在理想情况下，蝙蝠结构中包含一个 1.27 AB=CD 计算结果。<br />\n然而，等距 AB=CD 形态的确是令任何蝙蝠形态成为有效架构的最低要求。</p>\n</li>\n<li>\n<p>蝙蝠形态的准确性令人难以置信，所需止损远小于其他大部分形态。<br />\n0.886 回调是 PRZ 中最重要的数字，但是，对于结构内的其他和谐数字而言，紧密收敛以限定一个精确的区间是共同的特征。</p>\n</li>\n</ul>\n<h2 id=\"看涨蝙蝠形态\"><a class=\"anchor\" href=\"#看涨蝙蝠形态\">#</a> 看涨蝙蝠形态</h2>\n<p>B 点低于 0.618 回调，最好是 XA 臂的 0.50 或 0.382，那么就定义了看涨蝙蝠形态。<br />\n在这一架构中，看涨 0.886 回调非常关键。<br />\n通常，看涨蝙蝠形态是一种极好的 5 点调整结构，出现于已经明确确定的支撑位。</p>\n<p><img data-src=\"https://s2.loli.net/2022/05/02/T7WCtHfx6aF52y1.png\" alt=\"\" /></p>\n<h2 id=\"看跌蝙蝠形态\"><a class=\"anchor\" href=\"#看跌蝙蝠形态\">#</a> 看跌蝙蝠形态</h2>\n<p>B 点低于 0.618 回调，最好是 XA 臂的 0.50 或 0.382，那么就定义了看跌蝙蝠形态。<br />\n看跌蝙蝠形态是非常出色的 5 点调整结构，常常在回调至一个关键高点后形成。<br />\n另外，当这些结构形成于明显的阻力位时，它们是极好的交易机会。</p>\n<p><img data-src=\"https://s2.loli.net/2022/05/02/is9Ijr6B7WHP8qV.png\" alt=\"\" /></p>\n<div class=\"note info\">\n<p>0.886 XA 回调是看跌蝙蝠形态中最关键的价位。<br />\n由于这一回调的出现靠近前一高点 ——— 形态的初始起点 (X)，所以价格行为代表了对先前阻力的重大挑战。<br />\n蝙蝠形态表现出的结构性信号是一个重要的技术因素，其重要性高于其他简单的再次测试。<br />\n在明显阻力位形成的蝙蝠形态常常表明趋势中将出现实质性的改变 ——— 任何时间框架上都是如此！<br />\n等待这样明确的机会是非常重要的。<br />\n不用说，等待整个 PRZ 区间被测试，以确认形态的完成。<br />\n虽然这可能使交易的执行略有延迟，但是有效反转将在形态完成后不久提供决定性的信号。</p>\n</div>\n<h1 id=\"规则\"><a class=\"anchor\" href=\"#规则\">#</a> 规则</h1>\n<h2 id=\"形态要素\"><a class=\"anchor\" href=\"#形态要素\">#</a> 形态要素</h2>\n<ol>\n<li>B 点低于 XA 的 0.618 回调，最好是明显的 0.5 或 0.382 回调</li>\n<li>BC 延伸至少是 1.618</li>\n<li>AB=CD 形态通常是延长的</li>\n<li>0.886 XA 回调</li>\n<li>C 点在 0.382 和 0.886 构成的区间之内</li>\n</ol>\n<h2 id=\"形态确认\"><a class=\"anchor\" href=\"#形态确认\">#</a> 形态确认</h2>\n<h3 id=\"886普通蝙蝠\"><a class=\"anchor\" href=\"#886普通蝙蝠\">#</a> 886 普通蝙蝠</h3>\n<p><img data-src=\"https://s2.loli.net/2022/05/02/cVYl4iFkZhdoA9G.png\" alt=\"\" /></p>\n<ul>\n<li>这形态最关键的斐波那契是 XA 的<strong> 0.886</strong> 回撤</li>\n<li>B 点回调必须在 XA 的 0.382 - 0.5 之间，不能碰到 0.618</li>\n<li>和加特利形态一样，D 点需要 3 条斐波那契线重叠才算成立</li>\n<li>失败的蝙蝠可能变成 113 蝙蝠，也有可能变成螃蟹形态</li>\n</ul>\n<p>操作步骤：</p>\n<ol>\n<li>第一步是寻找可用的 X 点：X 点一般是明显的 V 或 U 高 / 低点（可能有多个，都测试一下）</li>\n<li>【斐波那契回撤】工具，从 X 拉到 A，来寻找 B 点\n<ul>\n<li>如果 B 点回撤到达 0.382 - 0.5 XA 之间，则为合格</li>\n<li>如果是正好到达 0.382 XA，很可能是变异蝙蝠</li>\n</ul>\n</li>\n<li>【斐波那契回撤】工具，从 A 拉到 B，来寻找 C 点\n<ul>\n<li>如果 C 点回撤在 0.382 - 0.886 AB 之间，则为合格</li>\n</ul>\n</li>\n<li>D 点由 3 条斐波那契线组成，这 3 条线重叠的区域，就是所谓的 D 点或称潜在反转区（PRZ）\n<ol>\n<li>XA 0.886\n<ul>\n<li>【斐波那契回撤】工具，从 X 拉到 A，得到 XA 回调</li>\n<li>在 0.886 XA 画水平线</li>\n</ul>\n</li>\n<li>BC 1.618 - 2.618 （BC 没到 1.618 就还不成立）\n<ul>\n<li>【斐波那契回撤】工具，从 B 拉到 C，得到 BC 延伸</li>\n<li>找到离 0.886XA 最近的斐波那契参数线，画出区间块</li>\n</ul>\n</li>\n<li>AB = CD （一般都到 1.27 AB=CD）\n<ul>\n<li>【斐波那契趋势扩展】工具，从 A 到 B 再到 C</li>\n<li>找到 1.27 的位置，对上述区间块进行微调</li>\n</ul>\n</li>\n</ol>\n</li>\n</ol>\n<p class=\"gallery\"><img data-src=\"https://s2.loli.net/2022/05/02/avAsPd17Z2NenIf.png\" alt=\"\" title=\"找到一个低点，定为X，【斐波那契回撤】工具从X拉到最高点的A；检查B点在0.382-0.5 XA之间，则合格\" /><br />\n<img data-src=\"https://s2.loli.net/2022/05/02/rylvhAWSXc7LEg8.png\" alt=\"\" title=\"【斐波那契回撤】工具，从A拉到B，来寻找C点；检查C点回撤在0.382 - 0.886 AB之间，则为合格\" /><br />\n<img data-src=\"https://s2.loli.net/2022/05/02/Zl2twhu7o9qEGs5.png\" alt=\"\" title=\"寻找D点，第一步，【斐波那契回撤】工具，画X到A，找到0.886 XA画水平线\" /><br />\n<img data-src=\"https://s2.loli.net/2022/05/02/4cfJbAyv1gjZMQE.png\" alt=\"\" title=\"寻找D点，第二步，【斐波那契回撤】工具，画B到C，找到离上述水平线最近的一条斐波那契参数，画出区间块\" /><br />\n<img data-src=\"https://s2.loli.net/2022/05/02/X5kKREigHCThbVI.png\" alt=\"\" title=\"寻找D点，第三步，【斐波那契趋势扩展】工具，从A到B再到C，找到1.27的位置，对区间块进行微调\" /></p>\n<blockquote>\n<p>特殊情况：<br />\nXA 合格，出现两个回踩 B 点，如何选择？<br />\n<img data-src=\"https://s2.loli.net/2022/05/02/SOXP72ocTZhiqa9.png\" alt=\"\" /><br />\n应选择第二个出现的 B 点，因为第二个 B 点后有更高的 C 点，第二个 B 点位置稍低</p>\n<p>如果蝙蝠的 C 点碰到 A 点，则要重新选择，此时的 C 点是新的 A 点，重新分析</p>\n</blockquote>\n<h3 id=\"113变异蝙蝠\"><a class=\"anchor\" href=\"#113变异蝙蝠\">#</a> 113 变异蝙蝠</h3>\n<p><img data-src=\"https://s2.loli.net/2022/05/03/o2Cs9jmrM3nNywE.png\" alt=\"\" /></p>\n<ul>\n<li>B 点位置在 0.382 XA 左右，小于 0.5 XA，可能完成蝙蝠后又反转，或可能直接顺趋势，去到更高的 D 点</li>\n<li>此时该 D 点的位置在 113，需警惕这样的情况</li>\n</ul>\n<p>操作步骤：</p>\n<ul>\n<li>前面寻找 XABC 步骤相同，D 点确认步骤如下：\n<ol>\n<li>XA 1.13\n<ul>\n<li>【斐波那契回撤】工具，XA 1.13 画一条水平线</li>\n</ul>\n</li>\n<li>BC 2.0 - 3.168\n<ul>\n<li>【斐波那契回撤】工具，BC 延长，找到最接近上述水平线的斐波那契参数，画反转区间</li>\n</ul>\n</li>\n<li>AB = CD （一般都到 1.618AB=CD）\n<ul>\n<li>【斐波那契趋势扩展】工具，从 A 到 B 再到 C</li>\n<li>找到 1.618 的位置，对上述区间块进行微调</li>\n</ul>\n</li>\n</ol>\n</li>\n</ul>\n<p class=\"gallery\"><img data-src=\"https://s2.loli.net/2022/05/03/Qz7pFGgOSXZydju.png\" alt=\"\" title=\"【斐波那契回撤】工具，XA 1.13 画一条水平线\" /><br />\n<img data-src=\"https://s2.loli.net/2022/05/03/3AtCuKN6sbzm9Fv.png\" alt=\"\" title=\"【斐波那契回撤】工具，BC 延长找到最接近的斐波那契参数，画出反转区间\" /><br />\n<img data-src=\"https://s2.loli.net/2022/05/03/gFonVTa31PJ5yjx.png\" alt=\"\" title=\"【斐波那契趋势扩展】工具，从A到B再到C，扩大区间\" /></p>\n<h2 id=\"入场时机\"><a class=\"anchor\" href=\"#入场时机\">#</a> 入场时机</h2>\n<h3 id=\"886普通蝙蝠-2\"><a class=\"anchor\" href=\"#886普通蝙蝠-2\">#</a> 886 普通蝙蝠</h3>\n<ul>\n<li>最重要的是要碰到 XA 0.886 那条水平线，否则 886 蝙蝠的形态不成立</li>\n<li>可能不会测试整个 PRZ</li>\n<li>如果测试 PRZ 1-3 次可以接受，测试 3 次以上需小心形态失败</li>\n<li>查看 RSI 是否到达超买超卖，等 RSI 走出后，观察：\n<ul>\n<li>反转蜡烛形态（最简单）</li>\n<li>打破小时间段趋势线（盈亏比较差）</li>\n<li>等蜡烛反转后，挂单在反转区进场（有可能错过）</li>\n<li>暴增量</li>\n</ul>\n</li>\n<li>分批进场</li>\n</ul>\n<p class=\"gallery\"><img data-src=\"https://s2.loli.net/2022/05/02/y3LiQwvMd5rf26O.png\" alt=\"\" title=\"注意二次探底反转区时，伴随了暴增量，后很快反转\" /><br />\n<img data-src=\"https://s2.loli.net/2022/05/03/74SFIq2mzUBn1p8.png\" alt=\"\" title=\"反复测试反转区，结合背离、RSI从底部到50以上、以及暴增量，判断最佳入场时机，提高成功率\" /><br />\n<img data-src=\"https://s2.loli.net/2022/05/03/iYX54Fnp3zNtIZx.png\" alt=\"\" title=\"反复测试PRZ三次以上需警惕\" /><br />\n<img data-src=\"https://s2.loli.net/2022/05/03/3N7bsnhZ1T6kvdm.png\" alt=\"\" title=\"反转K线 - 做多等这些\" /><br />\n<img data-src=\"https://s2.loli.net/2022/05/03/3TaFQ1LnDch7WZM.png\" alt=\"\" title=\"反转K线 - 做空等这些\" /></p>\n<h3 id=\"113变异蝙蝠-2\"><a class=\"anchor\" href=\"#113变异蝙蝠-2\">#</a> 113 变异蝙蝠</h3>\n<p class=\"gallery\"><img data-src=\"https://s2.loli.net/2022/05/02/wq8XN5LC3PTxHzA.png\" alt=\"\" title=\"B点位置在 0.382 XA，第一次蝙蝠完成\" /><br />\n<img data-src=\"https://s2.loli.net/2022/05/02/1qIQziBTSyW95rt.png\" alt=\"\" title=\"并且达到了目标止盈位一和二\" /><br />\n<img data-src=\"https://s2.loli.net/2022/05/02/T3cnApzU2wMbhDr.png\" alt=\"\" title=\"反转出现假突破，到达 1.13 XA 立刻反转\" /></p>\n<ul>\n<li>当来到反转区，又配合暴增量，可以入场<br />\n<img data-src=\"https://s2.loli.net/2022/05/03/3UOvnhd7TaflWIG.png\" alt=\"\" title=\"到达反转区完成形态+暴增量，提示入场\" /></li>\n</ul>\n<blockquote>\n<p>普通蝙蝠（B 点 0.5XA）也有可能变成 113 蝙蝠<br />\n所以不管是交易蝙蝠还是 113 蝙蝠，如果价格达到 XA 0.886 不反转，都要关注 XA 1.13 的第二个潜在反转机会。<br />\n如果 BCD 都被快速完成，代表动力太强，很可能 886 和 113 都失败，而会突破去到螃蟹</p>\n</blockquote>\n<h2 id=\"止盈止损\"><a class=\"anchor\" href=\"#止盈止损\">#</a> 止盈止损</h2>\n<ol>\n<li>\n<p>【斐波那契回撤】工具，从 X 拉到 A</p>\n</li>\n<li>\n<p>止损位置：一号止损位为 1.13 XA，二号止损位为 1.27 XA。<br />\n一般放在二号位，防止碰到一号位被打止损后反转。<br />\n<img data-src=\"https://s2.loli.net/2022/05/02/PBvLFwEMi9bGYKa.png\" alt=\"\" /></p>\n</li>\n<li>\n<p>【斐波那契回撤】工具，从 A 拉到 D</p>\n</li>\n<li>\n<p>止盈位置：一号止盈位为 0.382 AD，二号止盈位为 0.618 AD<br />\n 到达一号位后可以平仓一半，剩余仓位移动止损到成本价</p>\n</li>\n<li>\n<p>止损位置：三号位为 1.13AD<br />\n 如果有出现暴增量，可以将止损放在 X 点以下，也就是 1.13AD 附近。<br />\n<img data-src=\"https://s2.loli.net/2022/05/02/BvYRCDOZk9Ghomt.png\" alt=\"\" /></p>\n</li>\n</ol>\n<h1 id=\"补充\"><a class=\"anchor\" href=\"#补充\">#</a> 补充</h1>\n<p>仓位计算：</p>\n<p>假设入场价格为 24.14，止损价格设为 21.74，则差价为 2.4，约 10%。</p>\n<p>假设有本金 10000U，可以接受 5% 的亏损，即 500U。</p>\n<p>500 / 2.4 = 仓量或合约量 约 208</p>\n",
            "tags": [
                "交易策略",
                "价格行为",
                "谐波形态"
            ]
        },
        {
            "id": "https://shoka.lostyu.me/trading-view/price-action/harmonic-pattern/gartley/",
            "url": "https://shoka.lostyu.me/trading-view/price-action/harmonic-pattern/gartley/",
            "title": "Gartley 加特利形态",
            "date_published": "2022-03-30T07:43:11.000Z",
            "content_html": "<h1 id=\"概念\"><a class=\"anchor\" href=\"#概念\">#</a> 概念</h1>\n<p><img data-src=\"https://s2.loli.net/2022/05/01/VswcXtjldC3UKoR.png\" alt=\"\" /></p>\n<p>加特利形态的要素：</p>\n<ul>\n<li>XA 臂精确的 61.8% B 点回调</li>\n<li>BC 延伸一定不超过 1.618</li>\n<li>等距 AB=CD 形态是最常见的</li>\n<li>0.786 XA 回调</li>\n<li>C 点在 0.382 ~ 0.886 回调构成的区间之内</li>\n</ul>\n<p>根据经验，任何小于理想加特利斐波那契队列的结构，最终通常成为 “更深的” 调整结构，有利于蝙蝠形态的完成。<br />\n虽然这种对加特利队列的严格应用减少了形态匹配的数量，但关键是辨识出有效的形态，并且有效区分这两种类似的结构。</p>\n<h2 id=\"看涨加特利形态\"><a class=\"anchor\" href=\"#看涨加特利形态\">#</a> 看涨加特利形态</h2>\n<p>一个明显的 AB=CD 形态和一个 0.786 回调，定义了看涨加特利形态中的潜在反转区 (PRZ)。<br />\n然而，这些条件仅在 XA 臂的 0.618B 点回调满足时才有效。</p>\n<p><img data-src=\"https://s2.loli.net/2022/05/01/smqT81DRhyOjPzt.png\" alt=\"\" /></p>\n<p>BC 延伸应该作为 PRZ 中其他数字的补充，1.13、1.27、1.41 或 1.618 延伸应该会聚于同一区域。<br />\n需要注意的是，加特利形态并不使用任何大于 1.618 的 BC 延伸。<br />\n任何大于 1.618 的 BC 延伸通常见于蝙蝠结构 。<br />\n需要指出的是，C 点的 “0.382；0.886” 斐波那契回调幅度可以是这两个限制比率之间的任何一个和谐交易比率。<br />\n因此，C 点可能是 0.382、0.50、0.618、0.707、0.786 或 0.886。</p>\n<h2 id=\"看跌加特利形态\"><a class=\"anchor\" href=\"#看跌加特利形态\">#</a> 看跌加特利形态</h2>\n<p>看跌加特利结构主要是由 XA 臂的 0.618B 点回调来辨识。<br />\n形态的其他要素：AB=CD、BC 延伸和 0.786 回调，收敛时应该彼此接近，以便定义 PRZ。</p>\n<p><img data-src=\"https://s2.loli.net/2022/05/01/SDxTbpGroQkJ5Xz.png\" alt=\"\" /></p>\n<h2 id=\"完美看涨加特利形态\"><a class=\"anchor\" href=\"#完美看涨加特利形态\">#</a> 完美看涨加特利形态</h2>\n<p>完美看涨加特利形态主要是由 C 点处精确的 0.618 回调来定义的。<br />\n虽然理想的价格行为应该测试潜在反转区 (PRZ) 的整个区间，但是最低要求 AB=CD 和 0.786 XA 臂仍然代表着完成形态中最重要的数字。<br />\n这种结构应该明显且具有理想的对称性。<br />\n另外，AB=CD 应该是完美的看涨结构，0.618 和 1.618 比率在相应的点处。<br />\n这些要素的结构定义了一种引人注目的理想架构，拥有特别重要的 PRZ。<br />\n虽然这些结构是稀有的，但是它们代表着所有加特利变种的最佳队列。</p>\n<p><img data-src=\"https://s2.loli.net/2022/05/01/WZOhr4fLXzp2mEs.png\" alt=\"\" /></p>\n<h2 id=\"完美看跌加特利形态\"><a class=\"anchor\" href=\"#完美看跌加特利形态\">#</a> 完美看跌加特利形态</h2>\n<p>完美看跌加特利形态由 B 点处一个精确的 0.618 回调来定义。<br />\n另外，完美看跌 AB=CD 和 0.786XA 臂必须得到 一个 1.618BC 延伸的补充。</p>\n<p><img data-src=\"https://s2.loli.net/2022/05/01/5yVfZsIrKOLNndz.png\" alt=\"\" /></p>\n<div class=\"note info\">\n<p>加特利形态是一种有争议的形态。尽管《伟大的加特利辩论》 中有不同的解释，但是根据《和谐交易者》中最初描述的结构化规则，最和谐的加特利形态的所有点都具有明显的特征。<br />\n在定义有效的加特利结构方面，0.618B 点回调是关键的。<br />\n虽然 0.786 XA 回调是结构的一个重要元素，但是形态内的等距 AB=CD 才是潜在反转（PRZ）内最重要的完成点。<br />\n另外，AB=CD 的完成是所有有效加特利形态的强制性最低要求。</p>\n</div>\n<h1 id=\"规则\"><a class=\"anchor\" href=\"#规则\">#</a> 规则</h1>\n<h2 id=\"形态要素\"><a class=\"anchor\" href=\"#形态要素\">#</a> 形态要素</h2>\n<ol>\n<li>精确的 XA 臂的 0.618 B 点回调。</li>\n<li>PRZ 中 XA 臂精确的 0.786 D 点回调。</li>\n<li>1.27 或 1.618 BC 延伸。</li>\n<li>变种 AB=CD 形态。</li>\n<li>C 点回调可能在 0.382 和 0.886 之间变化。</li>\n</ol>\n<p>加特利形态必须包括这些具体的条件才能定义最和谐的结构。<br />\n虽然加特利形态可能与蝙蝠形态相似，但是该架构中使用的斐波纳契比率是独一无二的。<br />\n另外，该形态应该相当明显，而且具有理想的对称性。</p>\n<h2 id=\"形态确认\"><a class=\"anchor\" href=\"#形态确认\">#</a> 形态确认</h2>\n<ul>\n<li>形态一共有 5 个点，X，A，B，C，D</li>\n<li>每一个点都必须符合一些规则，形态才算成立</li>\n</ul>\n<p>操作步骤：</p>\n<ol>\n<li>【斐波那契回撤】工具，从 X 拉到 A，得到 XA 回调</li>\n<li>B 点回踩的位置，位于 XA 回调的 0.618 的位置，则为合格</li>\n<li>【斐波那契回撤】工具，从 A 拉到 B，得到 AB 延伸</li>\n<li>C 点回调需要满足在 AB 0.382 - 0.886 之间</li>\n<li>寻找 D 点的位置，一般都是一个区域，是由 3 条斐波那契线组成\n<ol>\n<li>找到 AB = CD\n<ul>\n<li>【趋势线】工具，从 A 画到 B</li>\n<li>复制一条，放在 C 点的位置</li>\n<li>在 D 点位置画一个方框</li>\n</ul>\n</li>\n<li>XA 0.786\n<ul>\n<li>【斐波那契回撤】工具，从 X 拉到 A，得到 XA 回调</li>\n<li>如果第一步所得 D 点没有超过 0.786 XA 回调，则反转区范围为 XA 0.786 ~ D 点</li>\n<li>如果第一步所得 D 点超过 0.786 XA 回调，则反转区范围为 D 点～XA 0.886</li>\n</ul>\n</li>\n<li>BC 1.13 - 1.618\n<ul>\n<li>【斐波那契回撤】工具，从 B 拉到 C，得到 BC 延伸</li>\n<li>反转区位于 BC 1.13 - 1.618 之间，微调 D 点框到最接近的 BC 延伸</li>\n</ul>\n</li>\n</ol>\n</li>\n</ol>\n<p class=\"gallery\"><img data-src=\"https://s2.loli.net/2022/05/02/A3HyESX2L8WaNDn.png\" alt=\"\" title=\"【斐波那契回撤】工具，从X拉到A，B点位于XA回调的 0.618，合格\" /><br />\n<img data-src=\"https://s2.loli.net/2022/05/02/yPWovOiSBVN2zXf.png\" alt=\"\" title=\"【斐波那契回撤】工具，从A拉到B，C点回调需要满足在 0.382AB - 0.886AB 之间\" /><br />\n<img data-src=\"https://s2.loli.net/2022/05/02/j2XIn5SL6uOe1oP.png\" alt=\"\" title=\"寻找D点，第一步，找到ABCD，在D点位置画一个方框\" /><br />\n<img data-src=\"https://s2.loli.net/2022/05/02/UBTYlHNdbFWQ5Vx.png\" alt=\"\" title=\"寻找D点，第二步，【斐波那契回撤】工具画XA，看第一步D点所处的位置是在0.786的上方还是下方；在上方，则方框范围为0.786XA ~ D点；在下方，则方框范围为D点 ~ 0.886XA\" /><br />\n<img data-src=\"https://s2.loli.net/2022/05/02/Y5EVwiKghTs2P9b.png\" alt=\"\" title=\"寻找D点，第三步，【斐波那契回撤】工具画BC，在1.13BC - 1.618BC区间内，微调D点框\" /></p>\n<h2 id=\"入场时机\"><a class=\"anchor\" href=\"#入场时机\">#</a> 入场时机</h2>\n<ul>\n<li>一定要等待形态完成，形态完成是指完整测试了整个反转区，而不是刚刚触及反转区就入场。\n<ul>\n<li>有可能会二次测试到更好位置，真正完成测试反弹才有力</li>\n<li>等走出反转区，再入场也不迟</li>\n</ul>\n</li>\n</ul>\n<p class=\"gallery\"><img data-src=\"https://s2.loli.net/2022/05/02/OnQRM7qLvi58GEc.png\" alt=\"\" title=\"①没有完整测试反转区，不是入场点；②完全测试了反转区，提示形态完成；③走出反转区再入场也不迟\" /><br />\n<img data-src=\"https://s2.loli.net/2022/05/02/y92qRzj4T7fYtUQ.png\" alt=\"\" title=\"①完全穿过反转区，提示形态完成；②出现上升K，配合RSI的情况，可以尝试入场；等完全走出反转区也可以\" /><br />\n<img data-src=\"https://s2.loli.net/2022/05/03/FUSBMI3dn6PX9p2.png\" alt=\"\" title=\"完全测试反转区的三条斐波那契参数，出现了反转K，可以入场\" /></p>\n<ul>\n<li>RSI 超买超卖是辅助验证的加分项，不一定非要符合\n<ul>\n<li>如果出现背离，也是加分项</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>加特利反转区最重要的两个点是 0.786 XA 和 0.886 XA</p>\n</blockquote>\n<h2 id=\"止盈止损\"><a class=\"anchor\" href=\"#止盈止损\">#</a> 止盈止损</h2>\n<p>和 AB = CD 形态一样</p>\n<ol>\n<li>【斐波那契回撤】工具，从 A 拉到 D</li>\n<li>止损位置：一号止损位为 1.13AD，二号止损位为 1.27AD。（图中分别为 -0.13 和 - 0.272）<br />\n一般放在二号位，或一号位下方一点，防止碰到一号位被打止损后反转。</li>\n<li>止盈位置：一号止盈位为 0.382AD，二号止盈位为 0.618AD<br />\n 到达一号位后可以平仓一半，剩余仓位移动止损到成本价</li>\n</ol>\n<p><img data-src=\"https://s2.loli.net/2022/05/02/Ao95shXBzM8JlOD.png\" alt=\"\" /></p>\n",
            "tags": [
                "交易策略",
                "价格行为",
                "谐波形态"
            ]
        },
        {
            "id": "https://shoka.lostyu.me/trading-view/price-action/harmonic-pattern/abcd/",
            "url": "https://shoka.lostyu.me/trading-view/price-action/harmonic-pattern/abcd/",
            "title": "AB=CD 形态",
            "date_published": "2022-03-30T05:23:46.000Z",
            "content_html": "<div class=\"note info\">\n<p>以下内容整理自 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhpZTYxOC5jb20v\">和谐商学院</span></p>\n</div>\n<h1 id=\"概念\"><a class=\"anchor\" href=\"#概念\">#</a> 概念</h1>\n<p><img data-src=\"https://s2.loli.net/2022/05/01/9ns5LXMQtGeUolq.png\" alt=\"\" /></p>\n<p>AB=CD 形态是一种四点价格结构，初始价格波段被部分回撤，回撤完成后接着一波与回撤等幅的运动。<br />\n这种结构已经在以前很多技术著作中讨论过，它代表了所有和谐形态的基础。<br />\n形态中具体的点应满足斐波那契比率。<br />\n在 AB=CD 形态中，C 点将是确认形态完成的一个关键点。<br />\n在这种结构中，虽然 BC 延伸非常重要，但是最重要的和谐数字是 AB=CD 的确切完成点。</p>\n<h2 id=\"abcd-倒数比率\"><a class=\"anchor\" href=\"#abcd-倒数比率\">#</a> AB=CD 倒数比率</h2>\n<p>在 AB=CD 形态中，结构内的斐波那契比率队列通常表现出特殊的倒数关系。<br />\nAB 臂的 C 点回调的倒数比例通常显示哪一个 BC 延伸被用于定义潜在反转区 (PRZ)。</p>\n<p>举例说明，C 点处的 0.618 回调将具有一个 1.618BC 延伸，在最接近 AB=CD 形态的完成处收敛。<br />\n等距 AB=CD 形态内的这种倒数关系为该结构定义了最佳的 PRZ。</p>\n<p>补充 AB=CD 结构的倒数比率如下：</p>\n<table>\n<thead>\n<tr>\n<th>C 点回调</th>\n<th>BC 延伸</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0.382</td>\n<td>2.24 或 2.618</td>\n</tr>\n<tr>\n<td>0.5</td>\n<td>2.0</td>\n</tr>\n<tr>\n<td>0.618</td>\n<td>1.618</td>\n</tr>\n<tr>\n<td>0.707</td>\n<td>1.41</td>\n</tr>\n<tr>\n<td>0.786</td>\n<td>1.27</td>\n</tr>\n<tr>\n<td>0.886</td>\n<td>1.13</td>\n</tr>\n</tbody>\n</table>\n<p>这些倒数比率有助于定义该形态的完成。<br />\n然而，需要牢记的最重要的一点是，BC 延伸应该在接近 AB=CD 形态的完成点处收敛。</p>\n<h2 id=\"等距看涨-abcd-形态\"><a class=\"anchor\" href=\"#等距看涨-abcd-形态\">#</a> 等距看涨 AB=CD 形态</h2>\n<p>当观察明确的抛售行情时，看涨 AB=CD 形态是一种极好的度量工具。<br />\n虽然对称性可能改变，但是这种基本结构是所有和谐形态的最低要求。</p>\n<p><img data-src=\"https://s2.loli.net/2022/05/01/OVPYUnB6MJRjD4u.png\" alt=\"\" /></p>\n<p>需要指出的是，C 点的 “0.382；0.886” 斐波那契回调幅度可以是这两个限制比率之间的任何和谐交易比率。<br />\n因此，C 点可能是 0.382、0.50、0.618、0.707、0.786 或 0.886。<br />\n参考上面列出的倒数比率，相对应的 BC 延伸可能是 1.13、1.27、1.41、1.618、2.0、2.24 或 2.618。在某些罕见的情况下，也可能用到 3.14 延伸。</p>\n<h2 id=\"等距看跌-abcd-形态\"><a class=\"anchor\" href=\"#等距看跌-abcd-形态\">#</a> 等距看跌 AB=CD 形态</h2>\n<p>看跌 AB=CD 应该包含一个明显的对称，形态的完成点补充 BC 延伸，定义一个精确的 PRZ</p>\n<p><img data-src=\"https://s2.loli.net/2022/05/01/qSF8wuYT7ObJrU9.png\" alt=\"\" /><br />\n需要指出的是，C 点的 “0.382；0.886” 斐波那契回调幅度可以是这两个限制比率之间的任意一个和谐交易比率。<br />\n因此，C 点 可 能 是 0.382、0.50、0.618、0.707、0.786 或 0.886。<br />\n参考倒数比率，相对应的 BC 延伸可能是 1.13、1.27、1.41、1.618、2.0、2.24 或 2.618。在某些罕见的情况下，也可能用到 3.14 延伸。</p>\n<h2 id=\"变种看涨-abcd-形态\"><a class=\"anchor\" href=\"#变种看涨-abcd-形态\">#</a> 变种看涨 AB=CD 形态</h2>\n<p>变种看涨 AB=CD 形态通常形成于长期抛售行情中类似看涨螃蟹形态和看涨蝴蝶形态这样的形态中。<br />\n然而，相对于 PRZ 中的其他斐波那契数字，变种 AB=CD 形态只是一个补充元素。</p>\n<p><img data-src=\"https://s2.loli.net/2022/05/01/MzaeHvcJi3nT2RP.png\" alt=\"\" /></p>\n<p>另外，与变种结构相比，等距 AB=CD 形态通常包含更重要的完成点。<br />\n1.618 AB=CD 形态的使用频率低于其他 AB=CD 组合。<br />\n尽管存在差异，但是当应用于校正和谐形态时，每个 AB=CD 元素都能够定义精确的反转区，提供有效的方法来量化价格结构。</p>\n<h2 id=\"变种看跌-abcd-形态\"><a class=\"anchor\" href=\"#变种看跌-abcd-形态\">#</a> 变种看跌 AB=CD 形态</h2>\n<p>需要注意的是，AB=CD 形态 ——— 等距或变种 ——— 是所有和谐结构的基础。<br />\n大多数结构中，等距 AB=CD 形态是入场的最低要求。当与其他重要的斐波那契回调和延伸结合使用时 AB=CD 形态能够确定极好的反转区。</p>\n<p><img data-src=\"https://s2.loli.net/2022/05/01/mAjHxkVZo3FwITh.png\" alt=\"\" /></p>\n<p>虽然基本的 AB=CD 结构可能包含各种各样的斐波那契比率，但是在两条连续的明显价格臂完成点处存在支撑或阻力的思想，是所有和谐形态的本质。</p>\n<div class=\"note info\">\n<p>变种 AB=CD 形态强调了使用基本结构来定义具体形态完成的重要性。<br />\n无论哪种 AB=CD 形态，BC 延伸都应该是形态完成点的补充元素。<br />\n重要的是，要记住 C 点与 BC 延伸的倒数关系。<br />\n完美 AB=CD 形态使用 0.618 回调和 1.618 延伸，对于该形态，它们是最和谐的斐波那契比率队列。这一形态应该拥有具体的特征，使它成为一个有效的和谐结构，并且定义一个交易机会。</p>\n</div>\n<h1 id=\"规则\"><a class=\"anchor\" href=\"#规则\">#</a> 规则</h1>\n<h2 id=\"形态要素\"><a class=\"anchor\" href=\"#形态要素\">#</a> 形态要素</h2>\n<ol>\n<li>AB=CD 完成的最低要求是每条价格臂相等。</li>\n<li>C 点回调可能在 0.382 和 0.886 之间变化，不过 0.618 是首选。</li>\n<li>BC 延伸可能在 1.13 和 2.618 之间变化，具体取决于 C 点回调。</li>\n<li>变种 AB=CD 形态存在。</li>\n</ol>\n<h2 id=\"形态确认\"><a class=\"anchor\" href=\"#形态确认\">#</a> 形态确认</h2>\n<p>操作步骤：</p>\n<ol>\n<li>【斐波那契回撤】工具，从 A 到 B 画斐波那契，得到 AB 延申</li>\n<li>如 C 点回调到 AB 延申的 0.382，未超过 AB 延申的 0.886，则满足形态要求，提示有潜在的 AB=CD 形态</li>\n<li>【趋势线】工具，从 A 到 B 画条趋势线</li>\n<li>【复制】AB 线到 C 点来寻找 D 点</li>\n<li>【斐波那契回撤】工具，从 B 到 C 画斐波那契，得到 BC 延申</li>\n<li>BC 延申的斐波那契参数只要和 D 点重叠，完成 ABCD 形态的所有步骤了</li>\n<li>D 点与最近的 BC 斐波那契参数形成反转区</li>\n</ol>\n<p class=\"gallery\"><img data-src=\"https://s2.loli.net/2022/05/01/nMwYXBoOhp12le8.png\" alt=\"\" title=\"【趋势线】工具，从A到B画趋势线，并复制一条移到C点那里\" /><br />\n<img data-src=\"https://s2.loli.net/2022/05/02/IY6CGPBEfdh7LsW.png\" alt=\"\" title=\"【斐波那契回撤】工具，从A拉到B，看C点的回调位置有没有符合要求\" /><br />\n<img data-src=\"https://s2.loli.net/2022/05/01/6FkXxPiZ1C5OzVr.png\" alt=\"\" title=\"【斐波那契回撤】工具，从B拉到C，最接近D点的BC斐波那契参数与D点共同构成了反转区\" /></p>\n<h2 id=\"入场时机\"><a class=\"anchor\" href=\"#入场时机\">#</a> 入场时机</h2>\n<p>到达反转区，形态完成，需要等 RSI 等指标过滤后再入场，勿提前挂单</p>\n<ul>\n<li>RSI 走出 30 超卖 + 上升 K + 走出反转区 = 多</li>\n<li>RSI 走出 70 超买 + 下跌 K + 走出反转区 = 空</li>\n<li>RSI 超买超卖是辅助验证的加分项，不一定非要符合；如果出现背离，也是加分项</li>\n</ul>\n<h2 id=\"止盈止损\"><a class=\"anchor\" href=\"#止盈止损\">#</a> 止盈止损</h2>\n<ol>\n<li>【斐波那契回撤】工具，从 A 拉到 D</li>\n<li>止损位置：一号止损位为 1.13AD，二号止损位为 1.27AD。（图中分别为 -0.13 和 - 0.272）<br />\n一般放在二号位，或一号位下方一点，防止碰到一号位被打止损后反转。</li>\n<li>止盈位置：一号止盈位为 0.382AD，二号止盈位为 0.618AD<br />\n 到达一号位后可以平仓一半，剩余仓位移动止损到成本价</li>\n</ol>\n<p><img data-src=\"https://s2.loli.net/2022/05/01/v7KPemETn1RAsVw.png\" alt=\"\" /></p>\n<h1 id=\"补充\"><a class=\"anchor\" href=\"#补充\">#</a> 补充</h1>\n<ul>\n<li>\n<p>潜在反转区 (PRZ)</p>\n</li>\n<li>\n<p>关于延伸和回调，从低点到高点画一条斐波那契线<br />\n<img data-src=\"https://s2.loli.net/2022/05/01/6T4MAXFDJadvNGK.png\" alt=\"\" /></p>\n</li>\n<li>\n<p>斐波那契工具的参数设置</p>\n</li>\n</ul>\n<p class=\"gallery\"><img data-src=\"https://s2.loli.net/2022/05/01/w7VCMUyRDiHYT1c.png\" alt=\"\" title=\"fibo回撤\" /><br />\n<img data-src=\"https://s2.loli.net/2022/05/01/ycjnNBEFw1V4ROs.png\" alt=\"\" title=\"fibo扩展\" /></p>\n",
            "tags": [
                "交易策略",
                "价格行为",
                "谐波形态"
            ]
        },
        {
            "id": "https://shoka.lostyu.me/computer-science/mse/itmd-511/chapter-12-13/",
            "url": "https://shoka.lostyu.me/computer-science/mse/itmd-511/chapter-12-13/",
            "title": "Chapter 12 & 13",
            "date_published": "2022-03-28T08:31:46.000Z",
            "content_html": "<p>Chapter 12 - Safety engineering<br />\nChapter 13 - Security engineering</p>\n<h1 id=\"quiz\"><a class=\"anchor\" href=\"#quiz\">#</a> Quiz</h1>\n<ol>\n<li class=\"quiz true\">\n<p>Safety-critical systems are systems whose failure can lead to human injury or death.</p>\n</li>\n<li class=\"quiz true\">\n<p>Static analysis is an approach to V &amp; V that examines the source code (or other representation) of a system, looking for errors and anomalies. It allows all parts of a program to be checked, not just those parts that are exercised by system tests.</p>\n</li>\n<li class=\"quiz multi\">\n<p>What are the two classes of Safety-critical software</p>\n<ul class=\"options\">\n<li class=\"correct\">Primary safety-critical software</li>\n<li class=\"correct\">Secondary safety-critical software</li>\n<li>Key safety-critical software</li>\n<li>marginal safety-critical software</li>\n</ul>\n</li>\n<li class=\"quiz\">\n<p>Which of the following are potential system accidents that may ocurr</p>\n<ul class=\"options\">\n<li>Hazard avoidance</li>\n<li>Hazard Detection and Removal</li>\n<li>Damage Limitation</li>\n<li class=\"correct\">All of these are potential system accidents</li>\n</ul>\n</li>\n<li class=\"quiz essay\">\n<p>Match the Fault Class with the Status Analysis Checks</p>\n<ol>\n<li>Data faults\n<blockquote>\n<p>Variables used before initialization Variables declared but never used Variables assigned twice but never used between assignments Possible array bound violations Undeclared variables</p>\n</blockquote>\n</li>\n<li>Control faults\n<blockquote>\n<p>Unreachable code Unconditional branches into loops</p>\n</blockquote>\n</li>\n<li>Input/output faults\n<blockquote>\n<p>Variables output twice with no intervening assignment</p>\n</blockquote>\n</li>\n<li>Interface faults\n<blockquote>\n<p>Parameter type mismatches  Parameter number mismatches  Nonusage of the results of functions  Uncalled functions and procedures</p>\n</blockquote>\n</li>\n<li>Storage management faults\n<blockquote>\n<p>Unassigned pointers  Pointer arithmetic  Memory leaks</p>\n</blockquote>\n</li>\n</ol>\n</li>\n<li class=\"quiz false\">\n<p>The three security dimensions are Confidentiality, Intelligence, and Accessability</p>\n</li>\n<li class=\"quiz true\">\n<p>Security is a system attribute that reflects the ability of the system to protect itself from malicious internal or external attacks.</p>\n</li>\n<li class=\"quiz false\">\n<p>In most cases, it is trivial to add security to a system after it has been implemented. Thereforce, security issues can be taken into account after the system design process.</p>\n</li>\n<li class=\"quiz true\">\n<p>Security design guidelines sensitize system designers to security issues that they may not have considered. They provide a basis for creating security review checklists.</p>\n</li>\n</ol>\n<h1 id=\"exercise\"><a class=\"anchor\" href=\"#exercise\">#</a> Exercise</h1>\n<ol>\n<li class=\"quiz essay\">\n<p>Identify six consumer products that are likely to be controlled by safety-critical software systems. Explain your reasoning for each.</p>\n<blockquote>\n<p>In the safety-critical systems, the system operation is always safe. These systems ensure safety to the people. The system should never damage people or its environment. Some of the safety-critical systems are automobile control systems, monitoring systems in aircraft etc.</p>\n<ol>\n<li>Following are the six consumer products that are likely to be controlled by safety-critical systems</li>\n<li>Vacuum cleaner - Incorrect operation may cause serious injury to users or people around them</li>\n<li>Blender - Incorrect operation may cause serious injury to users or people around them</li>\n<li>Microwave oven - Improper use may lead to explosion and fire</li>\n<li>Electric drilling machine or electrical saw - Incorrect operation may cause serious injury to users or people around them</li>\n<li>Garbage disposal unit - Incorrect operation may cause serious injury to users or people around them</li>\n</ol>\n</blockquote>\n</li>\n<li class=\"quiz essay\">\n<p>A software system is to be deployed for a company that has extremely high safety standards and allows for almost no risks, not even minor injuries. How will this affect the look of the risk triangle in Figure 12.3 in the textbook?</p>\n<blockquote>\n<p>Risks may be categorised as:<br />\nIntolerable: Must never arise or result in an accident<br />\nAs low as reasonably practical(ALARP): Must minimise the possibility of risk given cost and schedule constraints<br />\nAcceptable: The consequences of the risk are acceptable and no extra costs should be incurred to reduce hazard probability.<br />\n<img data-src=\"https://s2.loli.net/2022/05/07/vIOGgV8JoKLqQpy.png\" alt=\"\" /><br />\nThe width of the triangle reflects the cost of ensuring that the risk does not lead to accidents. If no risk is allowed, there will be a cost for any risk. The hazard triangle may appear as a rectangle.</p>\n</blockquote>\n</li>\n<li class=\"quiz essay\">\n<p>Explain when it may be cost-effective to use formal specification and verification in the development of safety-critical software systems. Why do you think that some critical systems engineers are against the use of formal methods?</p>\n<blockquote>\n<p>Formal specifications are very effective in discovering those specification problems that are the most common causes of system failure. Formal verification is impractical for large systems, but it can be used to verify critical-safety and security-critical components.</p>\n<p>Verifying large software systems takes a much time and requires mathematical expertise and specialized software tools. It is therefore an expensive process and, as the system size increases, the costs of formal verification increase disproportionately. Therefore many software engineers think that the formal verification is not cost effective. They believe that the same level of confidence can be achieved more cheaply by using other validation techniques, such as inspections and system testing.</p>\n</blockquote>\n</li>\n<li class=\"quiz essay\">\n<p>List four types of systems that may require software safety cases, explaining why safety cases are required.</p>\n<blockquote>\n<p>A safety case is a set of structured documents that includes a description of the system to be certified. It contains the information about the processes used to develop the system and logical arguments that demonstrate that the system is safe or that a required level of security is achieved. Therefore, for many critical systems the safety case is a legal requirement. Software failures can result in failures of equipment or other processes which may lead to injury or death. Safety cases may vary depending on the type of the system.</p>\n<p>The systems that may require safety cases are:</p>\n<ol>\n<li>Banking system</li>\n<li>Nuclear power system</li>\n<li>Health care system</li>\n<li>Air-traffic control systems</li>\n</ol>\n</blockquote>\n</li>\n<li class=\"quiz essay\">\n<p>The door lock control mechanism in a nuclear waste storage facility is designed for safe operation. It ensures that entry to the storeroom is only permitted when radiation shields are in place or when the radiation level in the room falls below some given value (dangerLevel).</p>\n<ol>\n<li>So,<br />\ni. If remotely controlled radiation shields are in place within a room, an authorized operator may open the door.<br />\nii. If the radiation level in a room is below a specified value, an authorized operator may open the door.<br />\niii. An authorized operator is identified by the input of an authorized door entry code.</li>\n<li>The code shown below controls the door-locking mechanism. Note that the safe state is that entry should not be permitted. Using the approach discussed in this chapter, develop a safety argument for this code. Use the line numbers to refer to specific statements. If you find that the code is unsafe, suggest how it should be modified to make it safe.</li>\n<li><img data-src=\"https://s2.loli.net/2022/05/07/nbJ7G6vazKHdxEA.png\" alt=\"\" /></li>\n<li>Code above as a text box for editing<pre><code>entryCode = lock.getEntryCode () ;\nif (entryCode == lock.authorizedCode) &#123;\n    shieldStatus = Shield.getStatus(); radiationLevel = RadSensor.get();\n\n    if (radiationLevel &lt; dangerLevel) &#123;\n        state = safe;\n    &#125; else &#123;\n        state = unsafe\n    &#125;\n    \n    if (shieldStatus == Shield.inPlace()) &#123;\n        state = safe;\n    &#125;\n\n    if (state == safe) &#123;\n        Door.locked = false ; Door.unlock();\n    &#125; else &#123;\n        Door.lock(); Door.locked := true ;\n    &#125;\n&#125;\n</code></pre>\n</li>\n</ol>\n<blockquote>\n<p>There are two potential safety problems with this code:</p>\n<ol>\n<li>\n<p>Say the door was unlocked when the door entry code was entered. Line 13 checks if the state is safe and, if it is safe then unlocks the door. However, if the door was unlocked to begin with, there is no locking action if the state is unsafe so therefore a potential safety loop hole exists.</p>\n</li>\n<li>\n<p>If the radiation level is less than the danger level then line 8 sets the state to be safe. However, line 10 checks the shields to see if they are in place. If they are not in place, the state is unchanged although, in fact, the system is unsafe if the shields are down. Therefore, the door can be opened with the shields down and a safety loophole exists.</p>\n</li>\n</ol>\n<p>There are two changes which should be made to ensure that the code is safe:</p>\n<ol>\n<li>An initial statement which locks the door and sets door locked to be true.</li>\n<li>The if statement if shield-status == Shield.inPlace then should be changed to:</li>\n</ol>\n<pre><code>if (shield_status == Shield.inPlace()) &#123;\n  state := safe;\n&#125; else &#123;\n  state := unsafe;\n&#125;\n</code></pre>\n<p>There are other ways to do this with nested if statements.</p>\n</blockquote>\n</li>\n<li class=\"quiz essay\">\n<p>Describe the security dimensions and security levels that have to be considered in secure systems engineering.</p>\n<blockquote>\n<p>Security dimensions:<br />\nConfidentiality: Information in a system may be disclosed or made accessible to people or programs that are not authorized to have access to that information.<br />\nIntegrity: Information in a system may be damaged or corrupted making it unusual or unreliable.<br />\nAvailability: Access to a system or its data that is normally available may not be possible.</p>\n<p>Security levels:<br />\nInfrastructure security, which is concerned with maintaining the security of all systems and networks that provide an infrastructure and a set of shared services to the organization.<br />\nApplication security, which is concerned with the security of individual application systems or related groups of systems.<br />\nOperational security, which is concerned with the secure operation and use of the organization’s systems.</p>\n</blockquote>\n</li>\n<li class=\"quiz essay\">\n<p>Explain why security is considered a more challenging problem than safety in a system.</p>\n<blockquote>\n<p>Security: Protection of a system against deliberate external attacks and threats.<br />\nSafety: Protection of the users of a system from unintended risks.<br />\nThe key difference here is that while security is protection from external attacks, safety is almost purely an internal affair. It is clear that security being mostly external in nature has a broader coverage.<br />\nSafety cannot be achieved if security is not guaranteed.<br />\nThis is what makes it more challenging than safety.</p>\n</blockquote>\n</li>\n<li class=\"quiz essay\">\n<p>Explain why it is important to log user actions in the development of secure systems.</p>\n<blockquote>\n<p>Maintain a log of user actions that can be analyzed to discover who did what. If users know about such a log, they are less likely to behave in an irresponsible way.</p>\n</blockquote>\n</li>\n<li class=\"quiz essay\">\n<p>Explain why it is important when writing secure systems to validate all user inputs to check that these have the expected format.</p>\n<blockquote>\n<p>When writing secure systems, it is important that all user inputs are validated against expected format. This validation is necessary to ensure that all exceptions are handled correctly and that unexpected inputs do not cause the system to crash. In secure system, it is therefore important to validate user inputs to prevent malicious users from exploiting the system.</p>\n</blockquote>\n</li>\n<li class=\"quiz essay\">\n<p>Suggest how you would go about validating a password protection system for an application that you have developed. Explain the function of any tools that you think may be useful.</p>\n<blockquote>\n<p>Verification and validation process for a password protection system must focus on security assessment. Validating a password protected system may include:</p>\n<ul>\n<li>Check for the password set to system is strong password which may consist of mixed alphanumeric characters and punctuation which are difficult to break.</li>\n<li>Password length should be of maximum size and is not same as the user name.</li>\n<li>Sessions should end after a period of inactivity and sessions should be ended at the time of logout.</li>\n<li>Never use cookies for storing passwords. Use hashed passwords to store in a database like SQL to avoid SQL poisoning attack.</li>\n<li>The files used in the application should have appropriate access permissions to avoid unauthorized access of the file.</li>\n</ul>\n</blockquote>\n</li>\n</ol>\n",
            "tags": [
                "计算机科学",
                "Master of Software Engineering",
                "ITMD 511. Application Development Methodologies",
                "软件工程"
            ]
        },
        {
            "id": "https://shoka.lostyu.me/computer-science/mse/itmd-522/lecture-10/",
            "url": "https://shoka.lostyu.me/computer-science/mse/itmd-522/lecture-10/",
            "title": "Lecture 10. Classifications by Python",
            "date_published": "2022-03-23T02:03:03.000Z",
            "content_html": "<h1 id=\"introductions\"><a class=\"anchor\" href=\"#introductions\">#</a> Introductions</h1>\n<p>Classification is a kind of supervised learning.<br />\n 分类是一种监督学习。</p>\n<p>It is used to predict the value in a nominal variable  which is also called 'label'.<br />\n 它用于预测名义变量 (也称为 “标签”) 中的值。</p>\n<p>The factors that are used for predictions are called features.<br />\n 用于预测的因素称为特征。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> scipy <span class=\"token keyword\">as</span> sp</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">from</span> IPython<span class=\"token punctuation\">.</span>display <span class=\"token keyword\">import</span> display<span class=\"token punctuation\">,</span> HTML</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>df<span class=\"token operator\">=</span>pd<span class=\"token punctuation\">.</span>read_csv<span class=\"token punctuation\">(</span><span class=\"token string\">'data_students.csv'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>cols<span class=\"token operator\">=</span>df<span class=\"token punctuation\">.</span>columns</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># print out and display dataframe as tables in HTML</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>display<span class=\"token punctuation\">(</span>HTML<span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>to_html<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\"># replace missing values in numerical variables by using mean value</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\"># 使用平均值替换数值变量中的缺失值 </span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>df<span class=\"token punctuation\">[</span><span class=\"token string\">\"Age\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>fillna<span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">[</span><span class=\"token string\">\"Age\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>mean<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> inplace<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>df<span class=\"token punctuation\">[</span><span class=\"token string\">\"Hours on Assignments\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>fillna<span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">[</span><span class=\"token string\">\"Hours on Assignments\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>mean<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> inplace<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>df<span class=\"token punctuation\">[</span><span class=\"token string\">\"Hours on Games\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>fillna<span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">[</span><span class=\"token string\">\"Hours on Games\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>mean<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> inplace<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>df<span class=\"token punctuation\">[</span><span class=\"token string\">\"Exam\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>fillna<span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">[</span><span class=\"token string\">\"Exam\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>mean<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> inplace<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>df<span class=\"token punctuation\">[</span><span class=\"token string\">\"Grade\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>fillna<span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">[</span><span class=\"token string\">\"Grade\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>mean<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> inplace<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token comment\"># check again whether there are missing values</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token comment\"># 再次检查是否有缺失值</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ColumnName, DataType, MissingValues'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> cols<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> <span class=\"token string\">','</span><span class=\"token punctuation\">,</span> df<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>dtype<span class=\"token punctuation\">,</span><span class=\"token string\">','</span><span class=\"token punctuation\">,</span>df<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>isnull<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre> </pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token comment\"># remove column ID</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token comment\"># 删除 ID 列</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>df<span class=\"token operator\">=</span>df<span class=\"token punctuation\">.</span>drop<span class=\"token punctuation\">(</span><span class=\"token string\">'ID'</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token comment\"># print out and display dataframe as tables in HTML</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token comment\"># 在 HTML 中打印并显示 dataframe 为表格</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>display<span class=\"token punctuation\">(</span>HTML<span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>to_html<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"knn-classifier\"><a class=\"anchor\" href=\"#knn-classifier\">#</a> KNN Classifier</h1>\n<p>Requirements: 1). numerical features; 2). normalized features<br />\n 要求：1）数值特征；2) 标准化特征</p>\n<p>Parameters: distance measure and value of K<br />\n 参数：距离测量和 K 值</p>\n<h2 id=\"data-preprocessing-数据预处理\"><a class=\"anchor\" href=\"#data-preprocessing-数据预处理\">#</a> Data preprocessing 数据预处理</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Column Datatypes:\\n'</span><span class=\"token punctuation\">,</span>df<span class=\"token punctuation\">.</span>dtypes<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># convert all nominal variables to binary variables</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 将所有名义变量转换为二进制变量</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>df_raw<span class=\"token operator\">=</span>df<span class=\"token punctuation\">.</span>copy<span class=\"token punctuation\">(</span>deep<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>df_knn<span class=\"token operator\">=</span>df<span class=\"token punctuation\">.</span>copy<span class=\"token punctuation\">(</span>deep<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># create new binary columns</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># 创建新的二进制列</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>df_dummies<span class=\"token operator\">=</span>pd<span class=\"token punctuation\">.</span>get_dummies<span class=\"token punctuation\">(</span>df_knn<span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token string\">'Degree'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'Nationality'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># add them to dataframe</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># 将它们添加到 dataframe</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>df_knn<span class=\"token operator\">=</span>df_knn<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>df_dummies<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\"># drop original columns</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\"># 删除原始列</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>df_knn<span class=\"token operator\">=</span>df_knn<span class=\"token punctuation\">.</span>drop<span class=\"token punctuation\">(</span><span class=\"token string\">'Degree'</span><span class=\"token punctuation\">,</span>axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>df_knn<span class=\"token operator\">=</span>df_knn<span class=\"token punctuation\">.</span>drop<span class=\"token punctuation\">(</span><span class=\"token string\">'Nationality'</span><span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>display<span class=\"token punctuation\">(</span><span class=\"token string\">'Data Example:'</span><span class=\"token punctuation\">,</span>HTML<span class=\"token punctuation\">(</span>df_knn<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>to_html<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\"># drop extra binary columns, since we only need N-1 binary columns</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token comment\"># 删除额外的二进制列，因为我们只需要 N-1 二进制列</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>df_knn<span class=\"token punctuation\">.</span>columns<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>df_knn<span class=\"token operator\">=</span>df_knn<span class=\"token punctuation\">.</span>drop<span class=\"token punctuation\">(</span><span class=\"token string\">'Degree_ BS'</span><span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>df_knn<span class=\"token operator\">=</span>df_knn<span class=\"token punctuation\">.</span>drop<span class=\"token punctuation\">(</span><span class=\"token string\">'Nationality_ China'</span><span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>display<span class=\"token punctuation\">(</span><span class=\"token string\">'Data Example:'</span><span class=\"token punctuation\">,</span>HTML<span class=\"token punctuation\">(</span>df_knn<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>to_html<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token comment\"># Normalized all numerical features</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token comment\"># 归一化所有数值特征</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token comment\"># min-max normalization to scale [0, 1]</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token comment\"># 最小 - 最大归一化以缩放 [0,1]</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token keyword\">for</span> col <span class=\"token keyword\">in</span> df_knn<span class=\"token punctuation\">.</span>columns<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token keyword\">if</span> col <span class=\"token operator\">!=</span> <span class=\"token string\">'GradeLetter'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token comment\"># exclude GradeLetter, since it is label in our data</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token comment\"># 不包括 GradeLetter，因为它是数据中的标签</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        df_knn<span class=\"token punctuation\">[</span>col<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>df_knn<span class=\"token punctuation\">[</span>col<span class=\"token punctuation\">]</span><span class=\"token operator\">-</span>df_knn<span class=\"token punctuation\">[</span>col<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">min</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token punctuation\">(</span>df_knn<span class=\"token punctuation\">[</span>col<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span>df_knn<span class=\"token punctuation\">[</span>col<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">min</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>display<span class=\"token punctuation\">(</span>HTML<span class=\"token punctuation\">(</span>df_knn<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>to_html<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token comment\"># Build KNN models and evaluate the models </span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token comment\"># 建立 KNN 模型并评估模型</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token comment\"># Note: for demo and teaching purpose, we present evaluations based on both hold-out and N-fold cross validations</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token comment\"># By hold-out evaluations  通过 hold-out 评估</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>model_selection <span class=\"token keyword\">import</span> train_test_split</pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token keyword\">from</span> matplotlib <span class=\"token keyword\">import</span> pyplot <span class=\"token keyword\">as</span> plt</pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token keyword\">import</span> matplotlib <span class=\"token keyword\">as</span> mpl</pre></td></tr><tr><td data-num=\"46\"></td><td><pre><span class=\"token keyword\">import</span> seaborn <span class=\"token keyword\">as</span> sns</pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token comment\"># preprocess label, since KNN requires label encoding</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre><span class=\"token comment\"># 预处理标签，因为 KNN 需要标签编码</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre><span class=\"token keyword\">from</span> sklearn <span class=\"token keyword\">import</span> preprocessing</pre></td></tr><tr><td data-num=\"51\"></td><td><pre></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>y <span class=\"token operator\">=</span> df_knn<span class=\"token punctuation\">[</span><span class=\"token string\">'GradeLetter'</span><span class=\"token punctuation\">]</span> <span class=\"token comment\"># define label as nominal values 将标签定义为标称值</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>le <span class=\"token operator\">=</span> preprocessing<span class=\"token punctuation\">.</span>LabelEncoder<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>le<span class=\"token punctuation\">.</span>fit<span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>y_encoded <span class=\"token operator\">=</span> le<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span> <span class=\"token comment\"># encode nominal labels to integers 将标称标签编码为整数</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre></pre></td></tr><tr><td data-num=\"57\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>y_encoded<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>df_knn<span class=\"token punctuation\">[</span><span class=\"token string\">'GradeLetter'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> y_encoded</pre></td></tr><tr><td data-num=\"60\"></td><td><pre>x <span class=\"token operator\">=</span> df_knn<span class=\"token punctuation\">.</span>drop<span class=\"token punctuation\">(</span><span class=\"token string\">'GradeLetter'</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>y <span class=\"token operator\">=</span> df_knn<span class=\"token punctuation\">[</span><span class=\"token string\">'GradeLetter'</span><span class=\"token punctuation\">]</span> </pre></td></tr><tr><td data-num=\"62\"></td><td><pre></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>display<span class=\"token punctuation\">(</span>HTML<span class=\"token punctuation\">(</span>df_knn<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>to_html<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>x_train<span class=\"token punctuation\">,</span> x_test<span class=\"token punctuation\">,</span> y_train<span class=\"token punctuation\">,</span> y_test <span class=\"token operator\">=</span> train_test_split<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y_encoded<span class=\"token punctuation\">,</span> test_size<span class=\"token operator\">=</span><span class=\"token number\">0.2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre></pre></td></tr><tr><td data-num=\"67\"></td><td><pre><span class=\"token comment\"># Visualize train set 可视化训练组</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>plt<span class=\"token punctuation\">.</span>figure<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>plt<span class=\"token punctuation\">.</span>scatter<span class=\"token punctuation\">(</span>x_train<span class=\"token punctuation\">[</span><span class=\"token string\">'Grade'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> x_train<span class=\"token punctuation\">[</span><span class=\"token string\">'Exam'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> c<span class=\"token operator\">=</span>y_train<span class=\"token punctuation\">,</span> alpha <span class=\"token operator\">=</span> <span class=\"token number\">0.8</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>plt<span class=\"token punctuation\">.</span>xlabel<span class=\"token punctuation\">(</span><span class=\"token string\">'Grade'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>plt<span class=\"token punctuation\">.</span>ylabel<span class=\"token punctuation\">(</span><span class=\"token string\">'Exam'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>plt<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">(</span><span class=\"token string\">'Visualization of Trainng Set'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>plt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>plt<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre></pre></td></tr><tr><td data-num=\"76\"></td><td><pre><span class=\"token comment\"># build and eval models</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre><span class=\"token comment\"># 建立和评估模型</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre><span class=\"token keyword\">from</span> sklearn <span class=\"token keyword\">import</span> neighbors</pre></td></tr><tr><td data-num=\"79\"></td><td><pre><span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>metrics <span class=\"token keyword\">import</span> accuracy_score</pre></td></tr><tr><td data-num=\"80\"></td><td><pre><span class=\"token comment\"># API， https://scikit-learn.org/stable/modules/generated/sklearn.metrics.precision_score.html</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre><span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>metrics <span class=\"token keyword\">import</span> precision_score</pre></td></tr><tr><td data-num=\"82\"></td><td><pre><span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>metrics <span class=\"token keyword\">import</span> recall_score</pre></td></tr><tr><td data-num=\"83\"></td><td><pre></pre></td></tr><tr><td data-num=\"84\"></td><td><pre><span class=\"token comment\"># API for KNeighborsClassifier</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre><span class=\"token comment\"># https://scikit-learn.org/stable/modules/generated/sklearn.neighbors.KNeighborsClassifier.html</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre></pre></td></tr><tr><td data-num=\"87\"></td><td><pre><span class=\"token keyword\">for</span> k <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">24</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> </pre></td></tr><tr><td data-num=\"88\"></td><td><pre>    clf<span class=\"token operator\">=</span>neighbors<span class=\"token punctuation\">.</span>KNeighborsClassifier<span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">,</span> weights<span class=\"token operator\">=</span><span class=\"token string\">'uniform'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>    clf<span class=\"token punctuation\">.</span>fit<span class=\"token punctuation\">(</span>x_train<span class=\"token punctuation\">,</span> y_train<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>    y_pred <span class=\"token operator\">=</span> clf<span class=\"token punctuation\">.</span>predict<span class=\"token punctuation\">(</span>x_test<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'K ='</span><span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">,</span> <span class=\"token string\">', Accuracy: '</span><span class=\"token punctuation\">,</span> accuracy_score<span class=\"token punctuation\">(</span>y_test<span class=\"token punctuation\">,</span> y_pred<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">', Precision: '</span><span class=\"token punctuation\">,</span> precision_score<span class=\"token punctuation\">(</span>y_test<span class=\"token punctuation\">,</span> y_pred<span class=\"token punctuation\">,</span> average<span class=\"token operator\">=</span><span class=\"token string\">'micro'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>         <span class=\"token string\">', Recall: '</span><span class=\"token punctuation\">,</span> recall_score<span class=\"token punctuation\">(</span>y_test<span class=\"token punctuation\">,</span> y_pred<span class=\"token punctuation\">,</span> average<span class=\"token operator\">=</span><span class=\"token string\">'micro'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>    <span class=\"token comment\"># note, there is also an option 'macro' which calculate metric for each label, then return average</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>    <span class=\"token comment\"># 注意，还有一个选项 “宏”，它计算每个标签的度量，然后返回平均值</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"96\"></td><td><pre><span class=\"token comment\"># Visualize the best model on the test set</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre><span class=\"token comment\"># 在测试集上可视化最佳模型</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>clf<span class=\"token operator\">=</span>neighbors<span class=\"token punctuation\">.</span>KNeighborsClassifier<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> weights<span class=\"token operator\">=</span><span class=\"token string\">'uniform'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>clf<span class=\"token punctuation\">.</span>fit<span class=\"token punctuation\">(</span>x_train<span class=\"token punctuation\">,</span> y_train<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>y_pred <span class=\"token operator\">=</span> clf<span class=\"token punctuation\">.</span>predict<span class=\"token punctuation\">(</span>x_test<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>plt<span class=\"token punctuation\">.</span>figure<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>plt<span class=\"token punctuation\">.</span>scatter<span class=\"token punctuation\">(</span>x_test<span class=\"token punctuation\">[</span><span class=\"token string\">'Grade'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> x_test<span class=\"token punctuation\">[</span><span class=\"token string\">'Exam'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> c<span class=\"token operator\">=</span>y_pred<span class=\"token punctuation\">,</span> alpha <span class=\"token operator\">=</span> <span class=\"token number\">0.8</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>plt<span class=\"token punctuation\">.</span>xlabel<span class=\"token punctuation\">(</span><span class=\"token string\">'Grade'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>plt<span class=\"token punctuation\">.</span>ylabel<span class=\"token punctuation\">(</span><span class=\"token string\">'Exam'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>plt<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">(</span><span class=\"token string\">'Visualization of Testing Set'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>plt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>plt<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre></pre></td></tr><tr><td data-num=\"110\"></td><td><pre></pre></td></tr><tr><td data-num=\"111\"></td><td><pre><span class=\"token comment\"># By N-fold cross evaluations  通过 N 倍交叉评估</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre><span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>model_selection <span class=\"token keyword\">import</span> cross_val_score</pre></td></tr><tr><td data-num=\"113\"></td><td><pre></pre></td></tr><tr><td data-num=\"114\"></td><td><pre><span class=\"token keyword\">for</span> k <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">24</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> </pre></td></tr><tr><td data-num=\"115\"></td><td><pre>    clf<span class=\"token operator\">=</span>neighbors<span class=\"token punctuation\">.</span>KNeighborsClassifier<span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">,</span> weights<span class=\"token operator\">=</span><span class=\"token string\">'uniform'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>    acc<span class=\"token operator\">=</span>cross_val_score<span class=\"token punctuation\">(</span>clf<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> cv<span class=\"token operator\">=</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> scoring<span class=\"token operator\">=</span><span class=\"token string\">'accuracy'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>mean<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'K ='</span><span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">,</span> <span class=\"token string\">', Accuracy: '</span><span class=\"token punctuation\">,</span>acc<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"naive-bayes-classifier\"><a class=\"anchor\" href=\"#naive-bayes-classifier\">#</a> Naive Bayes Classifier</h1>\n<p>Requirements: 1). nominal features; 2). assumption of conditionally indepenence<br />\n 要求：1）名义性特征；2) 条件独立假设</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>naive_bayes <span class=\"token keyword\">import</span> GaussianNB</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>metrics <span class=\"token keyword\">import</span> accuracy_score</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>metrics <span class=\"token keyword\">import</span> precision_score</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>metrics <span class=\"token keyword\">import</span> recall_score</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>model_selection <span class=\"token keyword\">import</span> cross_val_score</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># Pre-processing </span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Column data types:\\n'</span><span class=\"token punctuation\">,</span>df_raw<span class=\"token punctuation\">.</span>dtypes<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>df_nb<span class=\"token operator\">=</span>df_raw<span class=\"token punctuation\">.</span>copy<span class=\"token punctuation\">(</span>deep<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\"># convert numerical to categorical data, e.g., Age </span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>df_nb<span class=\"token punctuation\">[</span><span class=\"token string\">'Gender'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> df_nb<span class=\"token punctuation\">[</span><span class=\"token string\">'Gender'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>astype<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>df_nb<span class=\"token punctuation\">[</span><span class=\"token string\">'Age'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>cut<span class=\"token punctuation\">(</span>df_nb<span class=\"token punctuation\">[</span><span class=\"token string\">'Age'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>df_nb<span class=\"token punctuation\">[</span><span class=\"token string\">'Hours on Readings'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>cut<span class=\"token punctuation\">(</span>df_nb<span class=\"token punctuation\">[</span><span class=\"token string\">'Hours on Readings'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>df_nb<span class=\"token punctuation\">[</span><span class=\"token string\">'Hours on Assignments'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>cut<span class=\"token punctuation\">(</span>df_nb<span class=\"token punctuation\">[</span><span class=\"token string\">'Hours on Assignments'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>df_nb<span class=\"token punctuation\">[</span><span class=\"token string\">'Hours on Games'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>cut<span class=\"token punctuation\">(</span>df_nb<span class=\"token punctuation\">[</span><span class=\"token string\">'Hours on Games'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>df_nb<span class=\"token punctuation\">[</span><span class=\"token string\">'Hours on Internet'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>cut<span class=\"token punctuation\">(</span>df_nb<span class=\"token punctuation\">[</span><span class=\"token string\">'Hours on Internet'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>df_nb<span class=\"token punctuation\">[</span><span class=\"token string\">'Exam'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>cut<span class=\"token punctuation\">(</span>df_nb<span class=\"token punctuation\">[</span><span class=\"token string\">'Exam'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>df_nb<span class=\"token punctuation\">[</span><span class=\"token string\">'Grade'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>cut<span class=\"token punctuation\">(</span>df_nb<span class=\"token punctuation\">[</span><span class=\"token string\">'Grade'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>display<span class=\"token punctuation\">(</span><span class=\"token string\">'Data Example'</span><span class=\"token punctuation\">,</span>HTML<span class=\"token punctuation\">(</span>df_nb<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>to_html<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\"># by hold-out evaluation </span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>y<span class=\"token operator\">=</span>df_nb<span class=\"token punctuation\">[</span><span class=\"token string\">'GradeLetter'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>le <span class=\"token operator\">=</span> preprocessing<span class=\"token punctuation\">.</span>LabelEncoder<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>le<span class=\"token punctuation\">.</span>fit<span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>y_encoded <span class=\"token operator\">=</span> le<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span> <span class=\"token comment\"># encode nominal labels to integers </span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token comment\"># transform categorical data to numerical data, i.e., one-hot encoding 将分类数据转换为数值数据，即一次热编码</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>df_nb<span class=\"token punctuation\">.</span>dtypes<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>df_nb<span class=\"token operator\">=</span>pd<span class=\"token punctuation\">.</span>get_dummies<span class=\"token punctuation\">(</span>df_nb<span class=\"token punctuation\">.</span>drop<span class=\"token punctuation\">(</span><span class=\"token string\">'GradeLetter'</span><span class=\"token punctuation\">,</span>axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>df_nb<span class=\"token punctuation\">[</span><span class=\"token string\">'GradeLetter'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>y_encoded</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>display<span class=\"token punctuation\">(</span>HTML<span class=\"token punctuation\">(</span>df_nb<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>to_html<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'starting model build and evaluations...'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token comment\"># API for GaussianNB</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token comment\"># https://scikit-learn.org/stable/modules/generated/sklearn.naive_bayes.GaussianNB.html#sklearn.naive_bayes.GaussianNB</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>x_train<span class=\"token punctuation\">,</span> x_test<span class=\"token punctuation\">,</span> y_train<span class=\"token punctuation\">,</span> y_test <span class=\"token operator\">=</span> train_test_split<span class=\"token punctuation\">(</span>df_nb<span class=\"token punctuation\">,</span> y_encoded<span class=\"token punctuation\">,</span> test_size<span class=\"token operator\">=</span><span class=\"token number\">0.2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>clf <span class=\"token operator\">=</span> GaussianNB<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>clf<span class=\"token punctuation\">.</span>fit<span class=\"token punctuation\">(</span>x_train<span class=\"token punctuation\">,</span> y_train<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>y_pred<span class=\"token operator\">=</span>clf<span class=\"token punctuation\">.</span>predict<span class=\"token punctuation\">(</span>x_test<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token comment\"># in the following coding example, we use accuracy only as the example</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Accuracy by Hold-out Eval:\"</span><span class=\"token punctuation\">,</span>accuracy_score<span class=\"token punctuation\">(</span>y_pred<span class=\"token punctuation\">,</span>y_test<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token comment\"># by N-fold evaluation </span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>y<span class=\"token operator\">=</span>df_nb<span class=\"token punctuation\">[</span><span class=\"token string\">'GradeLetter'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>x<span class=\"token operator\">=</span>df_nb<span class=\"token punctuation\">.</span>drop<span class=\"token punctuation\">(</span><span class=\"token string\">'GradeLetter'</span><span class=\"token punctuation\">,</span>axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>clf <span class=\"token operator\">=</span> GaussianNB<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>acc<span class=\"token operator\">=</span>cross_val_score<span class=\"token punctuation\">(</span>clf<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> cv<span class=\"token operator\">=</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> scoring<span class=\"token operator\">=</span><span class=\"token string\">'accuracy'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>mean<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Accuracy by N-fold Cross Validation:\"</span><span class=\"token punctuation\">,</span>acc<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"decision-trees-and-random-forest\"><a class=\"anchor\" href=\"#decision-trees-and-random-forest\">#</a> Decision Trees and Random Forest</h1>\n<p>Preprocessing: 1). encode labels; 2). convert numerical to categorical data and then encoding<br />\n 预处理：1) 对标签进行编码；2) 将数字数据转换为分类数据，然后进行编码</p>\n<p>Tips: same preprocessing with the operations in Naive Bayes<br />\n 提示：与朴素贝叶斯中的操作相同的预处理</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>tree <span class=\"token keyword\">import</span> DecisionTreeClassifier</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>ensemble <span class=\"token keyword\">import</span> BaggingClassifier</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># API for DecisionTreeClassifier</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># https://scikit-learn.org/stable/modules/generated/sklearn.tree.DecisionTreeClassifier.html?highlight=decisiontreeclassifier#sklearn.tree.DecisionTreeClassifier</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># by hold-out evaluation</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>x_train<span class=\"token punctuation\">,</span> x_test<span class=\"token punctuation\">,</span> y_train<span class=\"token punctuation\">,</span> y_test <span class=\"token operator\">=</span> train_test_split<span class=\"token punctuation\">(</span>df_nb<span class=\"token punctuation\">,</span> y_encoded<span class=\"token punctuation\">,</span> test_size<span class=\"token operator\">=</span><span class=\"token number\">0.2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>clf<span class=\"token operator\">=</span>DecisionTreeClassifier<span class=\"token punctuation\">(</span>criterion<span class=\"token operator\">=</span><span class=\"token string\">'entropy'</span><span class=\"token punctuation\">,</span> max_depth<span class=\"token operator\">=</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># note: there are many parameters in API API 中有很多参数</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>clf<span class=\"token operator\">=</span>clf<span class=\"token punctuation\">.</span>fit<span class=\"token punctuation\">(</span>x_train<span class=\"token punctuation\">,</span> y_train<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>y_pred<span class=\"token operator\">=</span>clf<span class=\"token punctuation\">.</span>predict<span class=\"token punctuation\">(</span>x_test<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>acc<span class=\"token operator\">=</span>accuracy_score<span class=\"token punctuation\">(</span>y_pred<span class=\"token punctuation\">,</span> y_test<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Tree Accuracy by hold-out evaluation: '</span><span class=\"token punctuation\">,</span>acc<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\"># by N-fold cross validation</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>acc<span class=\"token operator\">=</span>cross_val_score<span class=\"token punctuation\">(</span>clf<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> cv<span class=\"token operator\">=</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> scoring<span class=\"token operator\">=</span><span class=\"token string\">'accuracy'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>mean<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Tree Accuracy by N-fold Cross Validation:\"</span><span class=\"token punctuation\">,</span>acc<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token comment\"># Example of randomForest = bagging method of decision trees</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token comment\"># 随机森林的例子 = 决策树的装袋方法</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>tree <span class=\"token operator\">=</span> DecisionTreeClassifier<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token comment\"># Note: you can use tree only or the random forest for the purpose of evaluations</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\"># 可以仅使用树或随机森林进行评估</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\"># API, https://scikit-learn.org/stable/modules/generated/sklearn.ensemble.BaggingClassifier.html?highlight=baggingclassifier</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>bag <span class=\"token operator\">=</span> BaggingClassifier<span class=\"token punctuation\">(</span>tree<span class=\"token punctuation\">,</span> n_estimators<span class=\"token operator\">=</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span> max_samples<span class=\"token operator\">=</span><span class=\"token number\">0.8</span><span class=\"token punctuation\">,</span> random_state<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>acc<span class=\"token operator\">=</span>cross_val_score<span class=\"token punctuation\">(</span>bag<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> cv<span class=\"token operator\">=</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> scoring<span class=\"token operator\">=</span><span class=\"token string\">'accuracy'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>mean<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"RandomForest Accuracy by N-fold Cross Validation:\"</span><span class=\"token punctuation\">,</span>acc<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"svm\"><a class=\"anchor\" href=\"#svm\">#</a> SVM</h1>\n<p>Preprocessing: same requirements as KNN, not necessary for normalization<br />\n 预处理：与 KNN 相同的要求，归一化不是必需的</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>svm <span class=\"token keyword\">import</span> SVC</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># API for SVC</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># https://scikit-learn.org/stable/modules/generated/sklearn.svm.SVC.html?highlight=svc#sklearn.svm.SVC</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># by hold-out evaluation</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>x_train<span class=\"token punctuation\">,</span> x_test<span class=\"token punctuation\">,</span> y_train<span class=\"token punctuation\">,</span> y_test <span class=\"token operator\">=</span> train_test_split<span class=\"token punctuation\">(</span>df_knn<span class=\"token punctuation\">,</span> y_encoded<span class=\"token punctuation\">,</span> test_size<span class=\"token operator\">=</span><span class=\"token number\">0.2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>clf<span class=\"token operator\">=</span>SVC<span class=\"token punctuation\">(</span>kernel<span class=\"token operator\">=</span><span class=\"token string\">'linear'</span><span class=\"token punctuation\">,</span> C<span class=\"token operator\">=</span><span class=\"token number\">1E10</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># C is large -> hard margin; C is small -> soft margin C 是大 -> 硬边；C 是小 -> 软边距</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>clf<span class=\"token operator\">=</span>clf<span class=\"token punctuation\">.</span>fit<span class=\"token punctuation\">(</span>x_train<span class=\"token punctuation\">,</span> y_train<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>y_pred<span class=\"token operator\">=</span>clf<span class=\"token punctuation\">.</span>predict<span class=\"token punctuation\">(</span>x_test<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>acc<span class=\"token operator\">=</span>accuracy_score<span class=\"token punctuation\">(</span>y_pred<span class=\"token punctuation\">,</span> y_test<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Accuracy by hold-out evaluation: '</span><span class=\"token punctuation\">,</span>acc<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>x<span class=\"token operator\">=</span>df_knn<span class=\"token punctuation\">.</span>drop<span class=\"token punctuation\">(</span><span class=\"token string\">'GradeLetter'</span><span class=\"token punctuation\">,</span>axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>y<span class=\"token operator\">=</span>df_knn<span class=\"token punctuation\">[</span><span class=\"token string\">'GradeLetter'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\"># by N-fold cross validation</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>clf<span class=\"token operator\">=</span>SVC<span class=\"token punctuation\">(</span>kernel<span class=\"token operator\">=</span><span class=\"token string\">'poly'</span><span class=\"token punctuation\">,</span> C<span class=\"token operator\">=</span><span class=\"token number\">1E10</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>acc<span class=\"token operator\">=</span>cross_val_score<span class=\"token punctuation\">(</span>clf<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> cv<span class=\"token operator\">=</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> scoring<span class=\"token operator\">=</span><span class=\"token string\">'accuracy'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>mean<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Accuracy by N-fold Cross Validation:\"</span><span class=\"token punctuation\">,</span>acc<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>clf<span class=\"token operator\">=</span>SVC<span class=\"token punctuation\">(</span>kernel<span class=\"token operator\">=</span><span class=\"token string\">'rbf'</span><span class=\"token punctuation\">,</span> C<span class=\"token operator\">=</span><span class=\"token number\">1E10</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>acc<span class=\"token operator\">=</span>cross_val_score<span class=\"token punctuation\">(</span>clf<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> cv<span class=\"token operator\">=</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> scoring<span class=\"token operator\">=</span><span class=\"token string\">'accuracy'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>mean<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Accuracy by N-fold Cross Validation:\"</span><span class=\"token punctuation\">,</span>acc<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"logistic-regression\"><a class=\"anchor\" href=\"#logistic-regression\">#</a> Logistic Regression</h1>\n<p>Preprocessing: same requirements as KNN, not necessary for normalization<br />\n 预处理：与 KNN 要求相同，归一化不是必需的</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zY2lraXQtbGVhcm4ub3JnLzAuMTYvbW9kdWxlcy9nZW5lcmF0ZWQvc2tsZWFybi5saW5lYXJfbW9kZWwuTG9naXN0aWNSZWdyZXNzaW9uLmh0bWw=\">API</span></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> sklearn <span class=\"token keyword\">import</span> metrics </pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>linear_model <span class=\"token keyword\">import</span> LogisticRegression</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>model_selection <span class=\"token keyword\">import</span> train_test_split</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># by hold-out evaluation</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>x_train<span class=\"token punctuation\">,</span> x_test<span class=\"token punctuation\">,</span> y_train<span class=\"token punctuation\">,</span> y_test <span class=\"token operator\">=</span> train_test_split<span class=\"token punctuation\">(</span>df_knn<span class=\"token punctuation\">,</span> y_encoded<span class=\"token punctuation\">,</span> test_size<span class=\"token operator\">=</span><span class=\"token number\">0.2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>clf<span class=\"token operator\">=</span>LogisticRegression<span class=\"token punctuation\">(</span>penalty<span class=\"token operator\">=</span><span class=\"token string\">'l2'</span><span class=\"token punctuation\">,</span>solver<span class=\"token operator\">=</span><span class=\"token string\">'lbfgs'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>clf<span class=\"token operator\">=</span>clf<span class=\"token punctuation\">.</span>fit<span class=\"token punctuation\">(</span>x_train<span class=\"token punctuation\">,</span> y_train<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>y_pred<span class=\"token operator\">=</span>clf<span class=\"token punctuation\">.</span>predict<span class=\"token punctuation\">(</span>x_test<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>acc<span class=\"token operator\">=</span>accuracy_score<span class=\"token punctuation\">(</span>y_pred<span class=\"token punctuation\">,</span> y_test<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Accuracy by hold-out evaluation: '</span><span class=\"token punctuation\">,</span>acc<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>x<span class=\"token operator\">=</span>df_knn<span class=\"token punctuation\">.</span>drop<span class=\"token punctuation\">(</span><span class=\"token string\">'GradeLetter'</span><span class=\"token punctuation\">,</span>axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>y<span class=\"token operator\">=</span>df_knn<span class=\"token punctuation\">[</span><span class=\"token string\">'GradeLetter'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\"># by N-fold cross validation</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>clf<span class=\"token operator\">=</span>LogisticRegression<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>acc<span class=\"token operator\">=</span>cross_val_score<span class=\"token punctuation\">(</span>clf<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> cv<span class=\"token operator\">=</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> scoring<span class=\"token operator\">=</span><span class=\"token string\">'accuracy'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>mean<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Accuracy by N-fold Cross Validation:\"</span><span class=\"token punctuation\">,</span>acc<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"neural-networks\"><a class=\"anchor\" href=\"#neural-networks\">#</a> Neural Networks</h1>\n<p>Preprocessing: same requirements as KNN, not necessary for normalization</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zY2lraXQtbGVhcm4ub3JnL3N0YWJsZS9tb2R1bGVzL2dlbmVyYXRlZC9za2xlYXJuLm5ldXJhbF9uZXR3b3JrLk1MUENsYXNzaWZpZXIuaHRtbA==\">API</span></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>neural_network <span class=\"token keyword\">import</span> MLPClassifier</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># by hold-out evaluation</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>x_train<span class=\"token punctuation\">,</span> x_test<span class=\"token punctuation\">,</span> y_train<span class=\"token punctuation\">,</span> y_test <span class=\"token operator\">=</span> train_test_split<span class=\"token punctuation\">(</span>df_knn<span class=\"token punctuation\">,</span> y_encoded<span class=\"token punctuation\">,</span> test_size<span class=\"token operator\">=</span><span class=\"token number\">0.2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>clf<span class=\"token operator\">=</span>MLPClassifier<span class=\"token punctuation\">(</span>solver<span class=\"token operator\">=</span><span class=\"token string\">'lbfgs'</span><span class=\"token punctuation\">,</span> alpha<span class=\"token operator\">=</span><span class=\"token number\">1e</span><span class=\"token operator\">-</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span>hidden_layer_sizes<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> random_state<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>clf<span class=\"token operator\">=</span>clf<span class=\"token punctuation\">.</span>fit<span class=\"token punctuation\">(</span>x_train<span class=\"token punctuation\">,</span> y_train<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>y_pred<span class=\"token operator\">=</span>clf<span class=\"token punctuation\">.</span>predict<span class=\"token punctuation\">(</span>x_test<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>acc<span class=\"token operator\">=</span>accuracy_score<span class=\"token punctuation\">(</span>y_pred<span class=\"token punctuation\">,</span> y_test<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Accuracy by hold-out evaluation: '</span><span class=\"token punctuation\">,</span>acc<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>x<span class=\"token operator\">=</span>df_knn<span class=\"token punctuation\">.</span>drop<span class=\"token punctuation\">(</span><span class=\"token string\">'GradeLetter'</span><span class=\"token punctuation\">,</span>axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>y<span class=\"token operator\">=</span>df_knn<span class=\"token punctuation\">[</span><span class=\"token string\">'GradeLetter'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\"># by N-fold cross validation</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>clf<span class=\"token operator\">=</span>MLPClassifier<span class=\"token punctuation\">(</span>solver<span class=\"token operator\">=</span><span class=\"token string\">'lbfgs'</span><span class=\"token punctuation\">,</span> alpha<span class=\"token operator\">=</span><span class=\"token number\">1e</span><span class=\"token operator\">-</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span>hidden_layer_sizes<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> random_state<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>acc<span class=\"token operator\">=</span>cross_val_score<span class=\"token punctuation\">(</span>clf<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> cv<span class=\"token operator\">=</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> scoring<span class=\"token operator\">=</span><span class=\"token string\">'accuracy'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>mean<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Accuracy by N-fold Cross Validation:\"</span><span class=\"token punctuation\">,</span>acc<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"imbalance-solutions\"><a class=\"anchor\" href=\"#imbalance-solutions\">#</a> Imbalance Solutions</h1>\n<p>Note that imbalance solutions can only be applied to training set<br />\n 请注意，不平衡解决方案只能应用于训练集</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cua2FnZ2xlLmNvbS9yZXNpZGVudG1hcmlvL3VuZGVyc2FtcGxpbmctYW5kLW92ZXJzYW1wbGluZy1pbWJhbGFuY2VkLWRhdGE=\">API</span></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> scipy <span class=\"token keyword\">as</span> sp</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">from</span> IPython<span class=\"token punctuation\">.</span>display <span class=\"token keyword\">import</span> display<span class=\"token punctuation\">,</span> HTML</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">from</span> collections <span class=\"token keyword\">import</span> Counter</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>df<span class=\"token operator\">=</span>pd<span class=\"token punctuation\">.</span>read_csv<span class=\"token punctuation\">(</span><span class=\"token string\">'data_students.csv'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>cols<span class=\"token operator\">=</span>df<span class=\"token punctuation\">.</span>columns</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># print out and display dataframe as tables in HTML</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># 在 HTML 中打印并显示 dataframe 为表格</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>display<span class=\"token punctuation\">(</span>HTML<span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>to_html<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\"># check degree of imbalance in labels</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\"># 检查标签的不平衡程度</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>cf<span class=\"token operator\">=</span>df<span class=\"token punctuation\">[</span><span class=\"token string\">'GradeLetter'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>value_counts<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>crf<span class=\"token operator\">=</span>df<span class=\"token punctuation\">[</span><span class=\"token string\">'GradeLetter'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>value_counts<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span>df<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\nClass frequency:\\n\"</span><span class=\"token punctuation\">,</span> cf<span class=\"token punctuation\">,</span> <span class=\"token string\">\"\\n\\nClass relative frequency:\\n\"</span><span class=\"token punctuation\">,</span> crf<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token comment\"># get features and labels</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token comment\"># 获取特征和标签</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>x<span class=\"token operator\">=</span>df<span class=\"token punctuation\">.</span>drop<span class=\"token punctuation\">(</span><span class=\"token string\">'GradeLetter'</span><span class=\"token punctuation\">,</span>axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>y<span class=\"token operator\">=</span>df<span class=\"token punctuation\">[</span><span class=\"token string\">'GradeLetter'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token comment\"># Install the library imblearn on Anaconda</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token comment\"># 在 Anaconda 上安装库 imblearn</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token comment\"># https://anaconda.org/conda-forge/imbalanced-learn</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token keyword\">from</span> imblearn<span class=\"token punctuation\">.</span>over_sampling <span class=\"token keyword\">import</span> RandomOverSampler</pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token comment\"># http://glemaitre.github.io/imbalanced-learn/generated/imblearn.over_sampling.RandomOverSampler.html</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token keyword\">from</span> imblearn<span class=\"token punctuation\">.</span>over_sampling <span class=\"token keyword\">import</span> SMOTE</pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token comment\"># https://imbalanced-learn.org/stable/references/generated/imblearn.over_sampling.SMOTE.html</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token keyword\">from</span> imblearn<span class=\"token punctuation\">.</span>under_sampling <span class=\"token keyword\">import</span> RandomUnderSampler</pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token comment\"># http://glemaitre.github.io/imbalanced-learn/generated/imblearn.under_sampling.RandomUnderSampler.html</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>ros <span class=\"token operator\">=</span> RandomOverSampler<span class=\"token punctuation\">(</span>random_state<span class=\"token operator\">=</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>ros<span class=\"token punctuation\">.</span>fit<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Original dataset shape &#123;&#125;'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>Counter<span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>x_resampled<span class=\"token punctuation\">,</span> y_resampled <span class=\"token operator\">=</span> ros<span class=\"token punctuation\">.</span>fit_resample<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'After oversampling dataset shape &#123;&#125;'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>Counter<span class=\"token punctuation\">(</span>y_resampled<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Original dataset shape &#123;&#125;'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>Counter<span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>ros <span class=\"token operator\">=</span> RandomUnderSampler<span class=\"token punctuation\">(</span>random_state<span class=\"token operator\">=</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>ros<span class=\"token punctuation\">.</span>fit<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>x_resampled<span class=\"token punctuation\">,</span> y_resampled <span class=\"token operator\">=</span> ros<span class=\"token punctuation\">.</span>fit_resample<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'After undersampling dataset shape &#123;&#125;'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>Counter<span class=\"token punctuation\">(</span>y_resampled<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token comment\"># get features and labels, SMOTE can only be applied on numerical features</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre><span class=\"token comment\"># 获取特征和标签，SMOTE 只能应用于数值特征</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>x<span class=\"token operator\">=</span>df_knn<span class=\"token punctuation\">.</span>drop<span class=\"token punctuation\">(</span><span class=\"token string\">'GradeLetter'</span><span class=\"token punctuation\">,</span>axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>y<span class=\"token operator\">=</span>df_knn<span class=\"token punctuation\">[</span><span class=\"token string\">'GradeLetter'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>ros <span class=\"token operator\">=</span> SMOTE<span class=\"token punctuation\">(</span>k_neighbors<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>ros<span class=\"token punctuation\">.</span>fit<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Original dataset shape &#123;&#125;'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>Counter<span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>x_resampled<span class=\"token punctuation\">,</span> y_resampled <span class=\"token operator\">=</span> ros<span class=\"token punctuation\">.</span>fit_resample<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'After oversampling by SMOTE dataset shape &#123;&#125;'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>Counter<span class=\"token punctuation\">(</span>y_resampled<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre></pre></td></tr><tr><td data-num=\"59\"></td><td><pre><span class=\"token comment\"># Note that, imbalance solutions are only applied on training set.</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre><span class=\"token comment\"># 请注意，不平衡解决方案仅适用于训练集。</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre><span class=\"token comment\"># In terms of N-folds, you have to split data into train-test splits, and apply the solution</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre><span class=\"token comment\"># 就 N-folds 而言，必须将数据拆分为训练 - 测试拆分，并应用解决方案</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre><span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>model_selection <span class=\"token keyword\">import</span> KFold</pre></td></tr><tr><td data-num=\"64\"></td><td><pre><span class=\"token comment\"># N-fold data split</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre><span class=\"token comment\"># API: https://scikit-learn.org/stable/modules/generated/sklearn.model_selection.KFold.html</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre></pre></td></tr><tr><td data-num=\"67\"></td><td><pre><span class=\"token comment\"># Assume last column is your label, other columns are features</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre><span class=\"token comment\"># 假设最后一列是标签，其他列是特征</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>X <span class=\"token operator\">=</span> df_knn<span class=\"token punctuation\">.</span>loc<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> df_knn<span class=\"token punctuation\">.</span>columns<span class=\"token operator\">!=</span><span class=\"token string\">'GradeLetter'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>y <span class=\"token operator\">=</span> df_knn<span class=\"token punctuation\">.</span>loc<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span><span class=\"token string\">'GradeLetter'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>X<span class=\"token punctuation\">.</span>columns<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>X<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre></pre></td></tr><tr><td data-num=\"75\"></td><td><pre></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>kf <span class=\"token operator\">=</span> KFold<span class=\"token punctuation\">(</span>n_splits<span class=\"token operator\">=</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> shuffle<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>data_5folds <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre><span class=\"token keyword\">for</span> train_index<span class=\"token punctuation\">,</span> test_index <span class=\"token keyword\">in</span> kf<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span>X<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"TRAIN:\"</span><span class=\"token punctuation\">,</span> train_index<span class=\"token punctuation\">,</span> <span class=\"token string\">\"TEST:\"</span><span class=\"token punctuation\">,</span> test_index<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>    <span class=\"token comment\"># get actual data by index</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>    <span class=\"token comment\"># 按索引获取实际数据</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>    x_train<span class=\"token punctuation\">,</span> x_test <span class=\"token operator\">=</span> X<span class=\"token punctuation\">.</span>iloc<span class=\"token punctuation\">[</span>train_index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> X<span class=\"token punctuation\">.</span>iloc<span class=\"token punctuation\">[</span>test_index<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>    y_train<span class=\"token punctuation\">,</span> y_test <span class=\"token operator\">=</span> y<span class=\"token punctuation\">[</span>train_index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">[</span>test_index<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>    <span class=\"token comment\"># save data into fold</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>    <span class=\"token comment\"># 将数据保存到 fold 中</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>    fold <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>x_train<span class=\"token punctuation\">,</span> x_test<span class=\"token punctuation\">,</span> y_train<span class=\"token punctuation\">,</span> y_test<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>    <span class=\"token comment\"># add each fold data into 5folds</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>    <span class=\"token comment\"># 将每个 fold 数据添加到 5 个 folds</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>    data_5folds<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>fold<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre></pre></td></tr><tr><td data-num=\"91\"></td><td><pre></pre></td></tr><tr><td data-num=\"92\"></td><td><pre><span class=\"token keyword\">for</span> k <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">24</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> </pre></td></tr><tr><td data-num=\"93\"></td><td><pre>    acc_5folds <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>    <span class=\"token keyword\">for</span> x_train<span class=\"token punctuation\">,</span> x_test<span class=\"token punctuation\">,</span> y_train<span class=\"token punctuation\">,</span> y_test <span class=\"token keyword\">in</span> data_5folds<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>        ros <span class=\"token operator\">=</span> RandomOverSampler<span class=\"token punctuation\">(</span>random_state<span class=\"token operator\">=</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>        ros<span class=\"token punctuation\">.</span>fit<span class=\"token punctuation\">(</span>x_train<span class=\"token punctuation\">,</span> y_train<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>        x_resampled<span class=\"token punctuation\">,</span> y_resampled <span class=\"token operator\">=</span> ros<span class=\"token punctuation\">.</span>fit_resample<span class=\"token punctuation\">(</span>x_train<span class=\"token punctuation\">,</span> y_train<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>        clf<span class=\"token operator\">=</span>neighbors<span class=\"token punctuation\">.</span>KNeighborsClassifier<span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">,</span> weights<span class=\"token operator\">=</span><span class=\"token string\">'uniform'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>        clf<span class=\"token punctuation\">.</span>fit<span class=\"token punctuation\">(</span>x_resampled<span class=\"token punctuation\">,</span> y_resampled<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>        y_pred <span class=\"token operator\">=</span> clf<span class=\"token punctuation\">.</span>predict<span class=\"token punctuation\">(</span>x_test<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>        acc <span class=\"token operator\">=</span> accuracy_score<span class=\"token punctuation\">(</span>y_test<span class=\"token punctuation\">,</span> y_pred<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>        acc_5folds<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>acc<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'k = '</span><span class=\"token punctuation\">,</span>k<span class=\"token punctuation\">,</span><span class=\"token string\">'Accuracy on 5-folds: '</span><span class=\"token punctuation\">,</span> np<span class=\"token punctuation\">.</span>mean<span class=\"token punctuation\">(</span>acc_5folds<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure>",
            "tags": [
                "计算机科学",
                "Master of Software Engineering",
                "ITMD 522. Data Mining and Machine Learning",
                "数据挖掘",
                "机器学习"
            ]
        },
        {
            "id": "https://shoka.lostyu.me/computer-science/mse/itmd-511/midterm-exam/",
            "url": "https://shoka.lostyu.me/computer-science/mse/itmd-511/midterm-exam/",
            "title": "Midterm Exam",
            "date_published": "2022-03-11T08:51:06.000Z",
            "content_html": "<ol>\n<li class=\"quiz true\">\n<p>A design pattern is a way of reusing abstract knowledge about a problem and its solution</p>\n</li>\n<li class=\"quiz false\">\n<p>A project plan, is created at the beginning of a project and is never touched again</p>\n</li>\n<li class=\"quiz true\">\n<p>A software process model (sometimes called a Software Development Life Cycle or SDLC model) is a simplified representation of a software process</p>\n</li>\n<li class=\"quiz false\">\n<p>According to the ACM/IEEE-CS Joint Task Force on Software Engineering Ethics and Professional Practices, it is ethical to over-represent your competence and take on tasks that are outside of your competence.</p>\n</li>\n<li class=\"quiz\">\n<p>Agile development methods such as Scrum and Extreme Programming have a two-stage approach to planning, what are they?</p>\n<ul class=\"options\">\n<li class=\"correct\">Release Planning &amp; Iteration Planning</li>\n<li>Development Planning &amp; Maintenance Planning</li>\n<li>Post-Release Planning &amp; Disaster Planning</li>\n<li>Debugging Planning &amp; Pair Programming</li>\n</ul>\n</li>\n<li class=\"quiz true\">\n<p>All agile methods suggest that software should be developed and delivered incrementally.</p>\n</li>\n<li class=\"quiz false\">\n<p>An IDE is the executable after you finish writing and then compiling your program.</p>\n</li>\n<li class=\"quiz false\">\n<p>An activity diagram shows the interactions between a system and its environment</p>\n</li>\n<li class=\"quiz true\">\n<p>Architectural patterns are a means of reusing knowledge about generic system architectures. They describe the architecture, explain when it may be used, and point out its advantages and disadvantages.</p>\n</li>\n<li class=\"quiz fill\">\n<p>As software is intertwined with all aspects of our lives, it is essential that we can <span class=\"gap\">trust</span> that software.</p>\n</li>\n<li class=\"quiz true\">\n<p>Change is inevitable in all large software projects</p>\n</li>\n<li class=\"quiz true\">\n<p>Commonly used Architectural patterns include model-view-controller, layered architecture, repository, client–server, and pipe and filter</p>\n</li>\n<li class=\"quiz false\">\n<p>Good software should over-deliver the functionality outlined by the user, and should be difficult to maintain so competitors don’t want to copy the product.</p>\n</li>\n<li class=\"quiz false\">\n<p>In test driven development, tests are written after the code itself has been written to make sure it works as intended</p>\n</li>\n<li class=\"quiz true\">\n<p>Language processing systems translate one language into an alternative representation of that language</p>\n</li>\n<li class=\"quiz essay\">\n<p>Match the Principle or Practice with their correct Descriptions</p>\n<ol>\n<li>Collective ownership\n<blockquote>\n<p>The pairs of developers work on all areas of the system, so that no islands of expertise develop and all the developers take responsibility for all of the code. Anyone can change anything.</p>\n</blockquote>\n</li>\n<li>Continuous integration\n<blockquote>\n<p>As soon as the work on a task is complete, it is integrated into the whole system. After any such integration, all the unit tests in the system must pass.</p>\n</blockquote>\n</li>\n<li>Incremental planning\n<blockquote>\n<p>Requirements are recorded on “story cards,” and the stories to be included in a release are determined by the time available and their relative priority. The developers break these stories into development “tasks.”</p>\n</blockquote>\n</li>\n<li>On-site customer\n<blockquote>\n<p>A representative of the end-user of the system (the Customer) should be available full time for the use of the XP team. In an extreme programming process, the customer is a member of the development team and is responsible for bringing system requirements to the team for implementation</p>\n</blockquote>\n</li>\n</ol>\n</li>\n<li class=\"quiz essay\">\n<p>Match the Principle or Practice with their correct Descriptions</p>\n<ol>\n<li>Pair Programming\n<blockquote>\n<p>Pair Programming</p>\n</blockquote>\n</li>\n<li>Refactoring\n<blockquote>\n<p>All developers are expected to refactor the code continuously as soon as potential code improvements are found. This keeps the code simple and maintainable.</p>\n</blockquote>\n</li>\n<li>Simple Design\n<blockquote>\n<p>Enough design is carried out to meet the current requirements and no more</p>\n</blockquote>\n</li>\n<li>Small Releases\n<blockquote>\n<p>The minimal useful set of functionality that provides business value is developed first. Releases of the system are frequent and incrementally add functionality to the first release</p>\n</blockquote>\n</li>\n</ol>\n</li>\n<li class=\"quiz essay\">\n<p>Match the following Product Metrics to their respective definitions</p>\n<ol>\n<li>Length of code\n<blockquote>\n<p>This is a measure of the size of a program.</p>\n</blockquote>\n</li>\n<li>Cyclomatic complexity\n<blockquote>\n<p>This is a measure of the control complexity of a program.</p>\n</blockquote>\n</li>\n<li>Depth of conditional nesting\n<blockquote>\n<p>This is a measure of the depth of nesting of if-statements in a program.</p>\n</blockquote>\n</li>\n<li>Fog index\n<blockquote>\n<p>This is a measure of the average length of words and sentences in documents.</p>\n</blockquote>\n</li>\n</ol>\n</li>\n<li class=\"quiz essay\">\n<p>Match the following Project Plan Supplements to their descriptions</p>\n<ol>\n<li>Configuration management plan\n<blockquote>\n<p>Describes the configuration management procedures and structures to be used.</p>\n</blockquote>\n</li>\n<li>Deployment plan\n<blockquote>\n<p>Describes how the software and associated hardware (if required) will be deployed in the customer’s environment. This should include a plan for migrating data from existing systems.</p>\n</blockquote>\n</li>\n<li>Maintenance plan\n<blockquote>\n<p>Predicts the maintenance requirements, costs, and effort.</p>\n</blockquote>\n</li>\n<li>Quality plan\n<blockquote>\n<p>Describes the quality procedures and standards that will be used in a project.</p>\n</blockquote>\n</li>\n<li>Validation plan\n<blockquote>\n<p>Describes the approach, resources, and schedule used for system validation.</p>\n</blockquote>\n</li>\n</ol>\n</li>\n<li class=\"quiz essay\">\n<p>Match the following process activities with their definitions</p>\n<ol>\n<li>Requirements discovery and understanding\n<blockquote>\n<p>This is the process of interacting with stakeholders of the system to discover their requirements. Domain requirements from stakeholders and documentation are also discovered during this activity</p>\n</blockquote>\n</li>\n<li>Requirements classification and organization\n<blockquote>\n<p>This activity takes the unstructured collection of requirements, groups related requirements and organizes them into coherent clusters</p>\n</blockquote>\n</li>\n<li>Requirements prioritization and negotiation\n<blockquote>\n<p>This activity is concerned with prioritizing requirements and finding and resolving requirements conflicts through negotiation</p>\n</blockquote>\n</li>\n<li>Requirements documentation\n<blockquote>\n<p>Requirements are documented and input into the next round of the spiral. An early draft of the software requirements documents may be produced at this stage, or the requirements may simply be main- tained informally on whiteboards, wikis, or other shared spaces.</p>\n</blockquote>\n</li>\n</ol>\n</li>\n<li class=\"quiz true\">\n<p>Non-functional requirements are constraints on the services or functions offered by the system.</p>\n</li>\n<li class=\"quiz false\">\n<p>Open Source Development means that the code that makes up the software is not avaliable for everyone to see.</p>\n</li>\n<li class=\"quiz false\">\n<p>Pipe and filter systems are best suited to batch processing systems and embedded systems where there is a lot of user interaction</p>\n</li>\n<li class=\"quiz true\">\n<p>Program testing shows that a program works as intended and is used to discover defects before it is put into use</p>\n</li>\n<li class=\"quiz false\">\n<p>SaaS stands for Software as a System</p>\n</li>\n<li class=\"quiz true\">\n<p>Software design and implementation is the stage in the software engineering process at which an executable software system is developed</p>\n</li>\n<li class=\"quiz true\">\n<p>Software engineering is an engineering discipline that is concerned with all aspects of software production from initial conception to operation and maintenance</p>\n</li>\n<li class=\"quiz fill\">\n<p>Software has to be developed across a very wide range of <span class=\"gap\">scales</span>, from very small embedded systems in portable or wearable devices through to Internet-scale, cloud-based systems that serve a global community.</p>\n</li>\n<li class=\"quiz fill\">\n<p>Software should not make <span class=\"gap\">wasteful</span> use of system resources such as memory and processor cycles. Efficiency therefore includes responsiveness, processing time, resource utilization, etc</p>\n</li>\n<li class=\"quiz true\">\n<p>Software standards are important for quality assurance as they represent an identification of best practice</p>\n</li>\n<li class=\"quiz true\">\n<p>Structural models may be either static or dynamic</p>\n</li>\n<li class=\"quiz true\">\n<p>Structural models show the organization and architecture of a system. Class diagrams are used to define the static structure of classes in a system and their association.</p>\n</li>\n<li class=\"quiz true\">\n<p>System modeling is the process of developing abstract models of a system, with each model presenting a different view or perspective of that system.</p>\n</li>\n<li class=\"quiz false\">\n<p>System-building tools and version control tools must not be part of the System Building process</p>\n</li>\n<li class=\"quiz false\">\n<p>Test automation is unwanted for test-first development</p>\n</li>\n<li class=\"quiz true\">\n<p>Testing can only show the presence of errors in a program. It cannot demonstrate that there are no remaining faults</p>\n</li>\n<li class=\"quiz true\">\n<p>The Linux Operating system is open source.</p>\n</li>\n<li class=\"quiz true\">\n<p>The choice of architectural style and structure should depend on the non-functional requirements of the system</p>\n</li>\n<li class=\"quiz false\">\n<p>The functional requirements for a system are constraints on the services or functions offered by the system.</p>\n</li>\n<li class=\"quiz true\">\n<p>The fundamental ideas of software engineering are applicable to all types of software systems.</p>\n</li>\n<li class=\"quiz false\">\n<p>The price of a software system developed for a customer only takes into account the cost of the development itself</p>\n</li>\n<li class=\"quiz true\">\n<p>The three main parameters when computing the costs of a software development project are</p>\n<ol>\n<li>Effort Costs</li>\n<li>Hardware and Software Costs</li>\n<li>Traveling and Training Costs</li>\n</ol>\n</li>\n<li class=\"quiz false\">\n<p>The use of open-source software available on platforms such as Sourceforge and GitHub has made software analysis more difficult, and less possible overall.</p>\n</li>\n<li class=\"quiz true\">\n<p>There are no universal notations, methods, or techniques for software engineering because different types of software require different approaches</p>\n</li>\n<li class=\"quiz false\">\n<p>Unit testing is the process of testing all software components at once</p>\n</li>\n<li class=\"quiz true\">\n<p>Unit testing should be automated whenever possible</p>\n</li>\n<li class=\"quiz true\">\n<p>Version control (VC) systems identify, store, and control access to the different versions of components.</p>\n</li>\n<li class=\"quiz multi\">\n<p>What are areas of standard acceptable behaviour for software developers</p>\n<ul class=\"options\">\n<li class=\"correct\">Confidentiality</li>\n<li class=\"correct\">Competence</li>\n<li class=\"correct\">Intellectual property rights</li>\n<li>Open source</li>\n</ul>\n</li>\n<li class=\"quiz multi\">\n<p>What are the two fundamental types of software product</p>\n<ul class=\"options\">\n<li class=\"correct\">Generic software</li>\n<li>Expensive Software</li>\n<li class=\"correct\">Customized Software</li>\n<li>Complex Software</li>\n</ul>\n</li>\n<li class=\"quiz multi\">\n<p>What are the two types of modern version control system</p>\n<ul class=\"options\">\n<li class=\"correct\">Centralized</li>\n<li class=\"correct\">Distributed</li>\n<li>Packed</li>\n<li>Git</li>\n</ul>\n</li>\n<li class=\"quiz\">\n<p>What does V&amp;V standfor when it comes to Software Validation</p>\n<ul class=\"options\">\n<li class=\"correct\">Verification and Validation</li>\n<li>Validate and Vacate</li>\n<li>Validate and Verify</li>\n<li>Visualize and Vacate</li>\n</ul>\n</li>\n<li class=\"quiz\">\n<p>What is the final state of process prototyping?</p>\n<ul class=\"options\">\n<li>Developing</li>\n<li>Defining Functionality</li>\n<li>Establishing Objectives</li>\n<li class=\"correct\">Evaluating</li>\n</ul>\n</li>\n<li class=\"quiz\">\n<p>Which of the following options are NOT part of model-driven architecture</p>\n<ul class=\"options\">\n<li>A computation independent model (CIM)</li>\n<li>A platform-independent model (PIM)</li>\n<li>Platform-specific models (PSM)</li>\n<li class=\"correct\">Platform-Engineering models (PEM)</li>\n</ul>\n</li>\n<li class=\"quiz multi\">\n<p>Which of these are general process models for software engineering</p>\n<ul class=\"options\">\n<li class=\"correct\">Waterfall Model</li>\n<li class=\"correct\">Incremental Development</li>\n<li class=\"correct\">Integration and configuration</li>\n<li>Test in Prod Model</li>\n</ul>\n</li>\n<li class=\"quiz\">\n<p>Which one of these is NOT one of the four basic process activities </p>\n<ul class=\"options\">\n<li>Specification</li>\n<li>Development</li>\n<li>Validation</li>\n<li class=\"correct\">Waterfalling</li>\n</ul>\n</li>\n</ol>\n",
            "tags": [
                "计算机科学",
                "Master of Software Engineering",
                "ITMD 511. Application Development Methodologies",
                "软件工程"
            ]
        },
        {
            "id": "https://shoka.lostyu.me/trading-view/price-action/chart-pattern/pullback/",
            "url": "https://shoka.lostyu.me/trading-view/price-action/chart-pattern/pullback/",
            "title": "趋势回调",
            "date_published": "2022-03-10T06:39:11.000Z",
            "content_html": "<div class=\"note info\">\n<p>以下内容整理自 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cueW91dHViZS5jb20vcGxheWxpc3Q/bGlzdD1QTDdXUExOc2RNeVllRTg0S1ZjeEtKanRveHFLWm5XMmti\">Steven - 专业价格行为分析和教学</span></p>\n</div>\n<p>形态结构可以分成三大类：趋势回调，交易区间和趋势反转</p>\n<p>趋势回调又分为</p>\n<ul>\n<li>简单回调：一段或两段的简单回调运动</li>\n<li>复杂回调：多段式的回调结构</li>\n</ul>\n<h1 id=\"简单回调\"><a class=\"anchor\" href=\"#简单回调\">#</a> 简单回调</h1>\n<p>成立的条件：</p>\n<ol>\n<li>首先需要有一轮明确的急速的强势运动，大幅突破整理区间，能让人感觉到明显的趋势力量</li>\n<li>回调走势是简单明了的斜率。不能是很多横向重叠的 k 线排在一起（此为交易区间）</li>\n<li>要有入场形态，常见的有三种：突破 1、突破 2、箱体突破</li>\n<li>此回调最好是趋势的初段回调\n<ul>\n<li>如果一段趋势运行了很久，但没有出现回调，可能很快就会出现一次长时间的复杂回调，应该避免进行简单回调操作</li>\n</ul>\n</li>\n</ol>\n<p class=\"gallery\"><img data-src=\"https://s2.loli.net/2022/05/08/kv7HbgFYCVf29rz.png\" alt=\"\" /><br />\n<img data-src=\"https://s2.loli.net/2022/05/08/2IVPbwh48ABnmWq.png\" alt=\"\" /><br />\n<img data-src=\"https://s2.loli.net/2022/05/08/r1b9YcJmoSOlCIM.png\" alt=\"\" /><br />\n<img data-src=\"https://s2.loli.net/2022/05/08/W3QpPZ8uTU9XYHe.png\" alt=\"\" /></p>\n<blockquote>\n<p>可以配合 20EMA 均线，回调至 20EMA 附近观察入场机会<br />\n少交易第一次突破，尽量选二次突破时入场<br />\n除非首次突破时是一根强反转 K 线<br />\n箱体突破在实操中比较少遇到</p>\n</blockquote>\n<h1 id=\"复杂回调\"><a class=\"anchor\" href=\"#复杂回调\">#</a> 复杂回调</h1>\n<p>市场中，多空双方意见一致时常形成简单回调；<br />\n当多空意见不一致，则形成了复杂回调，震荡整理。</p>\n<p><img data-src=\"https://s2.loli.net/2022/05/08/GCwM1AIBpPys5N7.png\" alt=\"\" /></p>\n<p>如果回调后的走势对前面的趋势极值强势突破，则为趋势延续。<br />\n如果在前面趋势极值的水平位出现了价格停顿，就可能是潜在交易区间。<br />\n如果对前趋势及时突破无力，并且做了一次逆势的突破，那就是潜在的反转形态。</p>\n<p class=\"gallery\"><img data-src=\"https://s2.loli.net/2022/05/09/TBiQIn7tCLAK3Uo.png\" alt=\"\" title=\"趋势的延续\" /><br />\n<img data-src=\"https://s2.loli.net/2022/05/09/9jPeBlXtW8CJdu1.png\" alt=\"\" title=\"交易区间形成\" /><br />\n<img data-src=\"https://s2.loli.net/2022/05/09/ngVwOrxzpvMN3IK.png\" alt=\"\" title=\"潜在反转形态 \" /></p>\n<h2 id=\"两段式回调-abc调整\"><a class=\"anchor\" href=\"#两段式回调-abc调整\">#</a> 两段式回调 ABC 调整</h2>\n<p><img data-src=\"https://s2.loli.net/2022/05/10/Cj5ulURZFSpIqYf.png\" alt=\"\" title=\"例子1\" /></p>\n<ul>\n<li>\n<p>一段急速上涨，出现两段式回调</p>\n</li>\n<li>\n<p>两次回调末端是做多的位置</p>\n<ul>\n<li>但如果出现很多 K 线重叠形成了交易区间，则代表市场极度不确定，则不考虑入场做多</li>\n</ul>\n</li>\n<li>\n<p>两段式回调后的上涨，可以认为是前段急速上涨的延续</p>\n<ul>\n<li>但是很快就枯竭了，这是潜在的反转形态</li>\n</ul>\n</li>\n</ul>\n<p><img data-src=\"https://s2.loli.net/2022/05/10/boucGex9st6qm3z.png\" alt=\"\" title=\"例子2\" /></p>\n<ul>\n<li>连续的两段式回调</li>\n</ul>\n<p><img data-src=\"https://s2.loli.net/2022/05/10/FTJZMfaytXAnIV8.png\" alt=\"\" title=\"例子3\" /></p>\n<ul>\n<li>第二段回调可以看做是第一段回调的延续</li>\n<li>如果能量很快枯竭，意味着形成了潜在反转的形态</li>\n<li>在回调浪中，出现了潜在反转形态，反转方向和大趋势方向一致，则是非常好的入场时机</li>\n</ul>\n<p><img data-src=\"https://s2.loli.net/2022/05/10/aScnlyT7eBrmiPq.png\" alt=\"\" title=\"例子4\" /></p>\n<ul>\n<li>两段式回调形成了交易区间</li>\n<li>在一段走势明确被反转之前，都应该默认它是延续的</li>\n</ul>\n<h2 id=\"三段式回调-楔形或通道\"><a class=\"anchor\" href=\"#三段式回调-楔形或通道\">#</a> 三段式回调 楔形或通道</h2>\n<ul>\n<li>三段式的回调一般会形成楔形或通道</li>\n</ul>\n<p class=\"gallery\"><img data-src=\"https://s2.loli.net/2022/05/10/VQ8lEsH1LAaSjoq.png\" alt=\"\" /><br />\n<img data-src=\"https://s2.loli.net/2022/05/10/WUra7m2bZcDEioG.png\" alt=\"\" /></p>\n<h3 id=\"楔形回调\"><a class=\"anchor\" href=\"#楔形回调\">#</a> 楔形回调</h3>\n<p><img data-src=\"https://s2.loli.net/2022/05/10/NtarikxCJegE4AW.png\" alt=\"\" /></p>\n<ul>\n<li>一段明显的下跌通道走势，然后进行了深幅的回调，三次回调推动，形成了三段式的楔形回调</li>\n<li>深幅回调的原因：\n<ol>\n<li>需要回测通道起点</li>\n<li>出现了对通道的过冲</li>\n</ol>\n</li>\n</ul>\n<blockquote>\n<p>如何交易？<br />\n在市场走完之前，永远不知道到底在做那个结构；一个形态失败，意味着新的形态形成。</p>\n</blockquote>\n<p><img data-src=\"https://s2.loli.net/2022/05/10/u9mhTSkifaIgPrN.png\" alt=\"image.png\" /></p>\n<ul>\n<li>大周期看整体走势</li>\n<li>价格从急速上涨到窄幅通道到宽幅通道，是趋势动能在减弱的标志，可能面临深幅的回调</li>\n<li>但大趋势的多头方向没有改变，现在价格接近了水平波段的支撑位，因此交易逻辑应偏向做多</li>\n</ul>\n<p><img data-src=\"https://s2.loli.net/2022/05/11/OQt5mn1JyK3vRNw.png\" alt=\"\" /></p>\n<ul>\n<li>小周期看细节走势</li>\n<li>价格首先进行了急速的下跌运动，跌幅较大，接近了前面波段的水平支撑位，出现了明显的反弹，即下跌趋势的回调</li>\n<li>回调走势结束后，出现了第二段急速下跌，但明显比第一段下跌弱</li>\n<li>价格急速运动，常导致动能枯竭，急速下跌 - 急速回调 - 急速下跌更是如此\n<ul>\n<li>价格在下破小波段水平线时立即反弹，出现三根阳线，也是下跌动能枯竭的标志</li>\n<li>此时的 MACD 或 RSI 肯定已经出现背离，也就是趋势动能的不足</li>\n<li>提示这个多头趋势可能经过这两段式的回调，已经走完整理形态，将沿原趋势方向继续运动去测试前高的位置</li>\n</ul>\n</li>\n<li>但是，多头趋势没有得到很好的延续\n<ul>\n<li>出现了三根重叠 K 线形成的交易区间</li>\n<li>并出现了一个带长下影线的阴线，但可以理解为对低点的二次测试</li>\n<li>后续再次出现很多重叠 K 线的缓慢上涨，提示多头很弱</li>\n<li>第二段上涨再次被终结，当第二个强阴线出现时，多头应该止损，重新观察形态</li>\n</ul>\n</li>\n<li>市场走出了第三段下跌，提示走的是楔形回调</li>\n</ul>\n<blockquote>\n<p>交易中经常会出现交易逻辑被市场走势否决的情况</p>\n</blockquote>\n<p><img data-src=\"https://s2.loli.net/2022/05/11/39BYRHWhAJpl21j.png\" alt=\"\" /></p>\n<ul>\n<li>两段式调整逻辑被市场否决后，重新画出楔形调整\n<ul>\n<li>如果第三段回调继续下破，也就意味着楔形的失败，但市场无法预测</li>\n<li>等楔形走出来后再进行交易，而不去管前述的两段式调整产生的波动，可能更稳妥；旗形通道和收敛通道同理</li>\n</ul>\n</li>\n<li>楔形的入场方式：\n<ul>\n<li>激进入场法：\n<ul>\n<li>通道线处挂单，左侧交易；</li>\n<li>但需要触碰通道线成功上破，该楔形才算完全成立，注意设置止损；</li>\n<li>通道线是前面两个低点的 K 线极值的连线，以极值连线以保证左侧交易的盈亏比</li>\n</ul>\n</li>\n<li>保守入场法：\n<ul>\n<li>突破趋势线做单</li>\n<li>趋势线是前面高点的连线，但具有严重的多解性，会有较多假突破，且难以设置止损，因此最好不要突破趋势线直接入场</li>\n<li>可以选择突破前面的小波段高点入场，更为保守，因为水平位的支撑阻力效果永远要比斜线要好</li>\n<li>也可以选择一种突破回调突破的模式；如果价格突破趋势线后，进行了一两根 k 线短暂的横向或小幅的下跌的回调，当价格再次突破这根 k 线高点的时候入场。价格突破，短暂的回调，继续原突破方向运行，提高了突破的成功率；止损可以设置在回调的小波段点下面。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"旗形回调\"><a class=\"anchor\" href=\"#旗形回调\">#</a> 旗形回调</h3>\n<ul>\n<li>一段急速的上涨，然后形成了一段旗形回调</li>\n<li>回调被突破后，再次延续了前面的上涨趋势</li>\n<li>通道和交易区间的区分：\n<ul>\n<li>通道大周期上由重叠 K 线构成，但有方向性</li>\n<li>交易区间由重叠 K 线构成，但没有明显的运动方向</li>\n</ul>\n</li>\n</ul>\n<p class=\"gallery\"><img data-src=\"https://s2.loli.net/2022/05/10/ISiAgVrwn5YWzCm.png\" alt=\"\" /><br />\n<img data-src=\"https://s2.loli.net/2022/05/10/QzEgkltiTIo3O4u.png\" alt=\"\" /></p>\n<ul>\n<li>旗形通道很常见，但实际操盘中可能存在很多假突破，导致交易不顺</li>\n</ul>\n<p class=\"gallery\"><img data-src=\"https://s2.loli.net/2022/05/10/oTRZQvjX7SeC1Iw.png\" alt=\"\" /><br />\n<img data-src=\"https://s2.loli.net/2022/05/10/QuaYIlyiBoTDznK.png\" alt=\"\" /></p>\n<h3 id=\"三角收敛形态\"><a class=\"anchor\" href=\"#三角收敛形态\">#</a> 三角收敛形态</h3>\n<ul>\n<li>市场中非常常见</li>\n<li>缺点：\n<ul>\n<li>划线时有多解性，是用实体相连还是影线相连，结果都不一样，很难找到准确的突破点</li>\n<li>形态很好时，也有可能出现假突破，交易不顺畅</li>\n</ul>\n</li>\n<li>优点是有效性比较高</li>\n</ul>\n<p><img data-src=\"https://s2.loli.net/2022/05/10/Ta6fKmHGxeod9k7.png\" alt=\"\" /></p>\n<h3 id=\"箱体形态\"><a class=\"anchor\" href=\"#箱体形态\">#</a> 箱体形态</h3>\n<ul>\n<li>价格上涨到前面的波段点出现停顿，形成箱体形态，回调整理</li>\n<li>这是一个交易区间，代表方向的不确定性，上下概率各 50%\n<ol>\n<li>急速上涨后出现箱体整理，可能是中继形态，后续有上涨可能</li>\n<li>急速上涨到达前面的波段点出现停顿，也有可能是动能耗尽的标志，是末端整理形态</li>\n</ol>\n</li>\n</ul>\n<p><img data-src=\"https://s2.loli.net/2022/05/10/mkqJPMr48BWHNCg.png\" alt=\"\" /></p>\n",
            "tags": [
                "交易策略",
                "价格行为",
                "图表形态",
                "趋势判断"
            ]
        },
        {
            "id": "https://shoka.lostyu.me/computer-science/mse/itmd-511/chapter-7-8/",
            "url": "https://shoka.lostyu.me/computer-science/mse/itmd-511/chapter-7-8/",
            "title": "Chapter 7 & 8",
            "date_published": "2022-03-07T11:11:13.000Z",
            "content_html": "<p>Chapter 7 - Design, Implementation<br />\nChapter 8 - Software Testing</p>\n<h1 id=\"quiz\"><a class=\"anchor\" href=\"#quiz\">#</a> Quiz</h1>\n<ol>\n<li class=\"quiz true\">\n<p>Software design and implementation is the stage in the software engineering process at which an executable software system is developed.</p>\n</li>\n<li class=\"quiz true\">\n<p>A design pattern is a way of reusing abstract knowledge about a problem and its solution</p>\n</li>\n<li class=\"quiz false\">\n<p>An IDE is the executable after you finish writing and then compiling your program.</p>\n</li>\n<li class=\"quiz false\">\n<p>Open Source Development means that the code that makes up the software is not avaliable for everyone to see.</p>\n</li>\n<li class=\"quiz true\">\n<p>The Linux Operating system is open source.</p>\n</li>\n<li class=\"quiz true\">\n<p>Program testing shows that a program works as intended and is used to discover defects before it is put into use.</p>\n</li>\n<li class=\"quiz false\">\n<p>Unit testing is the process of testing all software components at once.</p>\n</li>\n<li class=\"quiz true\">\n<p>Unit testing should be automated whenever possible.</p>\n</li>\n<li class=\"quiz false\">\n<p>In test driven development, tests are written after the code itself has been written to make sure it works as intended.</p>\n</li>\n<li class=\"quiz true\">\n<p>Testing can only show the presence of errors in a program. It cannot demonstrate that there are no remaining faults.</p>\n</li>\n</ol>\n<h1 id=\"exercise\"><a class=\"anchor\" href=\"#exercise\">#</a> Exercise</h1>\n<ol>\n<li class=\"quiz essay\">\n<p>Develop the design of the weather station to show the interaction between the data collection subsystem and the instruments that collect weather data. Use sequence diagrams to show this interaction.</p>\n<blockquote>\n<p><img data-src=\"https://s2.loli.net/2022/05/07/2xYE86XyMvIdS34.png\" alt=\"\" /></p>\n<p>This diagram shows the sequence of interactions that occur when an external system requests aggregated data from a weather station. Sequence diagrams are to be read from top to bottom.</p>\n<ol>\n<li>The SatComms object receives a request from the weather information system to collect a weather report from a weather station. It acknowledges receipt of the request. A linear arrow on a send message indicates that the external system is not waiting for a reply, but can continue with other processing.</li>\n<li>The SatComms object sends messages over a satellite link to the WeatherStation object to create a summary of the collected weather data. Again, the linear arrows here indicate that the SatComms object does not have to suspend itself waiting for a reply.</li>\n<li>The WeatherStation object sends a message to the Commslink object to summarize the weather data. In this case, the triangular arrow indicates that an instance of the WeatherStation object class needs to wait for a reply.</li>\n<li>The Commslink object calls the summary method of the WeatherData object and waits for a reply.</li>\n<li>The weather data summary is calculated and returned to the WeatherStation object through the Commslink object.</li>\n<li>The WeatherStation object then calls the SatComms object to transmit the aggregated data to the weather information system through the satellite communication system.</li>\n</ol>\n<p>SatComms and WeatherStation objects can be implemented as concurrent processes whose execution can be suspended and resumed. An instance of the SatComms object listens for messages from external systems, decodes those messages, and initiates weather station operations.</p>\n</blockquote>\n</li>\n<li class=\"quiz essay\">\n<p>Draw a sequence diagram showing the interactions of objects in a group diary system when a group of people are arranging a meeting.</p>\n<blockquote>\n<p>A group diary and time management system is intended to support the timetabling of meetings and appointments across a group of co-workers. When an appointment is to be made that involves several people, the system finds a common slot in each of their diaries and arranges the appointment for that time. If no common slots are available, it interacts with the user to rearrange his or her diary to make room for the appointment.<br />\n<img data-src=\"https://s2.loli.net/2022/05/07/QihIgwqHuvo1E9F.png\" alt=\"\" /><br />\nAssumes there are 3 participants in the meeting, one of whom is the meeting organizer.  The organizer suggests a ‘window’ in which the meeting should take place and the participants involved. The group diary communicates with the diaries of the participants, in turn, modifying the window accordingly as their availability is known. So, if the organizer suggests a window of 18th-19th June, the group diary consults the organizer’s diary (D1) and finds availability on these days. D2 is then contacted with that availability, not the original window.  If there are no mutually available dates in the window, the system reports this to the organizer. Otherwise, a date is selected, entered in all diaries, and confirmed to the organizer.</p>\n</blockquote>\n</li>\n<li class=\"quiz essay\">\n<p>When code is integrated into a larger system, problems may surface. Explain how configuration management can be useful when handling such problems.</p>\n<blockquote>\n<p>Configuration management is essential when a team of people are cooperating to develop software. Because it is the process of managing changes to evolving software system, Main aim of configuration management is to support the system integration process so that all developers can access the project code and documents in a controlled way, find out what changes have been made, and compile and link components to create a system. It follows some of activities like Version management, System integration and Problem tracking.<br />\nEX: When something goes wrong with a new version of a system, it may be able to go back to a working version of the system or component.<br />\nExplanation: If a new version of software is created, there is a significant change in functionality, technology, or the hardware is runs on, etc. On the other hand a new revision of software refers to minor bug fix in that software.</p>\n</blockquote>\n</li>\n<li class=\"quiz essay\">\n<p>Testing is meant to show that a program does what it is intended to do. Why may testers not always know what a program is intended for?</p>\n<blockquote>\n<p>Choosing not inform the software tester about the use cases of your software might prove to be a beneficial testing strategy. It allows the tester to approach the testing with an open mind, and interact with the software in the same manner your intended end-users will.</p>\n<p>Software Testing requires a fresh perspective.</p>\n<p>A neutral person who behaves as close to the end-user as possible is needed to perform a thorough Behavioral, Specification-Based, and Input-Output Testing.</p>\n<p>When the requirements of a product are not specified properly to accommodate for special cases or, for example, it may contain omissions, testers may observe a behavior of a product and not be able to know whether it conforms to requirements or not.</p>\n</blockquote>\n</li>\n<li class=\"quiz essay\">\n<p>Some people argue that developers should not be involved in testing their own code but that all testing should be the responsibility of a separate team. Give arguments for and against testing by the developers themselves.</p>\n<blockquote>\n<p>Pro for Inside Team: The team understands the problems that their program is tackling, and thus understands the problems that it might run into. They can write tests that accurately reflect the programs' future challenges. An outsider team may try to verify the code, without fully understanding the initial problem.</p>\n<p>Con for Inside Team: Depending on the team, and often pressured by time, they could write test units that insufficiently test the quality of the code, or are unable to think of challenges to their code beyond the solution that they've already tested.</p>\n</blockquote>\n</li>\n</ol>\n",
            "tags": [
                "计算机科学",
                "Master of Software Engineering",
                "ITMD 511. Application Development Methodologies",
                "软件工程"
            ]
        },
        {
            "id": "https://shoka.lostyu.me/computer-science/mse/itmd-522/lecture-9/",
            "url": "https://shoka.lostyu.me/computer-science/mse/itmd-522/lecture-9/",
            "title": "Lecture 9. Data Manipulation with Pandas",
            "date_published": "2022-03-03T14:03:03.000Z",
            "content_html": "<h1 id=\"data-science-libraries-in-python\"><a class=\"anchor\" href=\"#data-science-libraries-in-python\">#</a> Data Science Libraries in Python</h1>\n<h2 id=\"toolboxeslibraries\"><a class=\"anchor\" href=\"#toolboxeslibraries\">#</a> toolboxes/libraries</h2>\n<h3 id=\"numpy\"><a class=\"anchor\" href=\"#numpy\">#</a> NumPy</h3>\n<ul>\n<li>introduces objects for multidimensional arrays,  vectors and matrices, as well as functions that  allow to easily perform advanced mathematical  and statistical operations on those objects<br />\n 介绍多维数组、向量和矩阵的对象，以及允许轻松对这些对象执行高级数学和统计操作的函数</li>\n<li>provides vectorization of mathematical operations  on arrays and matrices which significantly improves  the performance<br />\n 对数组和矩阵的数学运算进行矢量化，从而显著提高性能</li>\n<li>many other python libraries are built on NumPy<br />\n 许多其他 python 库都是基于 NumPy 构建的</li>\n</ul>\n<h3 id=\"pandas\"><a class=\"anchor\" href=\"#pandas\">#</a> Pandas</h3>\n<ul>\n<li>adds data structures (data frame) and tools  designed to work with table-like data<br />\n 添加数据结构（数据框架）和用于处理类似表格的数据的工具</li>\n<li>provides tools for data manipulation: reshaping,  merging, sorting, slicing, aggregation etc.<br />\n 提供数据处理工具：重塑、合并、排序、切片、聚合等。</li>\n<li>allows handling missing data<br />\n 允许处理丢失的数据</li>\n</ul>\n<h3 id=\"scipy\"><a class=\"anchor\" href=\"#scipy\">#</a> SciPy</h3>\n<ul>\n<li>collection of algorithms for linear algebra,  differential equations, numerical integration,  optimization, statistics and more<br />\n 线性代数、微分方程、数值积分、优化、统计学等算法的集合</li>\n<li>part of SciPy Stack<br />\nSciPy 堆栈的一部分</li>\n<li>built on NumPy<br />\n 建立在 NumPy 之上</li>\n<li>SciPy and NumPy are usually used for matrix-based  operations, such as matrix factorization<br />\nSciPy 和 NumPy 通常用于基于矩阵的操作，例如矩阵分解</li>\n</ul>\n<h3 id=\"scikit-learn\"><a class=\"anchor\" href=\"#scikit-learn\">#</a> SciKit-Learn</h3>\n<ul>\n<li>\n<p>provides machine learning algorithms:  classification, regression, clustering, model  validation etc.<br />\n 提供机器学习算法：分类、回归、聚类、模型验证等。</p>\n</li>\n<li>\n<p>built on NumPy, SciPy and matplotlib<br />\n 基于 NumPy、SciPy 和 matplotlib 构建</p>\n</li>\n</ul>\n<h2 id=\"visualization-libraries\"><a class=\"anchor\" href=\"#visualization-libraries\">#</a> Visualization libraries</h2>\n<h3 id=\"matplotlib\"><a class=\"anchor\" href=\"#matplotlib\">#</a> matplotlib</h3>\n<ul>\n<li>python 2D plotting library which produces publication  quality figures in a variety of hardcopy formats<br />\npython 2D 绘图库，以各种硬拷贝格式生成出版物质量的图形</li>\n<li>a set of functionalities similar to those of MATLAB<br />\n 类似于 MATLAB 的功能</li>\n<li>line plots, scatter plots, barcharts, histograms, pie  charts etc.<br />\n 折线图、散点图、条形图、直方图、饼图等。</li>\n<li>relatively low-level; some effort needed to create  advanced visualization<br />\n 相对低级；创建高级可视化需要一些努力</li>\n</ul>\n<h3 id=\"seaborn\"><a class=\"anchor\" href=\"#seaborn\">#</a> Seaborn</h3>\n<ul>\n<li>based on matplotlib</li>\n<li>provides high level interface for drawing attractive  statistical graphics<br />\n 提供高级界面，用于绘制有吸引力的统计图形</li>\n<li>Similar (in style) to the popular  <code>ggplot2</code>  library in R<br />\n (样式上) 与 R 中流行的  <code>ggplot2</code>  库相似</li>\n</ul>\n<p><div class=\"video-container\"><iframe src=\"https://www.youtube.com/embed/OGxgnH8y2N\" frameborder=\"0\" loading=\"lazy\" allowfullscreen></iframe></div></p>\n<h1 id=\"pandas-2\"><a class=\"anchor\" href=\"#pandas-2\">#</a> Pandas</h1>\n<h2 id=\"introductions\"><a class=\"anchor\" href=\"#introductions\">#</a> Introductions</h2>\n<p>Pandas is a newer package built on top of NumPy, and provides an efficient implementation of a DataFrame.<br />\nPandas 是一个构建在 NumPy 之上的更新包，它提供了数据帧的高效实现。</p>\n<p>DataFrames are essentially multidimensional arrays with attached row and column labels, and often with heterogeneous types and/or missing data.<br />\nDataFrame 本质上是具有附加的行和列标签的多维数组，并且通常具有异构类型和 / 或缺少数据。</p>\n<h2 id=\"basic-data-structure\"><a class=\"anchor\" href=\"#basic-data-structure\">#</a> Basic data structure</h2>\n<h3 id=\"series\"><a class=\"anchor\" href=\"#series\">#</a> Series</h3>\n<ul>\n<li>Series is a one-dimensional array of indexed data.<br />\n 序列是索引数据的一维数组。</li>\n<li>The index-value is similar to key-value in dict in Python3.</li>\n<li>We can create series by given a dict or an array/list<br />\n 索引值类似于 python3 中 dict 的键值。</li>\n</ul>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Data Structure: Series'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># create series from an array ####################################</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># create Series from an array with automatic indices</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># 从具有自动索引的数组创建序列</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>data <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>Series<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">0.25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.75</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>values<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\"># create Series from an array with given indices</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\"># 从具有给定索引的数组创建序列</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>data <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>Series<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">0.25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.75</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> index<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'b'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'c'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'d'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>values<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span><span class=\"token string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token comment\"># it is not necessary to be continuous indices</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token comment\"># 不一定要是连续的指数</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>data <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>Series<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">0.25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.75</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> index<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>values<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token comment\"># create series from a dict </span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token comment\"># 从字典创建序列</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>population_dict <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">'California'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">38332521</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token string\">'Texas'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">26448193</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token string\">'New York'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">19651127</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token string\">'Florida'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">19552860</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token string\">'Illinois'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">12882135</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>data <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>Series<span class=\"token punctuation\">(</span>population_dict<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>values<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>A <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>Series<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> index<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>B <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>Series<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> index<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>B<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>A <span class=\"token operator\">+</span> B<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>C<span class=\"token operator\">=</span>A<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>B<span class=\"token punctuation\">,</span> fill_value<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>C<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"dataframe\"><a class=\"anchor\" href=\"#dataframe\">#</a> DataFrame</h3>\n<ul>\n<li>DataFrame is a generalized array or a specialization of dict.<br />\nDataFrame 是广义上的数组或特殊的 dict。</li>\n<li>It can be viewed as a table which stores data in different data types.<br />\n 可以将其视为以不同数据类型存储数据的表。</li>\n</ul>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\nData Structure: DataFrame'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>population_dict <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">'California'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">38332521</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token string\">'Texas'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">26448193</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token string\">'New York'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">19651127</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token string\">'Florida'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">19552860</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token string\">'Illinois'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">12882135</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>population <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>Series<span class=\"token punctuation\">(</span>population_dict<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>area_dict <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">'California'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">423967</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Texas'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">695662</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'New York'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">141297</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Florida'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">170312</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Illinois'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">149995</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>area <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>Series<span class=\"token punctuation\">(</span>area_dict<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>direction_dict<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">'California'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'West'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Texas'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Middle'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'New York'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'East'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Florida'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'East'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Illinois'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Middle'</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>direction<span class=\"token operator\">=</span>pd<span class=\"token punctuation\">.</span>Series<span class=\"token punctuation\">(</span>direction_dict<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\"># create a dataFrame by fusing three Series or dicts</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\"># 通过融合三个序列或 dict 创建 dataFrame</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>states <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>DataFrame<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">'population'</span><span class=\"token punctuation\">:</span> population<span class=\"token punctuation\">,</span> <span class=\"token string\">'area'</span><span class=\"token punctuation\">:</span> area<span class=\"token punctuation\">,</span> <span class=\"token string\">'direction'</span><span class=\"token punctuation\">:</span> direction<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>states<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>states<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>states<span class=\"token punctuation\">[</span><span class=\"token string\">'area'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>states<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\"># create DataFrame in different ways: single column, multiple columns, given index and columns</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token comment\"># 以不同的方式创建 DataFrame：单列、多列、给定索引和列</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>df<span class=\"token operator\">=</span>pd<span class=\"token punctuation\">.</span>DataFrame<span class=\"token punctuation\">(</span>population<span class=\"token punctuation\">,</span> columns<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'population'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>df<span class=\"token operator\">=</span>pd<span class=\"token punctuation\">.</span>DataFrame<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">'population'</span><span class=\"token punctuation\">:</span> population<span class=\"token punctuation\">,</span> <span class=\"token string\">'area'</span><span class=\"token punctuation\">:</span> area<span class=\"token punctuation\">,</span> <span class=\"token string\">'direction'</span><span class=\"token punctuation\">:</span> direction<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>df<span class=\"token operator\">=</span>pd<span class=\"token punctuation\">.</span>DataFrame<span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>rand<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> columns<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'foo'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'bar'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> index<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'b'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token comment\"># create dataFrame from dict</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token comment\"># 从 dict 创建 dataFrame</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>df<span class=\"token operator\">=</span>pd<span class=\"token punctuation\">.</span>DataFrame<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'b'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">'b'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'c'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">4</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"index\"><a class=\"anchor\" href=\"#index\">#</a> Index</h3>\n<ul>\n<li>Index is the object associated with Series and DataFrame<br />\n 索引是与 Series 和 DataFrame 关联的对象</li>\n<li>It can be viewed as an immutable array (i.e., cannot be modified) or as an ordered set<br />\n 可以将其视为不可变数组 (即不能修改) 或有序集</li>\n</ul>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>indA <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>Index<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>indB <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>Index<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># any set opeartions can be applied to index</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 任何集合运算都可以应用于索引</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>ind <span class=\"token operator\">=</span> indA <span class=\"token operator\">&amp;</span> indB <span class=\"token comment\"># intersection </span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>ind<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>ind <span class=\"token operator\">=</span> indA <span class=\"token operator\">|</span> indB <span class=\"token comment\"># union</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>ind<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>ind <span class=\"token operator\">=</span> indA <span class=\"token operator\">^</span> indB <span class=\"token comment\"># symmetric difference</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>ind<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"slicing-data-in-dataframe\"><a class=\"anchor\" href=\"#slicing-data-in-dataframe\">#</a> Slicing data in dataFrame</h2>\n<ul>\n<li><code>loc</code>  and  <code>iloc</code>  are used to slice rows by default.<br />\n 默认情况下， <code>loc</code>  和 <code>iloc</code>  用于切片行。</li>\n<li>To slice columns, we can use  <code>df.loc[:, [1, 2, 3]]</code> <br />\n 要切片列，可以使用 <code>df.loc[:, [1, 2, 3]]</code></li>\n<li>we can use index  <code>-1</code>  in  <code>iloc</code> , but cannot use it in  <code>loc</code> .</li>\n<li>We <strong>only</strong> use <ins>index number</ins> in  <code>iloc</code> , but we can use both index number and label in loc</li>\n<li><code>ix</code>  is not suggested to be used in pandas v0.2 or later version</li>\n</ul>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># select data by columns</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 按列选择数据</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>states<span class=\"token punctuation\">[</span><span class=\"token string\">'area'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>states<span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token string\">'area'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'direction'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># select data by rows</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># 按行选择数据</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>states<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># index from [1, 3)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>states<span class=\"token punctuation\">[</span><span class=\"token string\">'Florida'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'Illinois'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\"># select data by rows and columns</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\"># 按行和列选择数据</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>states<span class=\"token punctuation\">.</span>iloc<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># use numerical index in .iloc</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>states<span class=\"token punctuation\">.</span>loc<span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token string\">'Texas'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'New York'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'area'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'direction'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># use string key in .loc</span></pre></td></tr></table></figure><h2 id=\"nan-none-and-mising-values-in-pandas\"><a class=\"anchor\" href=\"#nan-none-and-mising-values-in-pandas\">#</a>  <code>NaN</code> ,  <code>None</code>  and mising values in Pandas</h2>\n<ul>\n<li><code>None</code>  is a general missing data</li>\n<li><code>NaN</code>  can be interpreted as missing numerical data in float type<br />\n 可以解释为浮点类型中缺少数值数据</li>\n</ul>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>s<span class=\"token operator\">=</span>pd<span class=\"token punctuation\">.</span>Series<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> np<span class=\"token punctuation\">.</span>nan<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># check whether there are missing values</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 检查是否有缺失值</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span>isnull<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># drop missing values</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># 删除缺失值</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span>dropna<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\"># in dataFrame, it will drop rows with null values</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\"># 在 dataFrame 中删除值为 null 的行</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>df <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>DataFrame<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> np<span class=\"token punctuation\">.</span>nan<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">[</span>np<span class=\"token punctuation\">.</span>nan<span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token comment\"># it will drop rows with null values</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token comment\"># 删除值为 null 的行</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">.</span>dropna<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\"># it will drop columns with null values</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\"># 删除值为 null 的列</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">.</span>dropna<span class=\"token punctuation\">(</span>axis<span class=\"token operator\">=</span><span class=\"token string\">'columns'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># axis =0 cols, axis =1 rows</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token comment\"># fill in missing values</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token comment\"># 填写缺失值</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>data <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>Series<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> np<span class=\"token punctuation\">.</span>nan<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> index<span class=\"token operator\">=</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token string\">'abcde'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>fillna<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"file-operations-by-pandas\"><a class=\"anchor\" href=\"#file-operations-by-pandas\">#</a> File operations by Pandas</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># load csv into dataFrame</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>df1<span class=\"token operator\">=</span>pd<span class=\"token punctuation\">.</span>read_csv<span class=\"token punctuation\">(</span><span class=\"token string\">'Data_students.csv'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>df1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>df2<span class=\"token operator\">=</span>pd<span class=\"token punctuation\">.</span>read_table<span class=\"token punctuation\">(</span><span class=\"token string\">'Data_students.csv'</span><span class=\"token punctuation\">,</span>sep<span class=\"token operator\">=</span><span class=\"token string\">','</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>df2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># show head and tail data</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>df1<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>df1<span class=\"token punctuation\">.</span>tail<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\"># print(df2.head(2))</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\"># get column names</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>df1<span class=\"token punctuation\">.</span>columns<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>df1<span class=\"token punctuation\">.</span>columns<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># by default, they are index</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\"># convert column names to list</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>col_list <span class=\"token operator\">=</span> df1<span class=\"token punctuation\">.</span>columns<span class=\"token punctuation\">.</span>tolist<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>col_list<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>col_list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># it is list now</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\"># select data by rows</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\nselect data by rows'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>df1<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># get rows with index [1, 3)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token comment\"># select data by columns</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>df1<span class=\"token punctuation\">.</span>columns<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\nselect data by columns'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>cols <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'Age'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'Gender'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'Grade'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>df1<span class=\"token punctuation\">[</span>cols<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token comment\"># get mean value in a column</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>df1<span class=\"token punctuation\">[</span><span class=\"token string\">'Age'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>mean<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"data-preprocessing\"><a class=\"anchor\" href=\"#data-preprocessing\">#</a> Data Preprocessing</h1>\n<h2 id=\"introductions-2\"><a class=\"anchor\" href=\"#introductions-2\">#</a> Introductions</h2>\n<p>Data preprocessing may include the following operations:<br />\n 数据预处理可能包括以下操作：</p>\n<ul>\n<li>file load<br />\n 文件加载</li>\n<li>deal with missing values<br />\n 处理缺失值</li>\n<li>slicing data<br />\n 切片数据</li>\n<li>data normalization<br />\n 数据标准化</li>\n<li>data smoothing<br />\n 数据平滑</li>\n<li>data transformation, numerical to categorical<br />\n 数据转换，从数字到分类</li>\n<li>data transformation, categorical to numerical<br />\n 数据转换，分类到数字</li>\n<li>feature selection<br />\n 特征选择</li>\n<li>feature deduction<br />\n 特征演绎</li>\n<li>some special preprocessing, such as the operations in text mining, e.g., stopword removal, tokenization, TF-IDF weighting<br />\n 一些特殊的预处理，例如文本挖掘中的操作，例如，停止词删除，标记化，tf-idf 加权</li>\n</ul>\n<blockquote>\n<p>the following operations will use Data_Students.csv as the data set</p>\n</blockquote>\n<h2 id=\"deal-with-missing-values\"><a class=\"anchor\" href=\"#deal-with-missing-values\">#</a> deal with missing values</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#Import Python Libraries</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> scipy <span class=\"token keyword\">as</span> sp</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> matplotlib <span class=\"token keyword\">as</span> mpl</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> seaborn <span class=\"token keyword\">as</span> sns</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">from</span> IPython<span class=\"token punctuation\">.</span>display <span class=\"token keyword\">import</span> display<span class=\"token punctuation\">,</span> HTML</pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>df<span class=\"token operator\">=</span>pd<span class=\"token punctuation\">.</span>read_csv<span class=\"token punctuation\">(</span><span class=\"token string\">'data_students.csv'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># get header</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>cols<span class=\"token operator\">=</span>df<span class=\"token punctuation\">.</span>columns</pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\"># get dimensions</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\"># print header and dataType, as well as boolean value which tells missing values</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\"># 打印标题和数据类型，以及是否为缺失值的布尔值</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">.</span>dtypes<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ColumnName, DataType, MissingValues'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> cols<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> <span class=\"token string\">','</span><span class=\"token punctuation\">,</span> df<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>dtype<span class=\"token punctuation\">,</span><span class=\"token string\">','</span><span class=\"token punctuation\">,</span>df<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>isnull<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\"># print out and display dataframe as tables in HTML</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\"># 在 HTML 中打印并显示 dataframe 为表格</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>display<span class=\"token punctuation\">(</span>HTML<span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>to_html<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>    </pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token comment\"># By using GradeLetter as label, and visualize data</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token comment\"># 使用 GradeLetter 作为标签，将数据可视化</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>sns<span class=\"token punctuation\">.</span><span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>sns<span class=\"token punctuation\">.</span>pairplot<span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">,</span> hue<span class=\"token operator\">=</span><span class=\"token string\">'GradeLetter'</span><span class=\"token punctuation\">,</span> height<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># calculate mean value by ignoring missing values</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 通过忽略缺失值来计算平均值</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>mean_age<span class=\"token operator\">=</span>df<span class=\"token punctuation\">[</span><span class=\"token string\">'Age'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>mean<span class=\"token punctuation\">(</span>skipna<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>mean_hr_assignment<span class=\"token operator\">=</span>df<span class=\"token punctuation\">[</span><span class=\"token string\">'Hours on Assignments'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>mean<span class=\"token punctuation\">(</span>skipna<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>mean_hr_game<span class=\"token operator\">=</span>df<span class=\"token punctuation\">[</span><span class=\"token string\">'Hours on Games'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>mean<span class=\"token punctuation\">(</span>skipna<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>mean_exam<span class=\"token operator\">=</span>df<span class=\"token punctuation\">[</span><span class=\"token string\">'Exam'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>mean<span class=\"token punctuation\">(</span>skipna<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>mean_grade<span class=\"token operator\">=</span>df<span class=\"token punctuation\">[</span><span class=\"token string\">'Grade'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>mean<span class=\"token punctuation\">(</span>skipna<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># replace missing values in numerical variables by using mean value</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># 用均值代替数值变量中的缺失值 </span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>df<span class=\"token punctuation\">[</span><span class=\"token string\">\"Age\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>fillna<span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">[</span><span class=\"token string\">\"Age\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>mean<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> inplace<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>df<span class=\"token punctuation\">[</span><span class=\"token string\">\"Hours on Assignments\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>fillna<span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">[</span><span class=\"token string\">\"Hours on Assignments\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>mean<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> inplace<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>df<span class=\"token punctuation\">[</span><span class=\"token string\">\"Hours on Games\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>fillna<span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">[</span><span class=\"token string\">\"Hours on Games\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>mean<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> inplace<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>df<span class=\"token punctuation\">[</span><span class=\"token string\">\"Exam\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>fillna<span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">[</span><span class=\"token string\">\"Exam\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>mean<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> inplace<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>df<span class=\"token punctuation\">[</span><span class=\"token string\">\"Grade\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>fillna<span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">[</span><span class=\"token string\">\"Grade\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>mean<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> inplace<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\"># check again whether there are missing values</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\"># 再次检查是否有缺失值</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ColumnName, DataType, MissingValues'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> cols<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> <span class=\"token string\">','</span><span class=\"token punctuation\">,</span> df<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>dtype<span class=\"token punctuation\">,</span><span class=\"token string\">','</span><span class=\"token punctuation\">,</span>df<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>isnull<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre> </pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\"># print out and display dataframe as tables in HTML</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\"># 在 HTML 中打印并显示 dataframe 为表格</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>display<span class=\"token punctuation\">(</span>HTML<span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>to_html<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"normalization\"><a class=\"anchor\" href=\"#normalization\">#</a> Normalization</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># find numeric columns </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 查找数字列</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>numerics <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'int16'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'int32'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'int64'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'float16'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'float32'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'float64'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># get column names</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 获取列名</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>cols_numeric <span class=\"token operator\">=</span> df<span class=\"token punctuation\">.</span>select_dtypes<span class=\"token punctuation\">(</span>include<span class=\"token operator\">=</span>numerics<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>columns<span class=\"token punctuation\">.</span>tolist<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># get column indices</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># 获取列索引</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>cols_numeric_index<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span>df<span class=\"token punctuation\">.</span>columns<span class=\"token punctuation\">.</span>get_loc<span class=\"token punctuation\">(</span>col<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> col <span class=\"token keyword\">in</span> cols_numeric<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Numerical column names:\\n'</span><span class=\"token punctuation\">,</span>cols_numeric<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Numerical column indeices:\\n'</span><span class=\"token punctuation\">,</span>cols_numeric_index<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> cols<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> <span class=\"token string\">','</span><span class=\"token punctuation\">,</span> df<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>dtype<span class=\"token punctuation\">,</span><span class=\"token string\">','</span><span class=\"token punctuation\">,</span>df<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>isnull<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">any</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\"># create a copy first</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\"># 先创建一个副本</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\"># 深复制，不会影响原始的 dataframe</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>df_norm<span class=\"token operator\">=</span>df<span class=\"token punctuation\">.</span>copy<span class=\"token punctuation\">(</span>deep<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token comment\"># Normalization method 1 = z-score normalization</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token comment\"># 归一化方法 1：z-score 归一化</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>preprocessing <span class=\"token keyword\">import</span> MinMaxScaler</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>scaler <span class=\"token operator\">=</span> MinMaxScaler<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>df<span class=\"token punctuation\">[</span>cols_numeric<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>scaler<span class=\"token punctuation\">.</span>fit_transform<span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">[</span>cols_numeric<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>display<span class=\"token punctuation\">(</span>HTML<span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>to_html<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token comment\"># Normalization method 2 = Min-max normalization [0,1]</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token comment\"># 归一化方法 2：最小最大归一化 [0,1]</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token keyword\">for</span> col <span class=\"token keyword\">in</span> cols_numeric<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    df_norm<span class=\"token punctuation\">[</span>col<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">[</span>col<span class=\"token punctuation\">]</span><span class=\"token operator\">-</span>df<span class=\"token punctuation\">[</span>col<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">min</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">[</span>col<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span>df<span class=\"token punctuation\">[</span>col<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">min</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>    </pre></td></tr><tr><td data-num=\"33\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token comment\"># drop column ID since it is not useful in data science tasks </span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token comment\"># 删除 ID 列，因为它在数据科学任务中没有用</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token comment\"># 1 = column 1 指的是列，如果是 0，则会在行 raw index 中搜索 ID</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>df_norm<span class=\"token operator\">=</span>df_norm<span class=\"token punctuation\">.</span>drop<span class=\"token punctuation\">(</span><span class=\"token string\">'ID'</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>df_norm<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"data-transformation\"><a class=\"anchor\" href=\"#data-transformation\">#</a> Data transformation</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>df_transform<span class=\"token operator\">=</span>df_norm<span class=\"token punctuation\">.</span>copy<span class=\"token punctuation\">(</span>deep<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>   </pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># print out and display dataframe as tables in HTML</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 在 HTML 中打印并显示 dataframe 为表格</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>display<span class=\"token punctuation\">(</span>HTML<span class=\"token punctuation\">(</span>df_transform<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>to_html<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># convert numerical to categorical data, e.g., Age </span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># 将数值转换为分类数据，例如年龄</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># 使用 cut 分成 8 组</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># df_transform['Age'] = pd.cut(df_transform['Age'],8)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># display(HTML(df_transform.head(5).to_html()))</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\"># convert categorical data to numerical data, e.g., Degree </span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\"># 将分类数据转换为数值，例如学位</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>df_transform<span class=\"token punctuation\">[</span><span class=\"token string\">'Degree'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>dtype<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>df_transform<span class=\"token punctuation\">[</span><span class=\"token string\">'Nationality'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>dtype<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>df_dummies_degree<span class=\"token operator\">=</span>pd<span class=\"token punctuation\">.</span>get_dummies<span class=\"token punctuation\">(</span>df_transform<span class=\"token punctuation\">[</span><span class=\"token string\">'Degree'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>df_dummies_degree<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>df_dummies_nation<span class=\"token operator\">=</span>pd<span class=\"token punctuation\">.</span>get_dummies<span class=\"token punctuation\">(</span>df_transform<span class=\"token punctuation\">[</span><span class=\"token string\">'Nationality'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token comment\"># add binary variables to dataframe</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token comment\"># 将二进制变量添加到 dataframe</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>df_transform<span class=\"token operator\">=</span>df_transform<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>df_dummies_degree<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>df_transform<span class=\"token operator\">=</span>df_transform<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>df_dummies_nation<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token comment\"># remove the original categorical variable</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token comment\"># 删除原始的分类变量</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>df_transform<span class=\"token operator\">=</span>df_transform<span class=\"token punctuation\">.</span>drop<span class=\"token punctuation\">(</span><span class=\"token string\">'Degree'</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>df_transform<span class=\"token operator\">=</span>df_transform<span class=\"token punctuation\">.</span>drop<span class=\"token punctuation\">(</span><span class=\"token string\">'Nationality'</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>display<span class=\"token punctuation\">(</span>HTML<span class=\"token punctuation\">(</span>df_transform<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>to_html<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token comment\"># N-1 binary variable is enough, drop 1</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token comment\"># N-1 二进制变量就足够了，去掉 1</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>df_transform<span class=\"token operator\">=</span>df_transform<span class=\"token punctuation\">.</span>drop<span class=\"token punctuation\">(</span><span class=\"token string\">' PHD'</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>df_transform<span class=\"token operator\">=</span>df_transform<span class=\"token punctuation\">.</span>drop<span class=\"token punctuation\">(</span><span class=\"token string\">' China'</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>display<span class=\"token punctuation\">(</span>HTML<span class=\"token punctuation\">(</span>df_transform<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>to_html<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"feature-selection\"><a class=\"anchor\" href=\"#feature-selection\">#</a> Feature selection</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> matplotlib<span class=\"token punctuation\">.</span>pyplot <span class=\"token keyword\">as</span> plt</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># print out and display dataframe as tables in HTML</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 在 HTML 中打印并显示 dataframe 为表格</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>display<span class=\"token punctuation\">(</span>HTML<span class=\"token punctuation\">(</span>df_transform<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>to_html<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># set features and labels</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># 设置特征和标签</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>x <span class=\"token operator\">=</span> df_transform<span class=\"token punctuation\">.</span>drop<span class=\"token punctuation\">(</span><span class=\"token string\">'GradeLetter'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>y <span class=\"token operator\">=</span> df_transform<span class=\"token punctuation\">[</span><span class=\"token string\">'GradeLetter'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\"># Feature selection by using Filter model </span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\"># 利用过滤模型进行特征选择</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\"># by using Pearson correlation as selecting criterion</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\"># 以皮尔逊相关系数作为选择标准</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\"># Pearson correlation can only be applied among numerical variables</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\"># 皮尔逊相关只能在数值变量之间应用</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token comment\"># in this data, GradeLetter is highly correlated with numerical variable Grade</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token comment\"># 在此数据中，GradeLetter 与数值变量 Grade 高度相关</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token comment\"># calculate correlation and show in heatmap</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\"># 计算相关性并在热图中显示</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>plt<span class=\"token punctuation\">.</span>figure<span class=\"token punctuation\">(</span>figsize<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">12</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>cor <span class=\"token operator\">=</span> df_transform<span class=\"token punctuation\">.</span>corr<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>sns<span class=\"token punctuation\">.</span>heatmap<span class=\"token punctuation\">(</span>cor<span class=\"token punctuation\">,</span> annot<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> cmap<span class=\"token operator\">=</span>plt<span class=\"token punctuation\">.</span>cm<span class=\"token punctuation\">.</span>Reds<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>plt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token comment\"># Correlation with output variable</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token comment\"># 与输出变量的相关性</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>cor_target <span class=\"token operator\">=</span> <span class=\"token builtin\">abs</span><span class=\"token punctuation\">(</span>cor<span class=\"token punctuation\">[</span><span class=\"token string\">\"Grade\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token comment\"># Selecting highly correlated features</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token comment\"># 选择高度相关的特征</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>relevant_features <span class=\"token operator\">=</span> cor_target<span class=\"token punctuation\">[</span>cor_target<span class=\"token operator\">></span><span class=\"token number\">0.5</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\nSelected features by Filter model:\\n'</span><span class=\"token punctuation\">,</span>relevant_features<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token comment\"># Feature selection by using Wrapper model </span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token comment\"># 使用包装模型进行特征选择</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token comment\"># A machine learning task is invovled in the Wrapper model</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token comment\"># 包装器模型中包含了一个机器学习任务</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token comment\"># We use the performance of the machine learning task to select influential features</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token comment\"># 我们使用机器学习任务的性能来选择有影响力的特征</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token comment\"># In this example, we use backward elimination in linear regression which predicts Grade</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token comment\"># 在这个例子中，我们在预测 Grade 成绩的线性回归中使用反向消除法</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre><span class=\"token comment\"># # Backward Elimination 反向消除</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token comment\"># import statsmodels.api as sm</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre><span class=\"token comment\"># cols = list(df_transform.columns)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre><span class=\"token comment\"># cols.remove('GradeLetter') # drop the nominal variable</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre><span class=\"token comment\"># print('\\n x variables: ',cols)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre></pre></td></tr><tr><td data-num=\"53\"></td><td><pre><span class=\"token comment\"># y=list(df_transform['Grade']) # using Grade as y variable in linear regression</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre><span class=\"token comment\"># pmax = 1</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre><span class=\"token comment\"># while (len(cols)>0):</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre><span class=\"token comment\">#     p= []</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre><span class=\"token comment\">#     X_1 = df_transform[cols]</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre><span class=\"token comment\">#     X_1 = sm.add_constant(X_1)</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre><span class=\"token comment\">#     model = sm.OLS(y,X_1).fit()</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre><span class=\"token comment\">#     p = pd.Series(model.pvalues.values[1:],index = cols)      </span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre><span class=\"token comment\">#     pmax = max(p)</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre><span class=\"token comment\">#     feature_with_p_max = p.idxmax()</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre><span class=\"token comment\">#     if(pmax>0.05):</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre><span class=\"token comment\">#         cols.remove(feature_with_p_max)</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre><span class=\"token comment\">#     else:</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre><span class=\"token comment\">#         break</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre><span class=\"token comment\"># selected_features_BE = cols</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre><span class=\"token comment\"># print('\\nSelected features by Wrapper model (regression):\\n',selected_features_BE)</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre></pre></td></tr><tr><td data-num=\"70\"></td><td><pre></pre></td></tr><tr><td data-num=\"71\"></td><td><pre><span class=\"token comment\"># Feature selection by using Wrapper model </span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre><span class=\"token comment\"># 使用包装模型进行特征选择</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre><span class=\"token comment\"># This example shows that we can use impurity criterion in decision trees to select important features</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre><span class=\"token comment\"># 这个例子表明，我们可以使用决策树中的杂质准则来选择重要的特征</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre><span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>ensemble <span class=\"token keyword\">import</span> ExtraTreesClassifier</pre></td></tr><tr><td data-num=\"76\"></td><td><pre></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>y <span class=\"token operator\">=</span> df_transform<span class=\"token punctuation\">[</span><span class=\"token string\">'GradeLetter'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>x <span class=\"token operator\">=</span> df_transform<span class=\"token punctuation\">.</span>drop<span class=\"token punctuation\">(</span><span class=\"token string\">'GradeLetter'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>display<span class=\"token punctuation\">(</span>HTML<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>to_html<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>model <span class=\"token operator\">=</span> ExtraTreesClassifier<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>model<span class=\"token punctuation\">.</span>fit<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>values<span class=\"token operator\">=</span>model<span class=\"token punctuation\">.</span>feature_importances_<span class=\"token punctuation\">.</span>tolist<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>keys<span class=\"token operator\">=</span>x<span class=\"token punctuation\">.</span>columns<span class=\"token punctuation\">.</span>tolist<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>d <span class=\"token operator\">=</span> <span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">zip</span><span class=\"token punctuation\">(</span>keys<span class=\"token punctuation\">,</span> values<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre><span class=\"token comment\"># sort pairs by values descending</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre><span class=\"token comment\"># 按值降序排列对</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>s <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> k <span class=\"token keyword\">in</span> <span class=\"token builtin\">sorted</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">,</span> key<span class=\"token operator\">=</span>d<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">,</span> reverse<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre></pre></td></tr><tr><td data-num=\"91\"></td><td><pre></pre></td></tr><tr><td data-num=\"92\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\nSelected features by Wrapper model (classification):\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre><span class=\"token keyword\">for</span> k<span class=\"token punctuation\">,</span> v <span class=\"token keyword\">in</span> s<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">,</span><span class=\"token string\">'\\t'</span><span class=\"token punctuation\">,</span>v<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"feature-reduction\"><a class=\"anchor\" href=\"#feature-reduction\">#</a> Feature reduction</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># Example of PCA</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>decomposition <span class=\"token keyword\">import</span> PCA</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>display<span class=\"token punctuation\">(</span>HTML<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>to_html<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># convert all features to numerical, in order to apply PCA</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># 将所有特征转换为数值，以便应用 PCA 主成分分析</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>df_dummies_nationality<span class=\"token operator\">=</span>pd<span class=\"token punctuation\">.</span>get_dummies<span class=\"token punctuation\">(</span>df_transform<span class=\"token punctuation\">[</span><span class=\"token string\">'Nationality'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>df_dummies_nationality<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\"># add binary variables to dataframe</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\"># 将二进制变量添加到 dataframe</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>df_transform<span class=\"token operator\">=</span>df_transform<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>df_dummies_nationality<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\"># remove the original categorical variable</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\"># 删除原始的分类变量</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>df_transform<span class=\"token operator\">=</span>df_transform<span class=\"token punctuation\">.</span>drop<span class=\"token punctuation\">(</span><span class=\"token string\">'Nationality'</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\"># remove on extra binary variable</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\"># 删除额外的二进制变量</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>df_transform<span class=\"token operator\">=</span>df_transform<span class=\"token punctuation\">.</span>drop<span class=\"token punctuation\">(</span><span class=\"token string\">' China'</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>x <span class=\"token operator\">=</span> df_transform<span class=\"token punctuation\">.</span>drop<span class=\"token punctuation\">(</span><span class=\"token string\">'GradeLetter'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>y <span class=\"token operator\">=</span> df_transform<span class=\"token punctuation\">[</span><span class=\"token string\">'GradeLetter'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>display<span class=\"token punctuation\">(</span>HTML<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>to_html<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token comment\"># feature extraction 特征提取</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token comment\"># API, https://scikit-learn.org/stable/modules/generated/sklearn.decomposition.PCA.html</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>pca <span class=\"token operator\">=</span> PCA<span class=\"token punctuation\">(</span>n_components<span class=\"token operator\">=</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>fit <span class=\"token operator\">=</span> pca<span class=\"token punctuation\">.</span>fit<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token comment\"># summarize components 汇总组件</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token comment\"># print(\"Explained Variance: %s\") % fit.explained_variance_ratio_</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Explained variance: '</span><span class=\"token punctuation\">,</span> fit<span class=\"token punctuation\">.</span>explained_variance_ratio_<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\nPCAs:\\n'</span><span class=\"token punctuation\">,</span> fit<span class=\"token punctuation\">.</span>components_<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token comment\"># select PCA and output new features</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token comment\"># 选择 PCA 并输出新特征</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token comment\"># for example, we choose the top-3 PCAs</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token comment\"># 例如，我们选择排名前 3 位的 PCA</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>PCAs <span class=\"token operator\">=</span> pca<span class=\"token punctuation\">.</span>fit_transform<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>PCAs_selected <span class=\"token operator\">=</span> PCAs<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">:</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>df_PCAs <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>DataFrame<span class=\"token punctuation\">(</span>data<span class=\"token operator\">=</span>PCAs_selected<span class=\"token punctuation\">,</span> columns<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'PC1'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'PC2'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'PC3'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>df_PCAs<span class=\"token punctuation\">[</span><span class=\"token string\">'GraderLetter'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>y</pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>display<span class=\"token punctuation\">(</span>HTML<span class=\"token punctuation\">(</span>df_PCAs<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>to_html<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token comment\"># write new data to external files</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre><span class=\"token comment\"># 将新数据写入外部文件</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>df_PCAs<span class=\"token punctuation\">.</span>to_csv<span class=\"token punctuation\">(</span><span class=\"token string\">'Data_Students_PCA.csv'</span><span class=\"token punctuation\">,</span> sep<span class=\"token operator\">=</span><span class=\"token string\">','</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"data-splits-examples\"><a class=\"anchor\" href=\"#data-splits-examples\">#</a> Data Splits: Examples</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>model_selection <span class=\"token keyword\">import</span> train_test_split</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>model_selection <span class=\"token keyword\">import</span> cross_val_score</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>model_selection <span class=\"token keyword\">import</span> KFold</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">from</span> matplotlib <span class=\"token keyword\">import</span> pyplot <span class=\"token keyword\">as</span> plt</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> matplotlib <span class=\"token keyword\">as</span> mpl</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">import</span> seaborn <span class=\"token keyword\">as</span> sns</pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">.</span>columns<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># Assume last column is your label, other columns are features</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\"># 假设最后一列是标签，其他列是特征</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>X <span class=\"token operator\">=</span> df<span class=\"token punctuation\">.</span>loc<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> df<span class=\"token punctuation\">.</span>columns<span class=\"token operator\">!=</span><span class=\"token string\">'GradeLetter'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>y <span class=\"token operator\">=</span> df<span class=\"token punctuation\">.</span>loc<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span><span class=\"token string\">'GradeLetter'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>X<span class=\"token punctuation\">.</span>columns<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>X<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token comment\"># hold-out data split </span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token comment\"># API: https://scikit-learn.org/stable/modules/generated/sklearn.model_selection.train_test_split.html</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>x_train<span class=\"token punctuation\">,</span> x_test<span class=\"token punctuation\">,</span> y_train<span class=\"token punctuation\">,</span> y_test <span class=\"token operator\">=</span> train_test_split<span class=\"token punctuation\">(</span>X<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> test_size<span class=\"token operator\">=</span><span class=\"token number\">0.2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\"># N-fold data split</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\"># API: https://scikit-learn.org/stable/modules/generated/sklearn.model_selection.KFold.html</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>kf <span class=\"token operator\">=</span> KFold<span class=\"token punctuation\">(</span>n_splits<span class=\"token operator\">=</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> shuffle<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>data_5folds <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token keyword\">for</span> train_index<span class=\"token punctuation\">,</span> test_index <span class=\"token keyword\">in</span> kf<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span>X<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"TRAIN:\"</span><span class=\"token punctuation\">,</span> train_index<span class=\"token punctuation\">,</span> <span class=\"token string\">\"TEST:\"</span><span class=\"token punctuation\">,</span> test_index<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token comment\"># get actual data by index 按索引获取实际数据</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    x_train<span class=\"token punctuation\">,</span> x_test <span class=\"token operator\">=</span> X<span class=\"token punctuation\">.</span>iloc<span class=\"token punctuation\">[</span>train_index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> X<span class=\"token punctuation\">.</span>iloc<span class=\"token punctuation\">[</span>test_index<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    y_train<span class=\"token punctuation\">,</span> y_test <span class=\"token operator\">=</span> y<span class=\"token punctuation\">[</span>train_index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">[</span>test_index<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token comment\"># save data into fold</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    fold <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>x_train<span class=\"token punctuation\">,</span> x_test<span class=\"token punctuation\">,</span> y_train<span class=\"token punctuation\">,</span> y_test<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token comment\"># add each fold data into 5folds</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    data_5folds<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>fold<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token comment\"># N-fold cross validation</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token comment\"># API: https://scikit-learn.org/stable/modules/generated/sklearn.model_selection.cross_val_score.html</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token comment\"># acc=cross_val_score(clf, x, y, cv=5, scoring='accuracy').mean()</span></pre></td></tr></table></figure>",
            "tags": [
                "计算机科学",
                "Master of Software Engineering",
                "ITMD 522. Data Mining and Machine Learning",
                "数据挖掘",
                "机器学习"
            ]
        },
        {
            "id": "https://shoka.lostyu.me/computer-science/mse/itmd-522/mid-term/",
            "url": "https://shoka.lostyu.me/computer-science/mse/itmd-522/mid-term/",
            "title": "Midterm Review",
            "date_published": "2022-03-03T08:12:36.000Z",
            "content_html": "<h1 id=\"data-and-data-types\"><a class=\"anchor\" href=\"#data-and-data-types\">#</a> Data and Data Types</h1>\n<ul>\n<li>\n<p>Attribute (ordimensions, features, variables): a data field, representing a characteristic or feature of a data object.<br />\n 属性 (或维度、特征、变量)：数据字段，表示数据对象的特征或特征。</p>\n<ul>\n<li>E.g., customer_ID, name, address</li>\n</ul>\n</li>\n<li>\n<p>Types</p>\n<ul>\n<li><a href=\"/computer-science/mse/itmd-522/lecture-1/#qualitative-categoricalnominal-%E5%AE%9A%E6%80%A7%E6%A0%87%E7%A7%B0%E5%9E%8B\">Categorical</a>\n<ul>\n<li>Nominal 标称型变量</li>\n<li>Binary 二元的</li>\n<li>Ordinal 有序的</li>\n</ul>\n</li>\n<li><a href=\"/computer-science/mse/itmd-522/lecture-1/#quantitative-numerical-%E5%AE%9A%E9%87%8F%E6%95%B0%E5%80%BC%E5%9E%8B\">Numerical</a>\n<ul>\n<li>Interval-scaled or Ratio-scaled 间隔标度或比率标度</li>\n<li>Discrete or continuous 离散和连续</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zMi5sb2xpLm5ldC8yMDIyLzAzLzA0L0ZnOGFyQ1NaUE9lcEp6RC5wbmc=\"></span></p>\n<blockquote>\n<p>一旦有了数据，则可能需要执行数据预处理。</p>\n</blockquote>\n<h1 id=\"data-preprocessing\"><a class=\"anchor\" href=\"#data-preprocessing\">#</a> Data Preprocessing</h1>\n<ul>\n<li>Deal with Missing values 处理缺失值\n<ul>\n<li>What are the possible solutions?</li>\n</ul>\n<blockquote>\n<p><a href=\"/computer-science/mse/itmd-522/lecture-1/#missing-values-%E7%BC%BA%E5%A4%B1%E5%80%BC\">Missing Values</a><br />\n 如果是数值型变量，则求解缺失数据。<br />\n如果是标称型变量，则填写缺失数据。</p>\n</blockquote>\n</li>\n<li>Reduce variance for a numerical variable: <a href=\"/computer-science/mse/itmd-522/lecture-1/#binning\">binning</a><br />\n 减少数值变量的方差</li>\n<li><a href=\"computer-science/mse/itmd-522/lecture-1/#correlation-analysis-%E7%9B%B8%E5%85%B3%E5%88%86%E6%9E%90\">Correlation analysis</a>: for different variables<br />\n 相关分析</li>\n<li><a href=\"/computer-science/mse/itmd-522/lecture-1/#data-transformation-%E6%95%B0%E6%8D%AE%E5%8F%98%E6%8D%A2\">Data Normalization</a>\n<ul>\n<li><a href=\"/computer-science/mse/itmd-522/lecture-1/#min-max-normalization-%E6%9E%81%E5%B0%8F%E6%9E%81%E5%A4%A7%E5%BD%92%E4%B8%80%E5%8C%96\">Min-max</a>, <a href=\"/computer-science/mse/itmd-522/lecture-1/#z-score-normalization-z%E5%88%86%E5%BD%92%E4%B8%80%E5%8C%96\">z-score</a>, <a href=\"/computer-science/mse/itmd-522/lecture-1/#decimal-scaling-for-normalization-%E5%8D%81%E8%BF%9B%E5%88%B6%E7%BC%A9%E6%94%BE%E5%BD%92%E4%B8%80%E5%8C%96\">decimal scaling</a></li>\n</ul>\n</li>\n<li>Data Transformation: numerical &lt;--&gt; nominal <a href=\"/computer-science/mse/itmd-522/lecture-1/#discretization-%E7%A6%BB%E6%95%A3%E5%8C%96\">Discretization</a></li>\n<li>Feature <a href=\"/computer-science/mse/itmd-522/lecture-8/#feature-selection-%E7%89%B9%E5%BE%81%E9%80%89%E6%8B%A9-2\">Selection</a> and <a href=\"/computer-science/mse/itmd-522/lecture-8/#feature-reduction-%E7%89%B9%E5%BE%81%E7%BA%A6%E7%AE%80\">Reduction</a>\n<ul>\n<li><a href=\"computer-science/mse/itmd-522/lecture-8/#two-models-of-feature-selection\">Wrapper, Filter Models</a></li>\n<li><a href=\"/computer-science/mse/itmd-522/lecture-8/#principal-component-analysis-%E4%B8%BB%E6%88%90%E5%88%86%E5%88%86%E6%9E%90\">PCA</a></li>\n</ul>\n</li>\n<li><a href=\"/computer-science/mse/itmd-522/lecture-8/#anomalyoutlier-detection-%E5%BC%82%E5%B8%B8%E7%A6%BB%E7%BE%A4%E5%80%BC%E6%A3%80%E6%B5%8B\">Outlier Detection</a></li>\n</ul>\n<h1 id=\"supervised-vs-unsupervised-learning\"><a class=\"anchor\" href=\"#supervised-vs-unsupervised-learning\">#</a> <a href=\"/computer-science/mse/itmd-522/lecture-2/#supervised-vs-unsupervised-learning-%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0%E5%92%8C%E6%97%A0%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0\">Supervised vs. Unsupervised Learning</a></h1>\n<h2 id=\"supervised-learning\"><a class=\"anchor\" href=\"#supervised-learning\">#</a> Supervised Learning</h2>\n<ul>\n<li>infer a (predictive) function from data associated with pre-defined targets/classes/labels<br />\n 从与预定义目标 / 类别 / 标签相关的数据推断（预测）函数</li>\n<li><strong>Example</strong>: group objects by predefined labels<br />\n 示例：按预定义标签对对象进行分组</li>\n<li><strong>Goal</strong>: Learn a model from labelled data (with multiple features) for future  predictions<br />\n 目标：从标记数据 (具有多个特征) 中学习模型，以用于未来的预测</li>\n<li><strong>Outcomes</strong>: We know outcomes: the predefined labels<br />\n 结果：我们知道结果：预定义的标签</li>\n<li><strong>Evaluation</strong>: error/accuracy, and other more metrics<br />\n 评估：错误 / 准确性和其他更多指标</li>\n<li><strong>Data Mining Task</strong>: Classification<br />\n 数据挖掘任务：分类</li>\n</ul>\n<h2 id=\"unsupervised-learning\"><a class=\"anchor\" href=\"#unsupervised-learning\">#</a> Unsupervised Learning</h2>\n<ul>\n<li>discover or describe underlying structure from unlabelled data<br />\n 从未贴标签的数据中发现或描述底层结构</li>\n<li><strong>Example</strong>: group objects by multiple features<br />\n 示例：按多个特征对对象进行分组</li>\n<li><strong>Goal</strong>: Learn the structure from unlabelled data (with multiple features)  Outcomes: We do not know the outcomes<br />\n 目标：从未标记数据（具有多个特征）中学习结构结果：我们不知道结果</li>\n<li><strong>Evaluation</strong>: No clear performance or evaluation methods<br />\n 评估：没有明确的绩效或评估方法</li>\n<li><strong>Data Mining Task</strong>: Clustering<br />\n 数据挖掘任务：聚类</li>\n</ul>\n<h1 id=\"classification\"><a class=\"anchor\" href=\"#classification\">#</a> <a href=\"/computer-science/mse/itmd-522/lecture-2/#classification\">Classification</a></h1>\n<ul>\n<li>\n<p><a href=\"/computer-science/mse/itmd-522/lecture-2/#classification-task-%E4%BB%BB%E5%8A%A1\">Classification Task</a></p>\n</li>\n<li>\n<p><a href=\"/computer-science/mse/itmd-522/lecture-2/#standard-classification-process-%E6%A0%87%E5%87%86%E5%88%86%E7%B1%BB%E6%B5%81%E7%A8%8B\">Standard Classification Process</a></p>\n</li>\n<li>\n<p>Data Splits for <a href=\"/computer-science/mse/itmd-522/lecture-2/#evaluation-%E8%AF%84%E4%BC%B0\">Evaluations</a></p>\n<ul>\n<li><a href=\"/computer-science/mse/itmd-522/lecture-2/#hold-out-evaluation\">Hold-out Evaluation</a></li>\n<li><a href=\"/itmd-522/lecture-2/#n-folds-cross-evaluation-n%E5%80%8D%E4%BA%A4%E5%8F%89%E9%AA%8C%E8%AF%81\">N-folds Cross Evaluation</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/computer-science/mse/itmd-522/lecture-3/#k-nearest-neighbor-knn-classifier-k-%E8%BF%91%E9%82%BB%E7%AE%97%E6%B3%95\">KNN Classifier</a></p>\n</li>\n<li>\n<p><a href=\"/computer-science/mse/itmd-522/lecture-3/#na%C3%AFve-bayes-classifier-%E6%9C%B4%E7%B4%A0%E8%B4%9D%E5%8F%B6%E6%96%AF\">Naïve Bayes Classifier</a></p>\n</li>\n<li>\n<p><a href=\"/computer-science/mse/itmd-522/lecture-4/#decision-trees-%E5%86%B3%E7%AD%96%E6%A0%91\">Decision Trees</a></p>\n</li>\n<li>\n<p><a href=\"/computer-science/mse/itmd-522/lecture-4/#support-vector-machines-svm-%E6%94%AF%E6%8C%81%E5%90%91%E9%87%8F%E6%9C%BA\">SVM</a></p>\n</li>\n<li>\n<p><a href=\"/computer-science/mse/itmd-522/lecture-4/#logistic-regression-logistic%E5%9B%9E%E5%BD%92\">Logistic Regression</a></p>\n</li>\n<li>\n<p><a href=\"/computer-science/mse/itmd-522/lecture-5/#neural-networks\">Neural Networks</a></p>\n</li>\n<li>\n<p><a href=\"/computer-science/mse/itmd-522/lecture-5/#ensembles-of-classifiers-%E5%88%86%E7%B1%BB%E5%99%A8%E9%9B%86%E5%90%88\">Ensemble Classifier</a></p>\n</li>\n<li>\n<p><a href=\"/computer-science/mse/itmd-522/lecture-4/#multi-class-classification-by-binary-classification-%E4%BA%8C%E5%85%83%E5%88%86%E7%B1%BB%E6%B3%95%E7%9A%84%E5%A4%9A%E7%B1%BB%E5%88%86%E7%B1%BB%E6%B3%95\">Binary</a>, Multi-Class and <a href=\"/computer-science/mse/itmd-522/lecture-5/#multi-label-classifications\">Multi-Label</a> classifications</p>\n</li>\n<li>\n<p><a href=\"/computer-science/mse/itmd-522/lecture-3/#imbalance-issue-%E4%B8%8D%E5%B9%B3%E8%A1%A1%E9%97%AE%E9%A2%98\">Imbalance Issues</a> and solutions</p>\n</li>\n<li>\n<p>Classification Evaluations &amp; <a href=\"/computer-science/mse/itmd-522/lecture-3/#classification-evaluation-metrics-%E5%88%86%E7%B1%BB%E8%AF%84%E4%BB%B7%E6%8C%87%E6%A0%87\">Metrics</a></p>\n</li>\n</ul>\n<h1 id=\"clustering-tasksapproaches\"><a class=\"anchor\" href=\"#clustering-tasksapproaches\">#</a> Clustering Tasks/Approaches</h1>\n<dl>\n<dt><a href=\"/computer-science/mse/itmd-522/lecture-6/#partitional-clustering-%E5%88%86%E5%8C%BA%E8%81%9A%E7%B1%BB\">Partitional Clustering</a></dt>\n<dd>just group objects to minimize intra-cluster distances and maximize inter-cluster distances, e.g., K-Means<br />\n 只需将对象分组以最小化簇内距离并最大化簇间距离，例如 K - 均值</dd>\n<dt><a href=\"/computer-science/mse/itmd-522/lecture-6/#hierarchical-algorithms-%E5%88%86%E5%B1%82%E7%AE%97%E6%B3%95\">Hierarchical Clustering</a></dt>\n<dd>a clustering process in order to discover the hierarchical structure, like a hierarchical tree  Example: categories and subcategories; taxonomies<br />\n 为了发现层次结构而进行的聚类过程，如层次树示例：类别和子类别；分类法</dd>\n</dl>\n<h1 id=\"association-rules\"><a class=\"anchor\" href=\"#association-rules\">#</a> Association Rules</h1>\n<ul>\n<li>\n<p><a href=\"/computer-science/mse/itmd-522/lecture-7/#what-is-association-mining-%E4%BB%80%E4%B9%88%E6%98%AF%E5%85%B3%E8%81%94%E6%8C%96%E6%8E%98\">What Is Association Mining?</a></p>\n</li>\n<li>\n<p><a href=\"https://shoka.lostyu.me/computer-science/mse/itmd-522/lecture-7/#support-and-confidence-%E6%94%AF%E6%8C%81%E5%BA%A6%E5%92%8C%E7%BD%AE%E4%BF%A1%E5%BA%A6\">Support and Confidence</a></p>\n</li>\n<li>\n<p><a href=\"/computer-science/mse/itmd-522/lecture-7/#steps-in-association-rule-discovery-%E5%85%B3%E8%81%94%E8%A7%84%E5%88%99%E5%8F%91%E7%8E%B0%E7%9A%84%E6%AD%A5%E9%AA%A4\">Steps in Association Rule Discovery</a></p>\n</li>\n<li>\n<p><a href=\"/computer-science/mse/itmd-522/lecture-7/#apriori-algorithm-an-example\">Apriori Algorithm - An Example</a></p>\n</li>\n</ul>\n",
            "tags": [
                "计算机科学",
                "Master of Software Engineering",
                "ITMD 522. Data Mining and Machine Learning",
                "数据挖掘",
                "机器学习"
            ]
        }
    ]
}